/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.REPORTPARAMETER;

import DB.PAK_DB;
import DB.PAK_GLOBAL_DB;
import static DynamicERP.dialoge.viewforms.dialogeClass.createJasperView;
import DynamicERP.frames.newdataentry.FIRMREC;
import DynamicERP.frames.relationalforms.CUSTREC;
import DynamicERP.frames.relationalforms.EMPREC;
import static DynamicERP.frames.relationalforms.PRODUCTREC.buildAllComboBoxModel;
import static DynamicERP.frames.relationalforms.PRODUCTREC.buildOneComboBoxModel;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import logical.dateIncrementer;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DynamicSP
 */
public class STOCKREPCATCOMP extends javax.swing.JFrame {

    /**
     * Creates new form ExpiryTill
     */
    PAK_GLOBAL_DB dataAA =new PAK_GLOBAL_DB();
    Connection connAA;
   
    public STOCKREPCATCOMP() {
        initComponents();
        
                 try {
                connAA = dataAA.connect_database();
            
            }catch (SQLException e) {
                System.out.println("Exception ===> "+e);
            }
         parameterpan.setBorder(BorderFactory.createTitledBorder("Select Parameter From Here:"));
         reppan.setBorder(BorderFactory.createTitledBorder("Execute Required Report:"));
         

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        reppan = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        exit_rep = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        parameterpan = new javax.swing.JPanel();
        STSUBCATCODE = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lineName1 = new javax.swing.JComboBox();
        lineName = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        ENDSUBCAT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 200, 0, 0));
        setMinimumSize(new java.awt.Dimension(400, 370));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel12.setBackground(new java.awt.Color(0, 102, 102));
        jLabel12.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Stock Report Parameter");
        jLabel12.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 270));

        jButton1.setText("Expiry & Batch Wise Stock");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        exit_rep.setText("Exit After Report Execution");
        exit_rep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_repActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reppanLayout = new javax.swing.GroupLayout(reppan);
        reppan.setLayout(reppanLayout);
        reppanLayout.setHorizontalGroup(
            reppanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reppanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reppanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reppanLayout.createSequentialGroup()
                        .addComponent(exit_rep, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
                    .addGroup(reppanLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        reppanLayout.setVerticalGroup(
            reppanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reppanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reppanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit_rep)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        STSUBCATCODE.setBackground(new java.awt.Color(153, 204, 255));
        STSUBCATCODE.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        STSUBCATCODE.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        STSUBCATCODE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                STSUBCATCODEKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                STSUBCATCODEKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("From Sub Cat:");

        lineName1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lineName1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lineName1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lineName1ItemStateChanged(evt);
            }
        });
        lineName1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                lineName1PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                lineName1PopupMenuWillBecomeVisible(evt);
            }
        });
        lineName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineName1ActionPerformed(evt);
            }
        });
        lineName1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lineName1PropertyChange(evt);
            }
        });

        lineName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lineName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lineName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lineNameItemStateChanged(evt);
            }
        });
        lineName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                lineNamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                lineNamePopupMenuWillBecomeVisible(evt);
            }
        });
        lineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineNameActionPerformed(evt);
            }
        });
        lineName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lineNamePropertyChange(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("To Sub Cat: ");

        ENDSUBCAT.setBackground(new java.awt.Color(153, 204, 255));
        ENDSUBCAT.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        ENDSUBCAT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ENDSUBCAT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ENDSUBCATKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ENDSUBCATKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout parameterpanLayout = new javax.swing.GroupLayout(parameterpan);
        parameterpan.setLayout(parameterpanLayout);
        parameterpanLayout.setHorizontalGroup(
            parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterpanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(STSUBCATCODE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ENDSUBCAT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lineName, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lineName1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parameterpanLayout.setVerticalGroup(
            parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterpanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(STSUBCATCODE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lineName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ENDSUBCAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parameterpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reppan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parameterpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(reppan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lineNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lineNameItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNameItemStateChanged

    private void lineNamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineNamePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNamePopupMenuWillBecomeInvisible

    private void lineNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            lineName.setModel(buildAllComboBoxModel("line"));
            if(setSelectedComboItem(STSUBCATCODE,lineName,((!STSUBCATCODE.getText().isEmpty())?data.find_subCat_Name_by_code(conn, STSUBCATCODE.getText()):""))){

            }else{
                STSUBCATCODE.setText(getCode(lineName.getSelectedItem().toString(),"line"));
            }

            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lineNamePopupMenuWillBecomeVisible

    private void lineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineNameActionPerformed
        System.out.println("lineName.getSelectedItem().toString()"+lineName.getSelectedItem().toString());
        STSUBCATCODE.setText(getCode(lineName.getSelectedItem().toString(),"line"));
    }//GEN-LAST:event_lineNameActionPerformed

    private void lineNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lineNamePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNamePropertyChange

    private void STSUBCATCODEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_STSUBCATCODEKeyPressed

    }//GEN-LAST:event_STSUBCATCODEKeyPressed

    private void STSUBCATCODEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_STSUBCATCODEKeyReleased
        try {
            updateComboBox(STSUBCATCODE, lineName,"line");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_STSUBCATCODEKeyReleased

    private void ENDSUBCATKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ENDSUBCATKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ENDSUBCATKeyPressed

    private void ENDSUBCATKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ENDSUBCATKeyReleased
        try {
            updateComboBox(ENDSUBCAT, lineName1,"line");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ENDSUBCATKeyReleased

    private void lineName1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lineName1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lineName1ItemStateChanged

    private void lineName1PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineName1PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_lineName1PopupMenuWillBecomeInvisible

    private void lineName1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineName1PopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            lineName1.setModel(buildAllComboBoxModel("line"));
            if(setSelectedComboItem(ENDSUBCAT,lineName1,((!ENDSUBCAT.getText().isEmpty())?data.find_subCat_Name_by_code(conn, ENDSUBCAT.getText()):""))){

            }else{
                ENDSUBCAT.setText(getCode(lineName1.getSelectedItem().toString(),"line"));
            }

            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lineName1PopupMenuWillBecomeVisible

    private void lineName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineName1ActionPerformed
        System.out.println("lineName.getSelectedItem().toString()"+lineName1.getSelectedItem().toString());
        ENDSUBCAT.setText(getCode(lineName1.getSelectedItem().toString(),"line"));
    }//GEN-LAST:event_lineName1ActionPerformed

    private void lineName1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lineName1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lineName1PropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                    DynamicERP.dialoge.newdataentry.dialogeClass.disposeStockSubCatWin();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void exit_repActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_repActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exit_repActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String s= "D:\\DynamicERP\\DSP001\\stockRepCatComp.jasper";
            Map parametersMap = new HashMap();

            parametersMap.put("STSUBCAT",Integer.parseInt(STSUBCATCODE.getText()));
            parametersMap.put("ENDSUBCAT",Integer.parseInt(ENDSUBCAT.getText()));

            JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(s, parametersMap, connAA);
            JasperViewer jasperViewer =  new JasperViewer(jasperPrint, false);
            {
                if(exit_rep.isSelected()) {
                    DynamicERP.dialoge.newdataentry.dialogeClass.disposeStockSubCatWin();
                } else {}}
                createJasperView(jasperViewer);
            } catch (Exception e) {
                System.out.println("Exception ===> "+e);
            }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(STOCKREPCATCOMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(STOCKREPCATCOMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(STOCKREPCATCOMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(STOCKREPCATCOMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new STOCKREPCATCOMP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ENDSUBCAT;
    private javax.swing.JTextField STSUBCATCODE;
    private javax.swing.JCheckBox exit_rep;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox lineName;
    private javax.swing.JComboBox lineName1;
    private javax.swing.JPanel parameterpan;
    private javax.swing.JPanel reppan;
    // End of variables declaration//GEN-END:variables

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "loc":
                        if(!name.equals("")){
                            s=data.find_loc_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "cat":
                        if(!name.equals("")){
                            s=data.find_cat_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "com":
                        if(!name.equals("")){
                            s=data.find_com_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "sttype":
                        if(!name.equals("")){
                            s=data.find_st_type_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "line":
                        if(!name.equals("")){
                            s=data.find_subCat_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }
     public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)    {
        boolean tf=false;
        String item;
        if(value!=null){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
     private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }


}
