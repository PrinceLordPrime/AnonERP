/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.relationalforms;


import DynamicERP.dialoge.viewforms.dialogeClass;
import DB.PAK_DB;
import DB.PAK_SALE_DB;
import logical.Conversions;
import java.awt.Component;
import java.awt.Graphics;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import DynamicERP.frames.newdataentry.FIRMREC;
import DynamicERP.frames.newdataentry.COMPANY;
import static DynamicERP.dialoge.viewforms.ViewFormId.isSaved;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewCreditWin;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewRecoveryWin;
import DynamicERP.frames.sales.SALES;
import java.math.BigDecimal;
import javax.swing.BorderFactory;

/**
 *
 * @author UzairYousafZai
 */
public class RECOVERY extends javax.swing.JFrame {
    Conversions dateField=new Conversions();
    private boolean isCredit=false;
    /**
     * Creates new form RECOVERY
     */
    public RECOVERY() throws ParseException {
        initComponents();
        //1 = recovery 2 = credit
         
        pan_credit.setBorder(BorderFactory.createTitledBorder("Credit Record Managments: "));
        pan_recovery.setBorder(BorderFactory.createTitledBorder("Recovery Record Managments: "));
        pan_recoveryreport.setBorder(BorderFactory.createTitledBorder("Execute Recovery Reports: "));
        pan_creditreport.setBorder(BorderFactory.createTitledBorder("Execute Credit Reports: "));
 
        styleComboBox(custC);
        styleComboBox(custR);
        styleComboBox(sm1C);
        styleComboBox(sm1R);
        styleComboBox(vanNameC);
        styleComboBox(vanNameR);
        styleComboBox(typeName);
        styleComboBox(cashTypeR);
        styleComboBox(compName);
        styleComboBox(compName1);
        
        textFieldsEditable(false);
        textFieldsEditable1(false);
        code.setEditable(false);
        code1.setEditable(false);
//        recEditActionBtnVisible(false);
//        recEditActionBtnVisible1(false);
        saveUpdateBtnVisible("all", false);
        saveUpdateBtnVisible1("all", false);
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_recovery(conn,isCredit);
            if(stock!=null){
                setTextinRecovery(stock, dateField);
            }else{
                textFieldsEditable(true);
                cust.requestFocus();
                recEditBtnEnable(false);
                forBackBtnEnable(false);
                saveUpdateBtnVisible("save",true);
//                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Empty DB");
            }
            isCredit=true;
            ArrayList<String> stock1 = data.get_first_recovery(conn,isCredit);
            if(stock1!=null){
                setTextinCredit(stock1, dateField);
            }else{
                textFieldsEditable1(true);
                cust1.requestFocus();
                recEditBtnEnable1(false);
                forBackBtnEnable1(false);
                saveUpdateBtnVisible1("save",true);
//                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Empty DB");
            }
            isCredit=false;
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pan_recovery = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPriorR = new javax.swing.JButton();
        btnSearchNowR = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cashType = new javax.swing.JTextField();
        btnSearchR = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnViewR = new javax.swing.JButton();
        btnLastR = new javax.swing.JButton();
        btnFirstR = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cell = new javax.swing.JTextField();
        btnAddR = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnNextR = new javax.swing.JButton();
        vanNameR = new javax.swing.JComboBox();
        cashTypeR = new javax.swing.JComboBox();
        btnSaveR = new javax.swing.JButton();
        btnDelR = new javax.swing.JButton();
        custR = new javax.swing.JComboBox();
        btnEditR = new javax.swing.JButton();
        sm1R = new javax.swing.JComboBox();
        remarks = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cust = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        freight = new javax.swing.JTextField();
        oDate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        sm1 = new javax.swing.JTextField();
        code = new javax.swing.JTextField();
        btnUpdateR = new javax.swing.JButton();
        amount = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnCancelR = new javax.swing.JButton();
        add = new javax.swing.JTextField();
        vanCode2 = new javax.swing.JTextField();
        compName = new javax.swing.JComboBox();
        compCode = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        pan_recoveryreport = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pan_credit = new javax.swing.JPanel();
        sm1C = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        btnEditR1 = new javax.swing.JButton();
        custC = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        add1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        remarks1 = new javax.swing.JTextField();
        vanNameC = new javax.swing.JComboBox();
        btnAddR1 = new javax.swing.JButton();
        btnPriorR1 = new javax.swing.JButton();
        btnUpdateR1 = new javax.swing.JButton();
        btnSaveR1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        oDate1 = new com.toedter.calendar.JDateChooser();
        cust1 = new javax.swing.JTextField();
        btnSearchNowR1 = new javax.swing.JButton();
        btnViewR1 = new javax.swing.JButton();
        btnCancelR1 = new javax.swing.JButton();
        sm3 = new javax.swing.JTextField();
        btnNextR1 = new javax.swing.JButton();
        btnFirstR1 = new javax.swing.JButton();
        btnSearchR1 = new javax.swing.JButton();
        typeName = new javax.swing.JComboBox();
        freight1 = new javax.swing.JTextField();
        amount1 = new javax.swing.JTextField();
        cashType1 = new javax.swing.JTextField();
        code1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnLastR1 = new javax.swing.JButton();
        cell1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btnDelR1 = new javax.swing.JButton();
        vanCode = new javax.swing.JTextField();
        compName1 = new javax.swing.JComboBox();
        compCode1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        pan_creditreport = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(750, 575));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel23.setBackground(new java.awt.Color(0, 102, 102));
        jLabel23.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Recovery & Credit Management");
        jLabel23.setToolTipText("");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/expence 72.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel24)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jLabel25.setBackground(new java.awt.Color(0, 153, 153));
        jLabel25.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane.setMinimumSize(new java.awt.Dimension(750, 44));

        jLabel9.setText("Date:");

        jLabel4.setText("SM1:");

        jLabel2.setText("Add1:");

        btnPriorR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPriorR.setText("Prior");
        btnPriorR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorRActionPerformed(evt);
            }
        });

        btnSearchNowR.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNowR.setText("Search Now");
        btnSearchNowR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowRActionPerformed(evt);
            }
        });

        jLabel3.setText("Contact:");

        cashType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashTypeKeyReleased(evt);
            }
        });

        btnSearchR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearchR.setText("Search");
        btnSearchR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRActionPerformed(evt);
            }
        });

        jLabel8.setText("Cash Type:");

        btnViewR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnViewR.setText("View");
        btnViewR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRActionPerformed(evt);
            }
        });

        btnLastR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLastR.setText("Last");
        btnLastR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastRActionPerformed(evt);
            }
        });

        btnFirstR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirstR.setText("First");
        btnFirstR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstRActionPerformed(evt);
            }
        });

        jLabel1.setText("Doc Code:");

        btnAddR.setBackground(new java.awt.Color(0, 102, 51));
        btnAddR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAddR.setForeground(new java.awt.Color(255, 255, 255));
        btnAddR.setText("Add");
        btnAddR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRActionPerformed(evt);
            }
        });

        jLabel7.setText("Customer:");

        btnNextR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNextR.setText("Next");
        btnNextR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextRActionPerformed(evt);
            }
        });

        vanNameR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vanNameR.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                vanNameRPopupMenuWillBecomeVisible(evt);
            }
        });
        vanNameR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanNameRActionPerformed(evt);
            }
        });

        cashTypeR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cashTypeR.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cashTypeRPopupMenuWillBecomeVisible(evt);
            }
        });
        cashTypeR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashTypeRActionPerformed(evt);
            }
        });

        btnSaveR.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSaveR.setText("Save");
        btnSaveR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRActionPerformed(evt);
            }
        });

        btnDelR.setBackground(new java.awt.Color(255, 102, 102));
        btnDelR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDelR.setText("Delete");
        btnDelR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelRActionPerformed(evt);
            }
        });

        custR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        custR.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                custRPopupMenuWillBecomeVisible(evt);
            }
        });
        custR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custRActionPerformed(evt);
            }
        });

        btnEditR.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEditR.setText("Edit");
        btnEditR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRActionPerformed(evt);
            }
        });

        sm1R.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sm1R.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                sm1RPopupMenuWillBecomeVisible(evt);
            }
        });
        sm1R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm1RActionPerformed(evt);
            }
        });

        remarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarksActionPerformed(evt);
            }
        });

        jLabel6.setText("Remarkes:");

        cust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custActionPerformed(evt);
            }
        });
        cust.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                custKeyReleased(evt);
            }
        });

        jLabel5.setText("Van:");

        freight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freightActionPerformed(evt);
            }
        });

        jLabel14.setText("Freigt:");

        sm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm1ActionPerformed(evt);
            }
        });
        sm1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sm1KeyReleased(evt);
            }
        });

        btnUpdateR.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdateR.setText("update");
        btnUpdateR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRActionPerformed(evt);
            }
        });

        jLabel13.setText("Ammount:");

        btnCancelR.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancelR.setText("Cancel");
        btnCancelR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelRActionPerformed(evt);
            }
        });

        vanCode2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vanCode2KeyReleased(evt);
            }
        });

        compName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        compName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                compNamePopupMenuWillBecomeVisible(evt);
            }
        });
        compName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compNameActionPerformed(evt);
            }
        });

        compCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                compCodeKeyReleased(evt);
            }
        });

        jLabel26.setText("Companey:");

        jButton10.setBackground(new java.awt.Color(0, 102, 102));
        jButton10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Exit");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan_recoveryLayout = new javax.swing.GroupLayout(pan_recovery);
        pan_recovery.setLayout(pan_recoveryLayout);
        pan_recoveryLayout.setHorizontalGroup(
            pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_recoveryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(freight, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(oDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remarks, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10))
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addComponent(btnFirstR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPriorR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNextR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLastR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(code, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pan_recoveryLayout.createSequentialGroup()
                                    .addComponent(cashType, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cashTypeR, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_recoveryLayout.createSequentialGroup()
                                    .addComponent(sm1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sm1R, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_recoveryLayout.createSequentialGroup()
                                    .addComponent(vanCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(vanNameR, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cell, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_recoveryLayout.createSequentialGroup()
                                    .addComponent(cust, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(custR, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addComponent(btnSearchNowR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveR, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compCode, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pan_recoveryLayout.setVerticalGroup(
            pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_recoveryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirstR)
                    .addComponent(btnPriorR)
                    .addComponent(btnNextR)
                    .addComponent(btnLastR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(custR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sm1R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vanCode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vanNameR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addComponent(btnAddR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelR)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cashTypeR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(remarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(oDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_recoveryLayout.createSequentialGroup()
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(freight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_recoveryLayout.createSequentialGroup()
                        .addComponent(jButton10)
                        .addGap(15, 15, 15)))
                .addGroup(pan_recoveryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveR)
                    .addComponent(btnSearchNowR)
                    .addComponent(btnUpdateR)
                    .addComponent(btnCancelR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pan_recoveryreportLayout = new javax.swing.GroupLayout(pan_recoveryreport);
        pan_recoveryreport.setLayout(pan_recoveryreportLayout);
        pan_recoveryreportLayout.setHorizontalGroup(
            pan_recoveryreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );
        pan_recoveryreportLayout.setVerticalGroup(
            pan_recoveryreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pan_recovery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_recoveryreport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_recovery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pan_recoveryreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Recovery Management", jPanel1);

        sm1C.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sm1C.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                sm1CPopupMenuWillBecomeVisible(evt);
            }
        });
        sm1C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm1CActionPerformed(evt);
            }
        });
        sm1C.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sm1CKeyReleased(evt);
            }
        });

        jLabel12.setText("Date:");

        btnEditR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEditR1.setText("Edit");
        btnEditR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditR1ActionPerformed(evt);
            }
        });

        custC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        custC.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                custCPopupMenuWillBecomeVisible(evt);
            }
        });
        custC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custCActionPerformed(evt);
            }
        });
        custC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                custCKeyReleased(evt);
            }
        });

        jLabel15.setText("Credit Amt:");

        jLabel17.setText("SM1:");

        remarks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarks1ActionPerformed(evt);
            }
        });

        vanNameC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vanNameC.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                vanNameCPopupMenuWillBecomeVisible(evt);
            }
        });
        vanNameC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanNameCActionPerformed(evt);
            }
        });

        btnAddR1.setBackground(new java.awt.Color(0, 102, 51));
        btnAddR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAddR1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddR1.setText("Add");
        btnAddR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddR1ActionPerformed(evt);
            }
        });

        btnPriorR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPriorR1.setText("Prior");
        btnPriorR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorR1ActionPerformed(evt);
            }
        });

        btnUpdateR1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdateR1.setText("update");
        btnUpdateR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateR1ActionPerformed(evt);
            }
        });

        btnSaveR1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSaveR1.setText("Save");
        btnSaveR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveR1ActionPerformed(evt);
            }
        });

        jLabel22.setText("Doc Code:");

        jLabel21.setText("Van:");

        cust1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cust1KeyReleased(evt);
            }
        });

        btnSearchNowR1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNowR1.setText("Search Now");
        btnSearchNowR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowR1ActionPerformed(evt);
            }
        });

        btnViewR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnViewR1.setText("View");
        btnViewR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewR1ActionPerformed(evt);
            }
        });

        btnCancelR1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancelR1.setText("Cancel");
        btnCancelR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelR1ActionPerformed(evt);
            }
        });

        sm3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sm3KeyReleased(evt);
            }
        });

        btnNextR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNextR1.setText("Next");
        btnNextR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextR1ActionPerformed(evt);
            }
        });

        btnFirstR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirstR1.setText("First");
        btnFirstR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstR1ActionPerformed(evt);
            }
        });

        btnSearchR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearchR1.setText("Search");
        btnSearchR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchR1ActionPerformed(evt);
            }
        });

        typeName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        typeName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                typeNamePopupMenuWillBecomeVisible(evt);
            }
        });
        typeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeNameActionPerformed(evt);
            }
        });

        freight1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freight1ActionPerformed(evt);
            }
        });

        amount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount1ActionPerformed(evt);
            }
        });

        cashType1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashType1KeyReleased(evt);
            }
        });

        jLabel16.setText("Cash Type:");

        jLabel18.setText("Contact:");

        jLabel19.setText("Customer:");

        jLabel11.setText("Add1:");

        btnLastR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLastR1.setText("Last");
        btnLastR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastR1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Remarkes:");

        jLabel20.setText("Freigt:");

        btnDelR1.setBackground(new java.awt.Color(255, 102, 102));
        btnDelR1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDelR1.setText("Delete");
        btnDelR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelR1ActionPerformed(evt);
            }
        });

        vanCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vanCodeKeyReleased(evt);
            }
        });

        compName1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        compName1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                compName1PopupMenuWillBecomeVisible(evt);
            }
        });
        compName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compName1ActionPerformed(evt);
            }
        });

        compCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                compCode1KeyReleased(evt);
            }
        });

        jLabel27.setText("Companey:");

        javax.swing.GroupLayout pan_creditLayout = new javax.swing.GroupLayout(pan_credit);
        pan_credit.setLayout(pan_creditLayout);
        pan_creditLayout.setHorizontalGroup(
            pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_creditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(code1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pan_creditLayout.createSequentialGroup()
                                    .addComponent(cashType1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(typeName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_creditLayout.createSequentialGroup()
                                    .addComponent(sm3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sm1C, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_creditLayout.createSequentialGroup()
                                    .addComponent(vanCode, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(vanNameC, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cell1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan_creditLayout.createSequentialGroup()
                                    .addComponent(cust1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(custC, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addComponent(btnFirstR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPriorR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNextR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLastR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amount1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(freight1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(remarks1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(oDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addComponent(btnSearchNowR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveR1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelR1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compName1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pan_creditLayout.setVerticalGroup(
            pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_creditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirstR1)
                    .addComponent(btnPriorR1)
                    .addComponent(btnNextR1)
                    .addComponent(btnLastR1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(code1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(cust1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(custC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cell1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sm3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sm1C, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vanCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vanNameC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_creditLayout.createSequentialGroup()
                        .addComponent(btnAddR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelR1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compCode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(remarks1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(oDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(amount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(freight1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_creditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchNowR1)
                    .addComponent(btnCancelR1)
                    .addComponent(btnSaveR1)
                    .addComponent(btnUpdateR1))
                .addContainerGap())
        );

        javax.swing.GroupLayout pan_creditreportLayout = new javax.swing.GroupLayout(pan_creditreport);
        pan_creditreport.setLayout(pan_creditreportLayout);
        pan_creditreportLayout.setHorizontalGroup(
            pan_creditreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );
        pan_creditreportLayout.setVerticalGroup(
            pan_creditreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pan_credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_creditreport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_creditreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pan_credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Credit Management", jPanel2);

        jScrollPane1.setViewportView(jTabbedPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void remarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarksActionPerformed

    private void freightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_freightActionPerformed

    private void btnLastRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastRActionPerformed
        try {
            setLastRec();
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLastRActionPerformed

    private void btnPriorRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorRActionPerformed
        
        setPrior();
    }//GEN-LAST:event_btnPriorRActionPerformed

    private void btnFirstRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstRActionPerformed
        try {
            setFirstRec();
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFirstRActionPerformed

    private void btnNextRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextRActionPerformed
        setNext();
    }//GEN-LAST:event_btnNextRActionPerformed

    private void btnDelRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelRActionPerformed
       delete(); 
    }//GEN-LAST:event_btnDelRActionPerformed

    private void btnViewRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRActionPerformed
//        /*
        try {
            createViewRecoveryWin();
        } catch (SQLException ex) {
            Logger.getLogger(COMPANY.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeRecovery);
            searchNow(dialogeClass.codeRecovery);
        }else{
            //            JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
//        */
    }//GEN-LAST:event_btnViewRActionPerformed

    private void btnSearchRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        btnSearchNowR.setVisible(true);
        btnCancelR.setVisible(true);
        code.setEditable(true);
        textFieldsEditable(false);
        saveUpdateBtnVisible("search", true);
        setNullTextFields();
        code.setText("");
        code.requestFocus();
    }//GEN-LAST:event_btnSearchRActionPerformed

    private void btnAddRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
        setNullTextFields();
        cust.requestFocus();
        try {
            oDate1.setDate(dateField.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
        code.setText("");
    }//GEN-LAST:event_btnAddRActionPerformed

    private void btnEditRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRActionPerformed
        textFieldsEditable(true);
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("update", true);
        cust.setEditable(true);
        cust.requestFocus();
//        btnSaveR.setEnabled(false);
//        btnUpdateR.setVisible(true);
//        btnCancelR.setVisible(true);
    }//GEN-LAST:event_btnEditRActionPerformed

    private void btnSaveRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRActionPerformed
        save();
    }//GEN-LAST:event_btnSaveRActionPerformed

    private void btnSearchNowRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowRActionPerformed
        searchNow(code.getText());
    }//GEN-LAST:event_btnSearchNowRActionPerformed

    private void btnCancelRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelRActionPerformed
        saveUpdateBtnVisible("all", false);
        forBackBtnEnable(true);
        recEditBtnEnable(true);
        textFieldsEditable(false);
        try {
            setFirstRec();
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelRActionPerformed

    private void btnUpdateRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRActionPerformed
        updateRecord();
    }//GEN-LAST:event_btnUpdateRActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DynamicERP.dialoge.newdataentry.dialogeClass.disposeRecoveryWin();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void remarks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarks1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarks1ActionPerformed

    private void freight1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freight1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_freight1ActionPerformed

    private void btnFirstR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstR1ActionPerformed
        try {
            isCredit=true;
            setFirstRec();
            isCredit=false;
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFirstR1ActionPerformed

    private void btnPriorR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorR1ActionPerformed
        isCredit=true;
        setPrior();
        isCredit=false;
    }//GEN-LAST:event_btnPriorR1ActionPerformed

    private void btnNextR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextR1ActionPerformed
        isCredit=true;
        setNext();
        isCredit=false;
    }//GEN-LAST:event_btnNextR1ActionPerformed

    private void btnLastR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastR1ActionPerformed
        try {
            isCredit=true;
            setLastRec();
            isCredit=false;
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLastR1ActionPerformed

    private void btnDelR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelR1ActionPerformed
        isCredit=true;
        delete();
        isCredit=false;
    }//GEN-LAST:event_btnDelR1ActionPerformed

    private void btnViewR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewR1ActionPerformed
        //        /*
        isCredit=true;
        try {
            createViewCreditWin();
        } catch (SQLException ex) {
            Logger.getLogger(COMPANY.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeCredit);
            searchNow(dialogeClass.codeCredit);
        }else{
            //            JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        isCredit=false;
//        */
    }//GEN-LAST:event_btnViewR1ActionPerformed

    private void btnSearchR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchR1ActionPerformed
        forBackBtnEnable1(false);
        recEditBtnEnable1(false);
        btnSearchNowR1.setVisible(true);
        btnCancelR1.setVisible(true);
        code1.setEditable(true);
        textFieldsEditable(false);
        setNullTextFields1();
        saveUpdateBtnVisible1("search", true);
        code1.setText("");
        code1.requestFocus();
    }//GEN-LAST:event_btnSearchR1ActionPerformed

    private void btnAddR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddR1ActionPerformed
        forBackBtnEnable1(false);
        recEditBtnEnable1(false);
        saveUpdateBtnVisible1("save", true);
        textFieldsEditable1(true);
        setNullTextFields1();
        cust1.requestFocus();
        try {
            oDate.setDate(dateField.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
        code1.setText("");
    }//GEN-LAST:event_btnAddR1ActionPerformed

    private void btnEditR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditR1ActionPerformed
        textFieldsEditable1(true);
        forBackBtnEnable1(false);
        recEditBtnEnable1(false);
        cust1.setEditable(true);
        cust1.requestFocus();
//        btnSaveR1.setEnabled(false);
        saveUpdateBtnVisible1("update", true);
        
    }//GEN-LAST:event_btnEditR1ActionPerformed

    private void btnSearchNowR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowR1ActionPerformed
        isCredit=true;
        searchNow(code1.getText());
        isCredit=false;
    }//GEN-LAST:event_btnSearchNowR1ActionPerformed

    private void btnSaveR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveR1ActionPerformed
        isCredit=true;
        save();
        isCredit=false;
    }//GEN-LAST:event_btnSaveR1ActionPerformed

    private void btnUpdateR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateR1ActionPerformed
        isCredit=true;
        updateRecord();
        isCredit=false;
    }//GEN-LAST:event_btnUpdateR1ActionPerformed

    private void btnCancelR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelR1ActionPerformed
//        recEditActionBtnVisible1(false);
        saveUpdateBtnVisible1("all", false);
        forBackBtnEnable1(true);
        recEditBtnEnable1(true);
        textFieldsEditable1(false);
        try {
            isCredit=true;
            setFirstRec();
            isCredit=false;
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelR1ActionPerformed

    private void amount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amount1ActionPerformed

    private void custKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custKeyReleased
        try {
            updateComboBox(cust, custR,"cust");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custKeyReleased

    private void sm1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sm1KeyReleased
        try {
            updateComboBox(sm1, sm1R,"sm");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sm1KeyReleased

    private void vanCode2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCode2KeyReleased
         try {
            updateComboBox(vanCode2, vanNameR,"van");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanCode2KeyReleased

    private void cashTypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashTypeKeyReleased
        try {
            updateComboBox(cashType, cashTypeR,"cashtype");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cashTypeKeyReleased

    private void custCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custCKeyReleased
    }//GEN-LAST:event_custCKeyReleased

    private void sm1CKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sm1CKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sm1CKeyReleased

    private void sm3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sm3KeyReleased
        try {
            updateComboBox(sm3, sm1C,"sm");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sm3KeyReleased

    private void vanCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCodeKeyReleased
        try {
            updateComboBox(vanCode, vanNameC,"van");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanCodeKeyReleased

    private void cashType1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashType1KeyReleased
        try {
            updateComboBox(cashType1, typeName,"cashtype");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cashType1KeyReleased

    private void cust1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cust1KeyReleased
        isCredit=true;
        try {
            updateComboBox(cust1, custC,"cust");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
        isCredit=false;
    }//GEN-LAST:event_cust1KeyReleased

    private void sm1CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm1CActionPerformed
        System.out.println("sm1C.getSelectedItem().toString()"+sm1C.getSelectedItem().toString());
        sm3.setText(getCode(sm1C.getSelectedItem().toString(),"sm"));
    }//GEN-LAST:event_sm1CActionPerformed

    private void vanNameCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanNameCActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+vanNameC.getSelectedItem().toString());
        vanCode.setText(getCode(vanNameC.getSelectedItem().toString(),"van"));
    }//GEN-LAST:event_vanNameCActionPerformed

    private void typeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeNameActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+typeName.getSelectedItem().toString());
        cashType1.setText(getCode(typeName.getSelectedItem().toString(),"cashtype"));
    }//GEN-LAST:event_typeNameActionPerformed

    private void sm1RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm1RActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+sm1R.getSelectedItem().toString());
        sm1.setText(getCode(sm1R.getSelectedItem().toString(),"sm"));
    }//GEN-LAST:event_sm1RActionPerformed

    private void vanNameRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanNameRActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+vanNameR.getSelectedItem().toString());
        vanCode2.setText(getCode(vanNameR.getSelectedItem().toString(),"van"));
    }//GEN-LAST:event_vanNameRActionPerformed

    private void cashTypeRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashTypeRActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+cashTypeR.getSelectedItem().toString());
        cashType.setText(getCode(cashTypeR.getSelectedItem().toString(),"cashtype"));
    }//GEN-LAST:event_cashTypeRActionPerformed

    private void custRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custRActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+custR.getSelectedItem().toString());
        cust.setText(getCode(custR.getSelectedItem().toString(),"cust"));
    }//GEN-LAST:event_custRActionPerformed

    private void custRPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_custRPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            custR.setModel(buildAllComboBoxModel("cust"));
            if(setSelectedComboItem(cust,custR,((!cust.getText().isEmpty())?data.find_cust_rec_name_by_code(conn, cust.getText()):""))){
                
            }else{
                cust.setText(getCode(custR.getSelectedItem().toString(),"cust"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custRPopupMenuWillBecomeVisible

    private void sm1RPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_sm1RPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            sm1R.setModel(buildAllComboBoxModel("sm"));
            if(setSelectedComboItem(sm1,sm1R,((!sm1.getText().isEmpty())?data.find_sm_name_by_code(conn, sm1.getText()):""))){
                
            }else{
                sm1.setText(getCode(sm1R.getSelectedItem().toString(),"sm"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sm1RPopupMenuWillBecomeVisible

    private void vanNameRPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_vanNameRPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            vanNameR.setModel(buildAllComboBoxModel("van"));
            if(setSelectedComboItem(vanCode2,vanNameR,((!vanCode2.getText().isEmpty())?data.find_van_name_by_code(conn, vanCode2.getText()):""))){
                
            }else{
                vanCode2.setText(getCode(vanNameR.getSelectedItem().toString(),"sm"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_vanNameRPopupMenuWillBecomeVisible

    private void cashTypeRPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cashTypeRPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            cashTypeR.setModel(buildAllComboBoxModel("cashtype"));
            if(setSelectedComboItem(cashType,cashTypeR,((!cashType.getText().isEmpty())?data.find_cash_type_name_by_code(conn, cashType.getText()):""))){
                
            }else{
                cashType.setText(getCode(cashTypeR.getSelectedItem().toString(),"cashtype"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cashTypeRPopupMenuWillBecomeVisible

    private void custCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custCActionPerformed
        isCredit=true;
        System.out.println("custC.getSelectedItem().toString()"+custC.getSelectedItem().toString());
        cust1.setText(getCode(custC.getSelectedItem().toString(),"cust"));
        isCredit=false;
    }//GEN-LAST:event_custCActionPerformed

    private void custActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custActionPerformed

    private void custCPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_custCPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            custC.setModel(buildAllComboBoxModel("cust"));
            if(setSelectedComboItem(cust1,custC,((!cust1.getText().isEmpty())?data.find_cust_rec_name_by_code(conn, cust1.getText()):""))){
                
            }else{
                cust1.setText(getCode(custC.getSelectedItem().toString(),"cust"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custCPopupMenuWillBecomeVisible

    private void sm1CPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_sm1CPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            sm1C.setModel(buildAllComboBoxModel("sm"));
            if(setSelectedComboItem(sm3,sm1C,((!sm3.getText().isEmpty())?data.find_sm_name_by_code(conn, sm3.getText()):""))){
                
            }else{
                sm3.setText(getCode(sm1C.getSelectedItem().toString(),"sm"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sm1CPopupMenuWillBecomeVisible

    private void vanNameCPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_vanNameCPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            vanNameC.setModel(buildAllComboBoxModel("van"));
            if(setSelectedComboItem(vanCode,vanNameC,((!vanCode.getText().isEmpty())?data.find_van_name_by_code(conn, vanCode.getText()):""))){
                
            }else{
                vanCode.setText(getCode(vanNameC.getSelectedItem().toString(),"van"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanNameCPopupMenuWillBecomeVisible

    private void typeNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_typeNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            typeName.setModel(buildAllComboBoxModel("cashtype"));
            if(setSelectedComboItem(cashType1,typeName,((!cashType1.getText().isEmpty())?data.find_cashtype_name_by_code(conn, cashType1.getText()):""))){
                
            }else{
                cashType1.setText(getCode(typeName.getSelectedItem().toString(),"cashtype"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_typeNamePopupMenuWillBecomeVisible

    private void sm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sm1ActionPerformed

    private void compNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_compNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            compName.setModel(buildAllComboBoxModel("comp"));
            if(setSelectedComboItem(compCode,compName,((!compCode.getText().isEmpty())?data.find_com_name_by_code(conn, compCode.getText()):""))){
                
            }else{
                compCode.setText(getCode(compName.getSelectedItem().toString(),"comp"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_compNamePopupMenuWillBecomeVisible

    private void compNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compNameActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+compName.getSelectedItem().toString());
        compCode.setText(getCode(compName.getSelectedItem().toString(),"comp"));
    }//GEN-LAST:event_compNameActionPerformed

    private void compCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_compCodeKeyReleased
        try {
            updateComboBox(compCode, compName,"comp");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_compCodeKeyReleased

    private void compName1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_compName1PopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            compName1.setModel(buildAllComboBoxModel("comp"));
            if(setSelectedComboItem(compCode1,compName1,((!compCode1.getText().isEmpty())?data.find_com_name_by_code(conn, compCode1.getText()):""))){
                
            }else{
                compCode1.setText(getCode(compName1.getSelectedItem().toString(),"comp"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_compName1PopupMenuWillBecomeVisible

    private void compName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compName1ActionPerformed
        System.out.println("sm2C.getSelectedItem().toString()"+compName1.getSelectedItem().toString());
        compCode1.setText(getCode(compName1.getSelectedItem().toString(),"comp"));
    }//GEN-LAST:event_compName1ActionPerformed

    private void compCode1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_compCode1KeyReleased
       try {
            updateComboBox(compCode1, compName1,"comp");
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_compCode1KeyReleased
    
    private void enableFields(boolean b,int i1) {
      if(i1==1){
          Component[] c3 = new Component[jPanel1.getComponentCount()];//oCunt()];
        c3=jPanel1.getComponents();
        for(int i=0;i<jPanel1.getComponentCount();i++){
            if(c3[i].getClass().toString().contains("javax.swing.JTextField")){
                c3[i].setEnabled(b);
            }
        } 
      }else if(i1==2){
          Component[] c2 = new Component[jPanel2.getComponentCount()];//oCunt()];
        c2=jPanel2.getComponents();
        for(int i=0;i<jPanel2.getComponentCount();i++){
            if(c2[i].getClass().toString().contains("javax.swing.JTextField")){
                c2[i].setEnabled(b);
            }
        }
      }
    }
    public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)
    {
        boolean tf=false;
        String item;
        if(!value.isEmpty()){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RECOVERY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RECOVERY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RECOVERY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RECOVERY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RECOVERY().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField add;
    private javax.swing.JTextField add1;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField amount1;
    private javax.swing.JButton btnAddR;
    private javax.swing.JButton btnAddR1;
    private javax.swing.JButton btnCancelR;
    private javax.swing.JButton btnCancelR1;
    private javax.swing.JButton btnDelR;
    private javax.swing.JButton btnDelR1;
    private javax.swing.JButton btnEditR;
    private javax.swing.JButton btnEditR1;
    private javax.swing.JButton btnFirstR;
    private javax.swing.JButton btnFirstR1;
    private javax.swing.JButton btnLastR;
    private javax.swing.JButton btnLastR1;
    private javax.swing.JButton btnNextR;
    private javax.swing.JButton btnNextR1;
    private javax.swing.JButton btnPriorR;
    private javax.swing.JButton btnPriorR1;
    private javax.swing.JButton btnSaveR;
    private javax.swing.JButton btnSaveR1;
    private javax.swing.JButton btnSearchNowR;
    private javax.swing.JButton btnSearchNowR1;
    private javax.swing.JButton btnSearchR;
    private javax.swing.JButton btnSearchR1;
    private javax.swing.JButton btnUpdateR;
    private javax.swing.JButton btnUpdateR1;
    private javax.swing.JButton btnViewR;
    private javax.swing.JButton btnViewR1;
    private javax.swing.JTextField cashType;
    private javax.swing.JTextField cashType1;
    private javax.swing.JComboBox cashTypeR;
    private javax.swing.JTextField cell;
    private javax.swing.JTextField cell1;
    private javax.swing.JTextField code;
    private javax.swing.JTextField code1;
    private javax.swing.JTextField compCode;
    private javax.swing.JTextField compCode1;
    private javax.swing.JComboBox compName;
    private javax.swing.JComboBox compName1;
    private javax.swing.JTextField cust;
    private javax.swing.JTextField cust1;
    private javax.swing.JComboBox custC;
    private javax.swing.JComboBox custR;
    private javax.swing.JTextField freight;
    private javax.swing.JTextField freight1;
    private javax.swing.JButton jButton10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane;
    private com.toedter.calendar.JDateChooser oDate;
    private com.toedter.calendar.JDateChooser oDate1;
    private javax.swing.JPanel pan_credit;
    private javax.swing.JPanel pan_creditreport;
    private javax.swing.JPanel pan_recovery;
    private javax.swing.JPanel pan_recoveryreport;
    private javax.swing.JTextField remarks;
    private javax.swing.JTextField remarks1;
    private javax.swing.JTextField sm1;
    private javax.swing.JComboBox sm1C;
    private javax.swing.JComboBox sm1R;
    private javax.swing.JTextField sm3;
    private javax.swing.JComboBox typeName;
    private javax.swing.JTextField vanCode;
    private javax.swing.JTextField vanCode2;
    private javax.swing.JComboBox vanNameC;
    private javax.swing.JComboBox vanNameR;
    // End of variables declaration//GEN-END:variables
    private void setFirstRec() throws ParseException {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_recovery(conn,isCredit);
            if(stock==null){
                if(isCredit)
                {
                    setNullTextFields1();
                }else{
                    setNullTextFields();
                }
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                if(isCredit)
                {
                    setTextinCredit(stock,dateField);
                }else{
                    setTextinRecovery(stock, dateField);
                }
//                add.setText(stock.get(2));//from join 
//                cont.setText(stock.get(2));
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setLastRec() throws ParseException {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_recovery_credit_rec(conn,isCredit);
            if(stock!=null){
                if(isCredit){
                    setTextinCredit(stock,dateField);
                }else{
                    setTextinRecovery(stock, dateField);
                }
            }else{
                if(isCredit){
                    setNullTextFields1();
                }else{
                    setNullTextFields();
                }
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void forBackBtnEnable(boolean b) {
       btnFirstR.setEnabled(b);
       btnLastR.setEnabled(b);
       btnPriorR.setEnabled(b);
       btnNextR.setEnabled(b);
    }
    private void saveUpdateBtnVisible(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btnSaveR.setVisible(b);
                break;
            case "update":
                System.out.println(">>> update"+b);
                btnUpdateR.setVisible(b);
                break;
            case "search":
                btnSearchNowR.setVisible(b);
                break;
            case "all":
                btnSearchNowR.setVisible(b);
                btnSaveR.setVisible(b);
                btnUpdateR.setVisible(b);
                break;
        }
        btnCancelR.setVisible(b);
    }
    private void saveUpdateBtnVisible1(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btnSaveR1.setVisible(b);
                break;
            case "update":
                btnUpdateR1.setVisible(b);
                break;
            case "search":
                btnSearchNowR1.setVisible(b);
                break;
            case "all":
                btnSearchNowR1.setVisible(b);
                btnSaveR1.setVisible(b);
                btnUpdateR1.setVisible(b);
                break;
        }
        btnCancelR1.setVisible(b);
    }
    private void recEditBtnEnable(boolean b) {
        btnAddR.setEnabled(b);
        btnDelR.setEnabled(b);
        btnSearchR.setEnabled(b);
        btnViewR.setEnabled(b);
        btnEditR.setEnabled(b);
    }

//    private void recEditActionBtnVisible(boolean b) {
//        btnSaveR.setVisible(b);
//        btnUpdateR.setVisible(b);
//        btnSearchNowR.setVisible(b);
//        btnCancelR.setVisible(b);
//    }
    private void textFieldsEditable(boolean b){
//        code.setEditable(b);
        cust.setEditable(b);
        custR.setEnabled(b);
        add.setEditable(false);
        cell.setEditable(false);
        sm1.setEditable(b);
        sm1R.setEnabled(b);
        vanCode2.setEditable(b);
        vanNameR.setEnabled(b);
        cashType.setEditable(b);
        cashTypeR.setEnabled(b);
        compCode.setEditable(b);
        compName.setEnabled(b);
        remarks.setEditable(b);
        oDate.setEnabled(b);
        amount.setEditable(b);
        freight.setEditable(b);
    }
    private void forBackBtnEnable1(boolean b) {
       btnFirstR1.setEnabled(b);
       btnLastR1.setEnabled(b);
       btnPriorR1.setEnabled(b);
       btnNextR1.setEnabled(b);
    }
    private void recEditBtnEnable1(boolean b) {
        btnAddR1.setEnabled(b);
        btnDelR1.setEnabled(b);
        btnSearchR1.setEnabled(b);
        btnViewR1.setEnabled(b);
        btnEditR1.setEnabled(b);
    }

//    private void recEditActionBtnVisible1(boolean b) {
//        btnSaveR1.setVisible(b);
//        btnUpdateR1.setVisible(b);
//        btnSearchNowR1.setVisible(b);
//        btnCancelR1.setVisible(b);
//    }
    private void textFieldsEditable1(boolean b){
//        code.setEditable(b);
        cust1.setEditable(b);
        custC.setEnabled(b);
        add1.setEditable(false);
        cell1.setEditable(false);
        sm3.setEditable(b);
        sm1C.setEnabled(b);
        vanNameC.setEnabled(b);
        vanCode.setEditable(b);
        cashType1.setEditable(b);
        compCode1.setEditable(b);
        typeName.setEnabled(b);
        compName1.setEnabled(b);
        remarks1.setEditable(b);
        oDate1.setEnabled(b);
        amount1.setEditable(b);
        freight1.setEditable(b);
    }

    private void setNullTextFields() {
        code.setText("");
        cust.setText("");
        add.setText("");
        cell.setText("");
        sm1.setText("");
        vanCode2.setText("");
        cashType.setText("");
        remarks.setText("");
        try {
            oDate.setDate(dateField.toReturnedDate(dateField.getPresentDate().toString()));
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
        amount.setText("");
        freight.setText("");
       
    }
    private void setNullTextFields1() {
        code1.setText("");
        cust1.setText("");
        add1.setText("");
        cell1.setText("");
        sm3.setText("");
        vanCode.setText("");
        cashType1.setText("");
        remarks1.setText("");
        try {
            oDate1.setDate(dateField.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
        amount1.setText("");
        freight1.setText("");
        compCode.setText("");
       
    }

    private void setPrior() {
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            
            String codeReturned;
            codeReturned = (isCredit) ? code1.getText():code.getText();
            
            ArrayList<String> prior = new ArrayList<String>();
            prior=data.prior_recovery_credit_rec(conn,codeReturned,isCredit);
            
            if(prior!=null){
                if(isCredit){
                    setTextinCredit(prior,dateField);
                }else{
                    setTextinRecovery(prior, dateField);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setNext() {
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            
            String codeReturned;
            codeReturned = (isCredit) ? code1.getText():code.getText();
            
            ArrayList<String> next = new ArrayList<String>();
            next=data.next_recovery_credit_rec(conn,codeReturned,isCredit);
            if(!(next==null)){
                if(isCredit)
                {
                    setTextinCredit(next,dateField);
                }else{
                    setTextinRecovery(next, dateField);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchNow(String s1) {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> s = data.find_recovery_credit_rec_by_code(conn, s1,isCredit);
            if (s!=null){
                if(isCredit){
                    setTextinCredit(s, dateField);
                    saveUpdateBtnVisible1("all", false);
                    code1.setEditable(false);
                    forBackBtnEnable1(true);
                    recEditBtnEnable1(true);
                }else
                {
                    setTextinRecovery(s, dateField);
                    saveUpdateBtnVisible("all", false);
                    code.setEditable(false);
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                                        
                }
                
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Asset Found is :"+ s);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void save() {
        if(!(cust.getText().toString().equalsIgnoreCase(""))||!(cust1.getText().toString().equalsIgnoreCase(""))){
            PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;

                ///Max
                int max=0,codeInt=0;
                max=data.find_max_all_in_recovery_credit_rec_code(conn,isCredit);
                System.out.println("Max:"+max);
                if(max==0){
                    codeInt=1;
                }else{
                    codeInt=max+1;
                }
                if(isCredit){
//                                                                                                                                                         date.getDate().toString()                       
                    tf=data.insert_recovery_in_table(conn,String.valueOf(codeInt),cust1.getText(),sm3.getText(),vanCode.getText(),cashType1.getText(),remarks1.getText(),dateField.toDateString(oDate1.getDate().toString()),"0",freight1.getText(),compCode1.getText(),amount1.getText());
                    /*/============================CLIENTS CLBAL===================================
                    PAK_SALE_DB data1 = new PAK_SALE_DB();
                    Connection conn1;
                    try {
                        conn1 = data1.connect_database();
                        String purchaseProduct = data1.get_clbal_from_clints(conn1,cust1.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = (new BigDecimal(purchaseProduct).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                            if(b!=null){
                                data1.update_clbal_in_clints(conn1,b+"",cust1.getText());
                            }
                        }
                        purchaseProduct = data1.get_empCustCredit_from_empRec(conn1,sm3.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = (new BigDecimal(purchaseProduct).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                            if(b!=null){
                                data1.update_empCustCredit_in_empRec(conn1,b+"",sm3.getText());
                            }
                        }
                        conn1.close();
                    }catch (SQLException ex) {
                        Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                    }//=========================================================================  
                    */
                    /*
                    try {
                        //======================CUST legers==================
                        PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                        Connection conn1a;
                        conn1a = data1a.connect_database();
                            try {

                                data1a.insert_cust_ledger(conn1a,
                                        cust1.getText(),
                                        dateField.toDateString(oDate1.getDate().toString()),
                "Credit To "+custC.getSelectedItem()+" Remarks: "+remarks1.getText(),
                                        "0.0",
                                        (Float.parseFloat(amount1.getText())+Float.parseFloat(freight1.getText()))+"",
                                        codeInt+"");

                            } catch (ParseException ex) {
                                Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        data1a.close_database(conn1a);
                        //======================CUST legers==================
                    } catch (SQLException ex) {
                        Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                    }
                        */
                }
                else{   
                   /*/============================CLIENTS CLBAL===================================
                    PAK_SALE_DB data1 = new PAK_SALE_DB();
                    Connection conn1;
                    try {
                        conn1 = data1.connect_database();
                        String purchaseProduct = data1.get_clbal_from_clints(conn1,cust.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = (new BigDecimal(purchaseProduct).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                            if(b!=null){
                                data1.update_clbal_in_clints(conn1,b+"",cust.getText());
                            }
                        }
                        
                        purchaseProduct = data1.get_empCustCredit_from_empRec(conn1,sm1.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = (new BigDecimal(purchaseProduct).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                            if(b!=null){
                                data1.update_empCustCredit_in_empRec(conn1,b+"",sm1.getText());
                            }
                        }
                        conn1.close();
                    }catch (SQLException ex) {
                        Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //=========================================================================                                                                                                                                       date.getDate().toString()                       
                    */
                    tf=data.insert_recovery_in_table(conn,String.valueOf(codeInt),cust.getText(),sm1.getText(),vanCode2.getText(),cashType.getText(),remarks.getText(),dateField.toDateString(oDate.getDate().toString()),amount.getText(),freight.getText(),compCode.getText(),"0");
                    /*
                    try {
                        //======================CUST legers==================
                        PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                        Connection conn1a;
                        conn1a = data1a.connect_database();
                            try {

                                data1a.insert_cust_ledger(conn1a,
                                        cust.getText(),
                                        dateField.toDateString(oDate.getDate().toString()),
                "Recovery From "+custR.getSelectedItem()+" Remarks: "+remarks.getText(),
                                        amount.getText(),
                                        freight.getText(),
                                        codeInt+"");

                            } catch (ParseException ex) {
                                Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        data1a.close_database(conn1a);
                        //======================CUST legers==================
                    } catch (SQLException ex) {
                        Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    */
                }
                if(tf){
                     if(isCredit){
                        code1.setText(String.valueOf(codeInt));
                        forBackBtnEnable1(true);
                        recEditBtnEnable1(true);
                        saveUpdateBtnVisible1("save", false);
                         textFieldsEditable1(false);
                    }
                    else{ 
                        code.setText(String.valueOf(codeInt));
                        forBackBtnEnable(true);
                        recEditBtnEnable(true);
                        saveUpdateBtnVisible("save", false);
                        textFieldsEditable(false);
                    }
                     
                }
                System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JFrame j=new JFrame();
            j.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(j, "Enter Name OR Press Cancel to Contine  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void delete() {
        JFrame j=new JFrame();
        j.setAlwaysOnTop(true);
        if(JOptionPane.showConfirmDialog(j,
            "Are you sure ! \nOn selecting \"Yes\" this will DELETE the record?", "Confermation Diloge",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){ //ConfermationDiloge()){

        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            if(code.getText()==null||cust.getText()==null){

            }else{
                if(isCredit){
                    tf=data.delete_recovery_credit_rec(conn,code1.getText());
                    if(tf){
                        /*
                        PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                    data1a.delete_all_custleg_wrt_custCode(conn, code1.getText(), cust1.getText());
                                    
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                        } catch (SQLException ex) {
                            Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        */      
                        /*/============================CLIENTS CLBAL===================================
                        String purchaseProduct = data.get_clbal_from_clints(conn,cust1.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = new BigDecimal(purchaseProduct).add(new BigDecimal(amount1.getText())).add(new BigDecimal(freight1.getText()));
                            if(b!=null){
                                data.update_clbal_in_clints(conn,b+"",cust1.getText());
                            }
                        }
                        //========================================================================= 
                        
                        //============================CLIENTS CLBAL===================================
                        purchaseProduct = data.get_empCustCredit_from_empRec(conn,sm3.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = new BigDecimal(purchaseProduct).add(new BigDecimal(amount1.getText())).add(new BigDecimal(freight1.getText()));
                            if(b!=null){
                                data.update_empCustCredit_in_empRec(conn,b+"",sm3.getText());
                            }
                        }
                        //========================================================================= 
                        */
                        setNullTextFields1();
                        setLastRec();
                    }
                }else{
                    tf=data.delete_recovery_credit_rec(conn,code.getText());
                    if(tf){
                        /*
                        PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                    data1a.delete_all_custleg_wrt_custCode(conn, code.getText(), cust.getText());
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                        } catch (SQLException ex) {
                            Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                        /*/============================CLIENTS CLBAL===================================
                        String purchaseProduct = data.get_clbal_from_clints(conn,cust.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = new BigDecimal(purchaseProduct).add(new BigDecimal(freight.getText())).subtract(new BigDecimal(amount.getText()));
                            if(b!=null){
                                data.update_clbal_in_clints(conn,b+"",cust.getText());
                            }
                        }
                        */
                        //========================================================================= 
                        /*/============================CLIENTS CLBAL===================================
                        purchaseProduct = data.get_empCustCredit_from_empRec(conn,sm1.getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            b = new BigDecimal(purchaseProduct).add(new BigDecimal(freight.getText())).subtract(new BigDecimal(amount.getText()));
                            if(b!=null){
                                data.update_empCustCredit_in_empRec(conn,b+"",sm1.getText());
                            }
                        }
                        //========================================================================= 
                        */
                        setNullTextFields();
                        setLastRec();
                    }
                                
                }
            }
            if(tf){
//                setNullTextFields();
//                setLastRec();
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (ParseException ex) {
                Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{

        }
    }

    private void setTextinCredit(ArrayList<String> stock,Conversions dateField1) throws ParseException {
        try {
            code1.setText(stock.get(0));
            cust1.setText(stock.get(1));
            custC.setModel(buildOneComboBoxModel(cust1.getText(),"cust"));
            sm3.setText(stock.get(2));
            sm1C.setModel(buildOneComboBoxModel(sm3.getText(),"sm"));
            vanCode.setText(stock.get(3));
            vanNameC.setModel(buildOneComboBoxModel(vanCode.getText(),"van"));
            cashType1.setText(stock.get(4));
            typeName.setModel(buildOneComboBoxModel(cashType1.getText(),"cashtype"));
            remarks1.setText(stock.get(5));
            oDate1.setDate(dateField1.toDate(stock.get(6)));
            amount1.setText(stock.get(9));
            freight1.setText(stock.get(8));
            compCode1.setText(stock.get(10));
            compName1.setModel(buildOneComboBoxModel(compCode1.getText(),"comp"));
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTextinRecovery(ArrayList<String> next, Conversions dateField) throws ParseException {
        try {
            code.setText(next.get(0));
            cust.setText(next.get(1));
            custR.setModel(buildOneComboBoxModel(cust.getText(),"cust"));
            sm1.setText(next.get(2));
            sm1R.setModel(buildOneComboBoxModel(sm1.getText(),"sm"));
            vanCode2.setText(next.get(3));
            vanNameR.setModel(buildOneComboBoxModel(vanCode2.getText(),"van"));
            cashType.setText(next.get(4));
            cashTypeR.setModel(buildOneComboBoxModel(cashType.getText(),"cashtype"));
            remarks.setText(next.get(5));
            oDate.setDate(dateField.toDate(next.get(6)));
            amount.setText(next.get(7));
            freight.setText(next.get(8));
            compCode.setText(next.get(10));
            compName.setModel(buildOneComboBoxModel(compCode.getText(),"comp"));
        } catch (Exception ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateRecord() {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            if(isCredit){
                    String[] s = data.get_invNo_freight_debit_credit(conn,code1.getText() + "");
                    String[] s1 = data.get_invNo_freight_debit_credit_sm(conn,code1.getText() + "");
                    int a=0;
                    System.out.println(" s[0]s[0]s[0]s[0] "+s[0]);
                    if(s[0].equalsIgnoreCase(cust1.getText()) && s1[0].equalsIgnoreCase(sm3.getText())){
                        a=2;
                    }
                    switch(a){
                    case 2:
                        System.out.println("CLIENTS CLBAL=================================== case 2 ");
                        //============================CLIENTS CLBAL===================================
                        PAK_SALE_DB data6 =new PAK_SALE_DB();
                        Connection conn6;
                        try {
                            conn6=data6.connect_database();
                            /*
                            String purchaseProduct = data6.get_clbal_from_clints(conn6,cust1.getText());
                            if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                b1 =((b1).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                                if(b1!=null){
                                    data6.update_clbal_in_clints(conn6,b1+"",cust1.getText());
                                }
                            }
                            */
                            /*
                            String purchaseProduct = data6.get_empCustCredit_from_empRec(conn6,sm3.getText());
                            if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                b1 =((b1).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                                if(b1!=null){
                                    data6.update_empCustCredit_in_empRec(conn6,b1+"",sm3.getText());
                                }
                            }
                            */
                        conn6.close();
                        }catch(Exception e){
                            System.out.println("Exceptiojn"+e);
                        }
                        //=========================================================================
                        /*
                        try {
                             
                            //======================CUST legers==================
                            PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                
                                    String d="Credit To "+custC.getSelectedItem()+" Remarks: ";
                                    data1a.update_cust_ledger(conn1a,
                                            cust1.getText(),
                                            dateField.toDateString(oDate1.getDate().toString()),
                    "Credit To "+custC.getSelectedItem()+" Remarks: "+remarks1.getText(),
                                            "0.0",
                                            (Float.parseFloat(amount1.getText())+Float.parseFloat(freight1.getText()))+"",
                                            code1.getText(),
                                            d);

                                } catch (ParseException ex) {
                                    Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                            
                        } catch (SQLException ex) {
                            Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                        }
                                     */
                        break;
                    default:
                        //============================CLIENTS CLBAL===================================
                        PAK_SALE_DB data7 =new PAK_SALE_DB();
                        Connection conn7;
                        try {
                            conn7=data7.connect_database();
                            /*
                             String purchaseProduct = data7.get_clbal_from_clints(conn7,s[0]);
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                if(b1!=null){
                                    data7.update_clbal_in_clints(conn7,b1+"",s[0]);
                                }
                            }
                             purchaseProduct = data7.get_clbal_from_clints(conn7,cust1.getText());
                             if(purchaseProduct!=null){
                               BigDecimal b1=new BigDecimal(purchaseProduct);
                                b1 =((b1).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                                if(b1!=null){
                                    data7.update_clbal_in_clints(conn7,b1+"",cust1.getText());
                                }
                            }
                             */
                             /*
                            String purchaseProduct = data7.get_empCustCredit_from_empRec(conn7,s1[0]);
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s1[1]))).add(new BigDecimal(s1[2]))).add(new BigDecimal(s1[3]));
                                if(b1!=null){
                                    data7.update_empCustCredit_in_empRec(conn7,b1+"",s1[0]);
                                }
                            }
                            purchaseProduct = data7.get_empCustCredit_from_empRec(conn7,sm3.getText());
                             if(purchaseProduct!=null){
                               BigDecimal b1=new BigDecimal(purchaseProduct);
                                b1 =((b1).subtract(new BigDecimal(amount1.getText()))).subtract(new BigDecimal(freight1.getText()));
                                if(b1!=null){
                                    data7.update_empCustCredit_in_empRec(conn7,b1+"",sm3.getText());
                                }
                            }
                             */
                             
                        conn7.close();
                        }catch(Exception e){
                            System.out.println("Exceptiojn"+e);
                        }
                        //=========================================================================
                        /*
                        try {
                            //======================CUST legers==================
                            PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                    data1a.delete_all_custleg_wrt_custCode(conn, code1.getText(), s[0]);
                                    data1a.insert_cust_ledger(conn1a,
                                            cust1.getText(),
                                            dateField.toDateString(oDate1.getDate().toString()),
                    "Credit To "+custC.getSelectedItem()+" Remarks: "+remarks1.getText(),
                                            "0.0",
                                            (Float.parseFloat(amount1.getText())+Float.parseFloat(freight1.getText()))+"",
                                            code1.getText());

                                } catch (ParseException ex) {
                                    Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                        } catch (SQLException ex) {
                            Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    */
                        break;
                    }
                    tf=data.update_recovery_credit_rec(conn,code1.getText(),cust1.getText(),sm3.getText(),vanCode.getText(),cashType1.getText(),remarks1.getText(),dateField.toDateString(oDate1.getDate().toString()),"0",freight1.getText(),amount1.getText(),compCode1.getText());
                }
                else{
                    String[] s = data.get_invNo_freight_debit_credit(conn,code.getText() + "");
                    String[] s1 = data.get_invNo_freight_debit_credit_sm(conn,code.getText() + "");
                    int a=0;
                    if(s[0].equalsIgnoreCase(cust.getText()) && s1[0].equalsIgnoreCase(sm1.getText())){
                        a=2;
                    }
                    switch(a){
                    case 2:
                        //============================CLIENTS CLBAL===================================
                        PAK_SALE_DB data6 =new PAK_SALE_DB();
                        Connection conn6;
                        try {
                            conn6=data6.connect_database();
                            /*
                             String purchaseProduct = data6.get_clbal_from_clints(conn6,cust.getText());
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                b1 =((b1).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                                if(b1!=null){
                                    data6.update_clbal_in_clints(conn6,b1+"",cust.getText());
                                }
                            }
                             */
                             /*
                            String purchaseProduct = data6.get_empCustCredit_from_empRec(conn6,sm1.getText());
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                b1 =((b1).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                                if(b1!=null){
                                    data6.update_empCustCredit_in_empRec(conn6,b1+"",sm1.getText());
                                }
                            }
                             */
                             
                        conn6.close();
                        }catch(Exception e){
                            System.out.println("Exceptiojn"+e);
                        }
                        //=========================================================================
                        /*
                        try {
                            //======================CUST legers==================
                            PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                
                                    String d="Recovery From "+custR.getSelectedItem()+" Remarks: ";
                                    data1a.update_cust_ledger(conn1a,
                                            cust.getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                   "Recovery From "+custR.getSelectedItem()+" Remarks: "+remarks.getText(),
                                            amount.getText(),
                                            freight.getText(),
                                            code.getText(),
                                            d);

                                } catch (ParseException ex) {
                                    Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                        } catch (SQLException ex) {
                            Logger.getLogger(SALES.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        */
                        break;
                    default:
                        //============================CLIENTS CLBAL===================================
                        PAK_SALE_DB data7 =new PAK_SALE_DB();
                        Connection conn7;
                        try {
                            conn7=data7.connect_database();
                            /*
                             String purchaseProduct = data7.get_clbal_from_clints(conn7,s[0]);
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s[1]))).add(new BigDecimal(s[2]))).add(new BigDecimal(s[3]));
                                if(b1!=null){
                                    data7.update_clbal_in_clints(conn7,b1+"",s[0]);
                                }
                            }
                             purchaseProduct = data7.get_clbal_from_clints(conn7,cust.getText());
                             if(purchaseProduct!=null){
                                BigDecimal b1=new BigDecimal(purchaseProduct);
                                b1 =((b1).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                                if(b1!=null){
                                    data7.update_clbal_in_clints(conn7,b1+"",cust.getText());
                                }
                            }
                             */
                             /*
                            String purchaseProduct = data7.get_empCustCredit_from_empRec(conn7,s1[0]);
                             if(purchaseProduct!=null){
                                BigDecimal b1=null;
                                b1 =((new BigDecimal(purchaseProduct).subtract(new BigDecimal(s1[1]))).add(new BigDecimal(s1[2]))).add(new BigDecimal(s1[3]));
                                if(b1!=null){
                                    data7.update_empCustCredit_in_empRec(conn7,b1+"",s1[0]);
                                }
                            }
                            purchaseProduct = data7.get_empCustCredit_from_empRec(conn7,sm1.getText());
                            if(purchaseProduct!=null){
                                BigDecimal b1=new BigDecimal(purchaseProduct);
                                b1 =((b1).add(new BigDecimal(amount.getText()))).subtract(new BigDecimal(freight.getText()));
                                if(b1!=null){
                                    data7.update_empCustCredit_in_empRec(conn7,b1+"",sm1.getText());
                                }
                            }
                             
                             */
                        conn7.close();
                        }catch(Exception e){
                            System.out.println("Exceptiojn"+e);
                        }
                        //=========================================================================
                        /*
                        //======================CUST legers==================
                            PAK_CUSTLEG_DB data1a =new PAK_CUSTLEG_DB();
                            Connection conn1a;
                            conn1a = data1a.connect_database();
                                try {
                                
                                    data1a.delete_all_custleg_wrt_custCode(conn, code.getText(), s[0]);
                                    data1a.insert_cust_ledger(conn1a,
                                            cust.getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                   "Recovery From "+custR.getSelectedItem()+" Remarks: "+remarks.getText(),
                                            amount.getText(),
                                            freight.getText(),
                                            code.getText());

                                } catch (ParseException ex) {
                                    Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            data1a.close_database(conn1a);
                            //======================CUST legers==================
                        */
                        break;
                    }
                    tf=data.update_recovery_credit_rec(conn,code.getText(),cust.getText(),sm1.getText(),vanCode2.getText(),cashType.getText(),remarks.getText(),dateField.toDateString(oDate.getDate().toString()),amount.getText(),freight.getText(),"0",compCode.getText());
                }
            
            if(tf){
                if(isCredit){
                    textFieldsEditable1(false);
                    forBackBtnEnable1(true);
                    recEditBtnEnable1(true);
                    saveUpdateBtnVisible1("update", false);
                }
                else{   
                    textFieldsEditable(false);
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    saveUpdateBtnVisible("update", false);
                }
                

            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RECOVERY.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }
    public static DefaultComboBoxModel buildAllComboBoxModel(String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            switch (c) {
                case "cust":
                    elements=data.find_all_cust_rec_name_by_code(conn);
                    break;
                case "sm":
                    elements=data.find_all_sm_name_by_code(conn);
                    break;
                case "van":
                    elements=data.find_all_van_name_by_code(conn);
                    break;
                case "cashtype":
                    elements=data.find_all_cashtype_name_by_code(conn);
                    break;
                case "comp":
                    elements=data.find_all_com_name_by_code(conn);
                    break;
            }
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }
    public DefaultComboBoxModel buildOneComboBoxModel(String id,String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        String element=null;
        try {
            conn = data.connect_database();
            
            switch (c) {
                case "cust":
                    if(!id.equals("")){
                        element=data.find_cust_rec_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                        if(isCredit){
                            System.out.println("Add 1");
                            element=data.find_cust_rec_add_by_code(conn,id);
                            add1.setText(element);
                            element=data.find_cust_rec_cell_by_code(conn,id);
                            System.out.println("cell 1");
                            cell1.setText(element);
                        }else{
                            
                            System.out.println("Add 2");
                            element=data.find_cust_rec_add_by_code(conn,id);
                            add.setText(element);
                            element=data.find_cust_rec_cell_by_code(conn,id);
                            System.out.println("cell 2");
                            cell.setText(element);
                        }
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "sm":
                    if(!id.equals("")){
                        element=data.find_sm_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
                    }
                    break; 
                case "van":
                    if(!id.equals("")){
                        element=data.find_van_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
                    }
                    break; 
                case "cashtype":
                    if(!id.equals("")){
                        element=data.find_cashtype_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
                case "comp":
                    if(!id.equals("")){
                        element=data.find_comp_rec_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
            }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
        public void paint(Graphics g) {
            super.paint(g);
        }
    });
    }

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "cust":
                        if(!name.equals("")){
                            if(isCredit){
                                s=data.find_cust_rec_add_by_name(conn,name.trim());
                                add1.setText(s);
                                s=data.find_cust_rec_cell_by_name(conn,name.trim());
                                cell1.setText(s);
                            }else{
                                s=data.find_cust_rec_add_by_name(conn,name.trim());
                                add.setText(s);
                                s=data.find_cust_rec_cell_by_name(conn,name.trim());
                                cell.setText(s);
                            }
                            s=data.find_cust_rec_code_by_name(conn,name.trim());
                            
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "sm":
                        if(!name.equals("")){
                            s=data.find_sm_code_by_name(conn,name.trim());
                        }else{
                        }
                        break;
                    case "van":
                        if(!name.equals("")){
                            s=data.find_van_code_by_name(conn,name.trim());
                        }else{
                        }
                        break;
                    case "cashtype":
                        if(!name.equals("")){
                            s=data.find_cashtypec_code_by_name(conn,name.trim());
                        }else{}
                        break;
                    case "comp":
                        if(!name.equals("")){
                            s=data.find_com_code_by_name(conn,name.trim());
                        }else{}
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }
    
}
