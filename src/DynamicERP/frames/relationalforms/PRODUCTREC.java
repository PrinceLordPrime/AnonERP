/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.relationalforms;

import DynamicERP.frames.relationalforms.CUSTREC;
import DynamicERP.frames.relationalforms.EMPREC;
import DynamicERP.dialoge.viewforms.dialogeClass;
import DB.PAK_DB;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import DynamicERP.frames.newdataentry.FIRMREC;
import DynamicERP.frames.newdataentry.COMPANY;
import static DynamicERP.dialoge.viewforms.ViewForm11.isSaved;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewProductRecWin;

/**
 *
 * @author UzairYousafZai
 */
public class PRODUCTREC extends javax.swing.JFrame {

    /**
     * Creates new form PRODUCTREC
     */
    public PRODUCTREC() {
        initComponents();
        
        styleComboBox(catName);
        styleComboBox(companyname);
        styleComboBox(stTypeName);
        styleComboBox(lineName);
        
        textFieldsEditable(false);
        code.setEditable(false);
        saveUpdateBtnVisible("all", false);
        
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_prod_rec(conn);
            if(stock!=null){
                setTextInFields(stock);
            }else{
                textFieldsEditable(true);
                name.requestFocus();
                recEditBtnEnable(false);
                forBackBtnEnable(false);
                saveUpdateBtnVisible("save",true);
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Empty DB");
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        size = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        catName = new javax.swing.JComboBox();
        cat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        companyname = new javax.swing.JComboBox();
        company = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        salesPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        costPrice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrior = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSearchNow = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        stTypeName = new javax.swing.JComboBox();
        stTypeCode = new javax.swing.JTextField();
        lineNo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lineName = new javax.swing.JComboBox();
        remarks = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MinLevel = new javax.swing.JTextField();
        dangerLevel = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ReorderLevel = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        retailPrice = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        noOfPcsInCTN = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        discPer = new javax.swing.JTextField();
        taxInPer = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        fmr = new javax.swing.JTextField();
        btnduplicate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(80, 100, 0, 0));
        setUndecorated(true);

        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });
        size.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sizeKeyPressed(evt);
            }
        });

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Name:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Catogery:");

        catName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        catName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        catName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                catNamePopupMenuWillBecomeVisible(evt);
            }
        });
        catName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catNameActionPerformed(evt);
            }
        });

        cat.setBackground(new java.awt.Color(153, 204, 255));
        cat.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        cat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                catKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                catKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Company: ");

        companyname.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        companyname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        companyname.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                companynamePopupMenuWillBecomeVisible(evt);
            }
        });
        companyname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companynameActionPerformed(evt);
            }
        });

        company.setBackground(new java.awt.Color(153, 204, 255));
        company.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        company.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        company.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                companyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                companyKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Size:");

        salesPrice.setBackground(new java.awt.Color(0, 204, 102));
        salesPrice.setText("0");
        salesPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesPriceActionPerformed(evt);
            }
        });
        salesPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                salesPriceKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Demand:");

        code.setBackground(new java.awt.Color(204, 255, 204));

        costPrice.setBackground(new java.awt.Color(255, 153, 153));
        costPrice.setText("0");
        costPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costPriceActionPerformed(evt);
            }
        });
        costPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                costPriceKeyPressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Cost Price:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Code:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Remarks:");

        btnNext.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R1_24.png"))); // NOI18N
        btnNext.setMnemonic('N');
        btnNext.setText("Next");
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L2_24.png"))); // NOI18N
        btnFirst.setMnemonic('F');
        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrior.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPrior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L1_24.png"))); // NOI18N
        btnPrior.setMnemonic('P');
        btnPrior.setText("Prior");
        btnPrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R2_24.png"))); // NOI18N
        btnLast.setMnemonic('L');
        btnLast.setText("Last");
        btnLast.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 102, 102));
        btnDel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDel.setMnemonic('D');
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 102, 51));
        btnAdd.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearch.setMnemonic('S');
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnView.setMnemonic('V');
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 102, 102));
        jButton9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setMnemonic('X');
        jButton9.setText("Exit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('U');
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSearchNow.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNow.setMnemonic('S');
        btnSearchNow.setText("Search Now");
        btnSearchNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Product Type:");

        stTypeName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        stTypeName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stTypeName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                stTypeNamePopupMenuWillBecomeVisible(evt);
            }
        });
        stTypeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stTypeNameActionPerformed(evt);
            }
        });

        stTypeCode.setBackground(new java.awt.Color(153, 204, 255));
        stTypeCode.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        stTypeCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stTypeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stTypeCodeActionPerformed(evt);
            }
        });
        stTypeCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stTypeCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stTypeCodeKeyReleased(evt);
            }
        });

        lineNo.setBackground(new java.awt.Color(153, 204, 255));
        lineNo.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lineNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lineNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineNoActionPerformed(evt);
            }
        });
        lineNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lineNoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lineNoKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Sub Cat: ");

        lineName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lineName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lineName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lineNameItemStateChanged(evt);
            }
        });
        lineName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                lineNamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                lineNamePopupMenuWillBecomeVisible(evt);
            }
        });
        lineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineNameActionPerformed(evt);
            }
        });
        lineName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lineNamePropertyChange(evt);
            }
        });

        remarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarksActionPerformed(evt);
            }
        });
        remarks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                remarksKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel11.setBackground(new java.awt.Color(0, 102, 102));
        jLabel11.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Products Records");
        jLabel11.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel12.setBackground(new java.awt.Color(0, 153, 153));
        jLabel12.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 51));
        jLabel13.setText("(Auto Genrated)");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Min Level:");

        MinLevel.setText("0");
        MinLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinLevelActionPerformed(evt);
            }
        });
        MinLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MinLevelKeyPressed(evt);
            }
        });

        dangerLevel.setText("0");
        dangerLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangerLevelActionPerformed(evt);
            }
        });
        dangerLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dangerLevelKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 102));
        jLabel15.setText("DangerLevel:");

        ReorderLevel.setText("0");
        ReorderLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReorderLevelActionPerformed(evt);
            }
        });
        ReorderLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ReorderLevelKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 102));
        jLabel16.setText("Reorder Level:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 102));
        jLabel17.setText("RetailPrice:");

        retailPrice.setText("0");
        retailPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retailPriceActionPerformed(evt);
            }
        });
        retailPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                retailPriceKeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 102, 102));
        jLabel18.setText("Weight:");

        weight.setText("0");
        weight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightActionPerformed(evt);
            }
        });
        weight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                weightKeyPressed(evt);
            }
        });

        noOfPcsInCTN.setText("0");
        noOfPcsInCTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfPcsInCTNActionPerformed(evt);
            }
        });
        noOfPcsInCTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noOfPcsInCTNKeyPressed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 102));
        jLabel19.setText("No of Pcs in Ctn:");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 102, 102));
        jLabel20.setText("Disc%: ");

        discPer.setText("0");
        discPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discPerActionPerformed(evt);
            }
        });
        discPer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discPerKeyPressed(evt);
            }
        });

        taxInPer.setText("0");
        taxInPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxInPerActionPerformed(evt);
            }
        });
        taxInPer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taxInPerKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 102));
        jLabel21.setText("Tax %:");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 102, 102));
        jLabel22.setText("Fmr:");

        fmr.setText("0");
        fmr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmrActionPerformed(evt);
            }
        });
        fmr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fmrKeyPressed(evt);
            }
        });

        btnduplicate.setBackground(new java.awt.Color(255, 102, 102));
        btnduplicate.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnduplicate.setMnemonic('D');
        btnduplicate.setText("Duplicate");
        btnduplicate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnduplicateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addGap(0, 0, 0)
                                .addComponent(btnPrior)
                                .addGap(0, 0, 0)
                                .addComponent(btnNext)
                                .addGap(0, 0, 0)
                                .addComponent(btnLast))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearchNow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)
                            .addComponent(jLabel4)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noOfPcsInCTN, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))
                            .addComponent(taxInPer, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReorderLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(stTypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, 0)
                                    .addComponent(stTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(costPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, 0)
                                    .addComponent(lineName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, 0)
                                    .addComponent(companyname, 0, 149, Short.MAX_VALUE))
                                .addComponent(MinLevel, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22)
                            .addComponent(jLabel7)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(retailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salesPrice)
                            .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discPer, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fmr, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(size)
                            .addComponent(dangerLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(catName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnduplicate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst)
                            .addComponent(btnPrior)
                            .addComponent(btnNext)
                            .addComponent(btnLast)
                            .addComponent(btnduplicate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel13))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(stTypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(catName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(size, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(lineNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(salesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(costPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(dangerLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(companyname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(retailPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addGap(0, 0, 0)
                                .addComponent(btnEdit)
                                .addGap(0, 0, 0)
                                .addComponent(btnSearch)
                                .addGap(0, 0, 0)
                                .addComponent(btnView)
                                .addGap(0, 0, 0)
                                .addComponent(btnDel)))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(remarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MinLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ReorderLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(taxInPer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(discPer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(fmr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(weight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noOfPcsInCTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchNow)
                        .addComponent(btnSave)
                        .addComponent(btnUpdate)
                        .addComponent(btnCancel)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salesPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesPriceActionPerformed

    private void costPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costPriceActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = new ArrayList<String>();
            stock=data.next_product_rec(conn,code.getText());
            if(stock!=null){
                setTextInFields(stock);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        setFirstRec();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = new ArrayList<String>();
            stock=data.prior_product_rec(conn,code.getText());
            if(!(stock==null)){
                setTextInFields(stock);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPriorActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try {
            setLastRec();
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        try {
            PAK_DB data =new PAK_DB();
            Connection conn;
            conn = data.connect_database();
            if(data.check_p_code_presence_in_perdtl(conn,code.getText())){
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Present in referance Table \n Could not be Deleted", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                if(data.check_p_code_presence_in_sdtl(conn,code.getText())){
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Present in referance Table \n Could not be Deleted", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    
                                JFrame j=new JFrame();
                                j.setAlwaysOnTop(true);
                                if(JOptionPane.showConfirmDialog(j,
                                        "Are you sure ! \nOn selecting \"Yes\" this will DELETE the record?", "Confermation Diloge",
                                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                                { //ConfermationDiloge()){
                                    boolean tf=false;
                                    if(code.getText()==null||name.getText()==null){

                                    }else{
                                        tf=data.delete_product_rec(conn,code.getText());
                                    }
                                    if(tf){
                                        setNullTextFields();
                                        code.setText("");
                                        setLastRec();
                                    }
                                    System.out.println("Is Inserted :"+ tf);
                                    data.close_database(conn);
                                }else{
                                }
                                btnAdd.requestFocus();
                            
                                
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        textFieldsEditable(true);
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        name.setEditable(true);
        saveUpdateBtnVisible("update", true);
        stTypeCode.requestFocus();
        stTypeCode.selectAll();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
        setNullTextFields();

        code.setText("");
        stTypeCode.requestFocus();
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("search", true);
        code.setEditable(true);//
        textFieldsEditable(false);
        setNullTextFields();
        code.setText("");
        code.requestFocus();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
//        /*
        try {
            createViewProductRecWin();
        } catch (SQLException ex) {
            Logger.getLogger(COMPANY.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeProductRec);
            findRecords(dialogeClass.codeProductRec);
        }else{
            //            JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        btnEdit.requestFocus();
//        */
    }//GEN-LAST:event_btnViewActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        DynamicERP.dialoge.newdataentry.dialogeClass.disposeProductRecWin();
        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;

            tf=data.update_product_rec(conn, code.getText(),  name.getText(), size.getText(), salesPrice.getText(), costPrice.getText(),  cat.getText(), company.getText(),  stTypeCode.getText(), "0", "0.0", lineNo.getText(), remarks.getText(),dangerLevel.getText(),MinLevel.getText(),ReorderLevel.getText(),noOfPcsInCTN.getText(),weight.getText(),taxInPer.getText(),discPer.getText(),fmr.getText(),retailPrice.getText());//
            if(tf){
                textFieldsEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                saveUpdateBtnVisible("all", false);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        
        try {
            forBackBtnEnable(true);
            recEditBtnEnable(true);
            saveUpdateBtnVisible("all", false);
            textFieldsEditable(false);
            setLastRec();
            btnAdd.requestFocus();
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSearchNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowActionPerformed
        findRecords(code.getText());
        
        btnEdit.requestFocus();
    }//GEN-LAST:event_btnSearchNowActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!(name.getText().toString().equalsIgnoreCase(""))){
            PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;

                ///Max
                int max=0,codeInt=0;
                max=data.find_max_in_product_rec_code(conn);
                System.out.println("Max:"+max);
                if(max==0){
                    codeInt=1;
                }else{
                    codeInt=max+1;
                }
                ///Max                 String.valueOf(codeInt)                                                                                                                                                                                                   ,DANGERLEVEL,MINLEVEL,REORDERLEVEL,NOOFPCS,WEIGHT,TAXPER,DISCPER,FMRPER,RETAILPRICE
                tf=data.insert_product_rec_in_table(conn,String.valueOf(codeInt), name.getText(), size.getText(), salesPrice.getText(), costPrice.getText(), cat.getText(), company.getText(),stTypeCode.getText(),"0","0.0",lineNo.getText(),remarks.getText(),dangerLevel.getText(),MinLevel.getText(),ReorderLevel.getText(),noOfPcsInCTN.getText(),weight.getText(),taxInPer.getText(),discPer.getText(),fmr.getText(),retailPrice.getText());

                if(tf){
                    code.setText(String.valueOf(codeInt));
                    textFieldsEditable(false);
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    saveUpdateBtnVisible("all", false);
                }
                System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Enter Name OR Press Cancel to Contine  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void catKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catKeyReleased
        try {
            updateComboBox(cat, catName,"cat");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_catKeyReleased

    private void companyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_companyKeyReleased
        try {
            updateComboBox(company, companyname,"com");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_companyKeyReleased

    private void catNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catNameActionPerformed
        System.out.println("catName.getSelectedItem().toString()"+catName.getSelectedItem().toString());
        cat.setText(getCode(catName.getSelectedItem().toString(),"cat"));
    }//GEN-LAST:event_catNameActionPerformed

    private void companynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companynameActionPerformed
        System.out.println("compName.getSelectedItem().toString()"+companyname.getSelectedItem().toString());
        company.setText(getCode(companyname.getSelectedItem().toString(),"com"));
    }//GEN-LAST:event_companynameActionPerformed

    private void catNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_catNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            catName.setModel(buildAllComboBoxModel("cat"));
            if(setSelectedComboItem(cat,catName,((!cat.getText().isEmpty())?data.find_cat_name_by_code(conn, cat.getText()):""))){
                
            }else{
                cat.setText(getCode(catName.getSelectedItem().toString(),"cat"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_catNamePopupMenuWillBecomeVisible

    private void companynamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_companynamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            companyname.setModel(buildAllComboBoxModel("com"));
            if(setSelectedComboItem(company,companyname,((!company.getText().isEmpty())?data.find_com_name_by_code(conn, company.getText()):""))){
                
            }else{
                company.setText(getCode(companyname.getSelectedItem().toString(),"com"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_companynamePopupMenuWillBecomeVisible
    private int i=0;
    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeActionPerformed

    private void lineNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lineNoKeyReleased
        try {
            updateComboBox(lineNo, lineName,"line");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lineNoKeyReleased

    private void lineNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lineNameItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNameItemStateChanged

    private void lineNamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineNamePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNamePopupMenuWillBecomeInvisible

    private void lineNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_lineNamePopupMenuWillBecomeVisible
       PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            lineName.setModel(buildAllComboBoxModel("line"));
            if(setSelectedComboItem(lineNo,lineName,((!lineNo.getText().isEmpty())?data.find_subCat_Name_by_code(conn, lineNo.getText()):""))){
                
            }else{
                lineNo.setText(getCode(lineName.getSelectedItem().toString(),"line"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lineNamePopupMenuWillBecomeVisible

    private void lineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineNameActionPerformed
        System.out.println("lineName.getSelectedItem().toString()"+lineName.getSelectedItem().toString());
        lineNo.setText(getCode(lineName.getSelectedItem().toString(),"line"));
    }//GEN-LAST:event_lineNameActionPerformed

    private void lineNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lineNamePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNamePropertyChange

    private void remarksKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remarksKeyPressed
  if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    btnSave.requestFocus();
                    btnUpdate.requestFocus();
  }
  else if(evt.getKeyCode() == KeyEvent.VK_UP) {
      company.requestFocus();
      company.selectAll();
        }       }//GEN-LAST:event_remarksKeyPressed

    private void catKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catKeyPressed
   if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
           if(!(stTypeCode.getText().toString().equalsIgnoreCase("")))
        {     
            name.requestFocus();
            name.selectAll();
        }
    
        else
        {         
           catName.requestFocus();     
        }
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            stTypeCode.requestFocus();
            stTypeCode.selectAll();
            
        }    }//GEN-LAST:event_catKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
   if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        {     
            size.requestFocus();
            size.selectAll();
        }
    
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            cat.requestFocus();
            cat.selectAll();
            
        }    }//GEN-LAST:event_nameKeyPressed

    private void sizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sizeKeyPressed
   if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        {     
            lineNo.requestFocus();
            lineNo.selectAll();
        }
    
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            name.requestFocus();
            name.selectAll();
            
        }    }//GEN-LAST:event_sizeKeyPressed

    private void lineNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lineNoKeyPressed
   if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
           if(!(stTypeCode.getText().toString().equalsIgnoreCase("")))
        {
        }
    
        else
        {         
           lineName.requestFocus();     
        }
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            size.requestFocus();
            size.selectAll();
            
        }    }//GEN-LAST:event_lineNoKeyPressed

    private void costPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costPriceKeyPressed
 if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        {     
            salesPrice.requestFocus();
            salesPrice.selectAll();
        }
    
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            
            
        }    }//GEN-LAST:event_costPriceKeyPressed

    private void salesPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salesPriceKeyPressed
 if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        {     
            company.requestFocus();
            company.selectAll();
        }
    
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            costPrice.requestFocus();
            costPrice.selectAll();
            
        }    }//GEN-LAST:event_salesPriceKeyPressed

    private void companyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_companyKeyPressed
 if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
           if(!(stTypeCode.getText().toString().equalsIgnoreCase("")))
        {     
            remarks.requestFocus();
            remarks.selectAll();
        }
    
        else
        {         
           companyname.requestFocus();     
        }
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            salesPrice.requestFocus();
            salesPrice.selectAll();
            
        }     }//GEN-LAST:event_companyKeyPressed

    private void stTypeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stTypeNameActionPerformed
        System.out.println("stTypeName.getSelectedItem().toString()"+stTypeName.getSelectedItem().toString());
        stTypeCode.setText(getCode(stTypeName.getSelectedItem().toString(),"sttype"));
    }//GEN-LAST:event_stTypeNameActionPerformed

    private void stTypeNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_stTypeNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            stTypeName.setModel(buildAllComboBoxModel("sttype"));
            if(setSelectedComboItem(stTypeCode,stTypeName,((!stTypeCode.getText().isEmpty())?data.find_st_type_by_code(conn, stTypeCode.getText()):""))){

            }else{
                stTypeCode.setText(getCode(stTypeName.getSelectedItem().toString(),"sttype"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stTypeNamePopupMenuWillBecomeVisible

    private void stTypeCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stTypeCodeKeyReleased
        try {
            updateComboBox(stTypeCode, stTypeName,"sttype");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stTypeCodeKeyReleased

    private void stTypeCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stTypeCodeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(!(stTypeCode.getText().toString().equalsIgnoreCase("")))
            {
                cat.requestFocus();
                cat.selectAll();
            }

            else
            {
                stTypeName.requestFocus();
            }
        }
    }//GEN-LAST:event_stTypeCodeKeyPressed

    private void stTypeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stTypeCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stTypeCodeActionPerformed

    private void MinLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MinLevelActionPerformed

    private void MinLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MinLevelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_MinLevelKeyPressed

    private void dangerLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangerLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dangerLevelActionPerformed

    private void dangerLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dangerLevelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dangerLevelKeyPressed

    private void ReorderLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReorderLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReorderLevelActionPerformed

    private void ReorderLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ReorderLevelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReorderLevelKeyPressed

    private void retailPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retailPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retailPriceActionPerformed

    private void retailPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retailPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_retailPriceKeyPressed

    private void weightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightActionPerformed

    private void weightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightKeyPressed

    private void noOfPcsInCTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfPcsInCTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfPcsInCTNActionPerformed

    private void noOfPcsInCTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noOfPcsInCTNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfPcsInCTNKeyPressed

    private void discPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discPerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discPerActionPerformed

    private void discPerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discPerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_discPerKeyPressed

    private void taxInPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxInPerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taxInPerActionPerformed

    private void taxInPerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taxInPerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_taxInPerKeyPressed

    private void fmrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmrActionPerformed

    private void fmrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fmrKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmrKeyPressed

    private void remarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarksActionPerformed

    private void btnduplicateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnduplicateActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);

        code.setText("");
        name.requestFocus();
        name.selectAll();
    }//GEN-LAST:event_btnduplicateActionPerformed

    private void lineNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lineNoActionPerformed
                                             
    private void enableFields(javax.swing.JFrame aThis, boolean b) {
        Component[] c = new Component[this.getContentPane().getComponentCount()];
        c=aThis.getContentPane().getComponents();
        for(int i=0;i<aThis.getContentPane().getComponentCount();i++){
            System.out.println("Component Class:"+c[i].getClass());
            if(c[i].getClass().toString().contains("javax.swing.JTextField")||c[i].getClass().toString().contains("javax.swing.JComboBox")){
                System.out.println("true");
                c[i].setEnabled(b);
            }
        }
    }
     public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)    {
        boolean tf=false;
        String item;
        if(value!=null){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PRODUCTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PRODUCTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PRODUCTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PRODUCTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PRODUCTREC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MinLevel;
    private javax.swing.JTextField ReorderLevel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrior;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchNow;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnduplicate;
    private javax.swing.JTextField cat;
    private javax.swing.JComboBox catName;
    private javax.swing.JTextField code;
    private javax.swing.JTextField company;
    private javax.swing.JComboBox companyname;
    private javax.swing.JTextField costPrice;
    private javax.swing.JTextField dangerLevel;
    private javax.swing.JTextField discPer;
    private javax.swing.JTextField fmr;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox lineName;
    private javax.swing.JTextField lineNo;
    private javax.swing.JTextField name;
    private javax.swing.JTextField noOfPcsInCTN;
    private javax.swing.JTextField remarks;
    private javax.swing.JTextField retailPrice;
    private javax.swing.JTextField salesPrice;
    private javax.swing.JTextField size;
    private javax.swing.JTextField stTypeCode;
    private javax.swing.JComboBox stTypeName;
    private javax.swing.JTextField taxInPer;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
    private void setFirstRec() {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_prod_rec(conn);
            if(stock==null){
                setNullTextFields();
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setLastRec() throws Exception {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_product_rec(conn);
            if(stock.get(0)==null){
                setNullTextFields();
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void forBackBtnEnable(boolean b) {
       btnFirst.setEnabled(b);
       btnLast.setEnabled(b);
       btnPrior.setEnabled(b);
       btnNext.setEnabled(b);
    }
    private void saveUpdateBtnVisible(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btnSave.setVisible(b);
                break;
            case "update":
                btnUpdate.setVisible(b);
                break;
            case "search":
                btnSearchNow.setVisible(b);
                break;
            case "all":
                btnSearchNow.setVisible(b);
                btnSave.setVisible(b);
                btnUpdate.setVisible(b);
                break;
        }
        btnCancel.setVisible(b);
    }
    private void recEditBtnEnable(boolean b) {
        btnAdd.setEnabled(b);
        btnDel.setEnabled(b);
        btnSearch.setEnabled(b);
        btnView.setEnabled(b);
        btnEdit.setEnabled(b);
        btnduplicate.setEnabled(b);
    }
    private void textFieldsEditable(boolean b){
        //code.setEditable(b);
                name.setEditable(b);
                size.setEditable(b);
                lineNo.setEditable(b);
                lineName.setEnabled(b);
                salesPrice.setEditable(b);
                costPrice.setEditable(b);
                
                MinLevel.setEditable(b);
                dangerLevel.setEditable(b);
                ReorderLevel.setEditable(b);
                retailPrice.setEditable(b);
                weight.setEditable(b);
                taxInPer.setEditable(b);
                discPer.setEditable(b);
                fmr.setEditable(b);
                noOfPcsInCTN.setEditable(b);
                
                
                cat.setEditable(b);
                catName.setEnabled(b);
                company.setEditable(b);
                companyname.setEnabled(b);
                stTypeName.setEnabled(b);
                stTypeCode.setEditable(b);
                remarks.setEditable(b);
                
    }

    private void setNullTextFields() {
        name.setText("");
        size.setText("");
        salesPrice.setText("");
        costPrice.setText("");
        
        MinLevel.setText("");
        dangerLevel.setText("");
        ReorderLevel.setText("");
        retailPrice.setText("");
        weight.setText("");
        taxInPer.setText("");
        discPer.setText("");
        fmr.setText("");
        noOfPcsInCTN.setText("");
        
        cat.setText("");
        company.setText("");
        stTypeCode.setText("");
        remarks.setText("");
        lineNo.setText("");
    }

    private void setTextInFields(ArrayList<String> stock) throws Exception {
        code.setText(stock.get(0));
        name.setText(stock.get(1));
        size.setText(stock.get(2));
        salesPrice.setText(stock.get(3));
        costPrice.setText(stock.get(4));
        
        cat.setText(stock.get(5));
        catName.setModel(buildOneComboBoxModel(stock.get(5),"cat"));
        
        company.setText(stock.get(6));
        companyname.setModel(buildOneComboBoxModel(stock.get(6),"com"));
        
        stTypeCode.setText(stock.get(7));
        stTypeName.setModel(buildOneComboBoxModel(stock.get(7),"sttype"));
//        clqty.setText(stock.get(9));
//        clvalue.setText(stock.get(10));
        lineNo.setText(stock.get(10));
        lineName.setModel(buildOneComboBoxModel(stock.get(10),"line"));
        remarks.setText(stock.get(11));
        
        MinLevel.setText(stock.get(12));
        dangerLevel.setText(stock.get(13));
        ReorderLevel.setText(stock.get(14));
        retailPrice.setText(stock.get(15));
        weight.setText(stock.get(16));
        taxInPer.setText(stock.get(17));
        discPer.setText(stock.get(18));
        fmr.setText(stock.get(19));
        noOfPcsInCTN.setText(stock.get(20));
    }
    private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }
    public static DefaultComboBoxModel buildAllComboBoxModel(String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            switch (c) {
                case "loc":
                    elements=data.find_all_loc_name_by_code(conn);
                    break;
                case "cat":
                    elements=data.find_all_cat_name_by_code(conn);
                    break;
                case "com":
                    elements=data.find_all_com_name_by_code(conn);
                    break;
                case "sttype":
                    elements=data.find_all_st_type_by_code(conn);
                    break;
                case "line":
                    elements=data.find_all_subCat_type_by_code(conn);
                    break;
            }
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }
    public static DefaultComboBoxModel buildOneComboBoxModel(String id,String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        String element=null;
        try {
            conn = data.connect_database();
            
            switch (c) {
                case "loc":
                    if(!id.equals("")){
                        element=data.find_loc_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "cat":
                    if(!id.equals("")){
                        element=data.find_cat_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "com":
                    if(!id.equals("")){
                        element=data.find_com_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
                case "sttype":
                    if(id!=null){
                        element=data.find_st_type_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
                case "line":
                    if(id!=null){
                        element=data.find_subCat_Name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
            }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
        public void paint(Graphics g) {
            super.paint(g);
        }
    });
    }

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "loc":
                        if(!name.equals("")){
                            s=data.find_loc_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "cat":
                        if(!name.equals("")){
                            s=data.find_cat_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "com":
                        if(!name.equals("")){
                            s=data.find_com_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "sttype":
                        if(!name.equals("")){
                            s=data.find_st_type_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "line":
                        if(!name.equals("")){
                            s=data.find_subCat_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }

    private void findRecords(String codeCustRec) {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.find_product_rec_by_code(conn, codeCustRec);
            if (stock!=null){
                
                setTextInFields(stock);
                
                code.setEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                saveUpdateBtnVisible("all", false);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PRODUCTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
