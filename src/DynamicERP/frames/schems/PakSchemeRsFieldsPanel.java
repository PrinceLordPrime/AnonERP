/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.schems;

import DynamicERP.frames.paySeller.*;
import DB.PAK_SCHEMERS_DB;
import DynamicERP.dialoge.viewforms.dialogeClass;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Shan
 */
public class PakSchemeRsFieldsPanel extends javax.swing.JPanel {

    /**
     * Creates new form PakVocFieldsPanel
     */
    public PakSchemeRsFieldsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        seqno = new javax.swing.JTextField();
        schRs = new javax.swing.JTextField();
        endPcs = new javax.swing.JTextField();
        stPcs = new javax.swing.JTextField();

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/db_rem1.png"))); // NOI18N

        seqno.setEditable(false);
        seqno.setText("0");

        schRs.setText("0.0");
        schRs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schRsActionPerformed(evt);
            }
        });

        endPcs.setText("0");
        endPcs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                endPcsFocusLost(evt);
            }
        });
        endPcs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endPcsMouseClicked(evt);
            }
        });

        stPcs.setText("0");
        stPcs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                stPcsFocusLost(evt);
            }
        });
        stPcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stPcsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seqno, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(stPcs, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(endPcs, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(schRs, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(seqno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(schRs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(endPcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(stPcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void stPcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stPcsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stPcsActionPerformed

    private void stPcsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stPcsFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_stPcsFocusLost

    private void endPcsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endPcsFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_endPcsFocusLost

    private void endPcsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endPcsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_endPcsMouseClicked

    private void schRsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schRsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schRsActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField endPcs;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField schRs;
    private javax.swing.JTextField seqno;
    private javax.swing.JTextField stPcs;
    // End of variables declaration//GEN-END:variables

    public JTextField getSchRs() {
        return schRs;
    }

    public void setSchRs(JTextField disc) {
        this.schRs = disc;
    }

    public JTextField getStPcs() {
        return stPcs;
    }

    public void setStPcs(JTextField qty) {
        this.stPcs = qty;
    }

    public JTextField getEndPcs() {
        return endPcs;
    }

    public void setEndPcs(JTextField rate) {
        this.endPcs = rate;
    }

  

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JTextField getDesc() {
        return schRs;
    }

    public void setAmount(JTextField amount) {
        this.schRs = amount;
    }


    public JTextField getSeqno() {
        return seqno;
    }

    public void setSeqno(JTextField seqno) {
        this.seqno = seqno;
    }
    
    
    public void textFieldsEditableProducts(boolean b) {
        seqno.setEditable(false);
        schRs.setEditable(b);
        stPcs.setEditable(b);
        endPcs.setEditable(b);
//        .setEditable(b);
        jLabel2.setEnabled(b);
        
    }

     private String getCode(String name) {
        String s="";
         PAK_SCHEMERS_DB data =new PAK_SCHEMERS_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            if(!name.equals("")){
                s=data.find_product_code_by_name(conn,name);
            }else{
//                JFrame j=new JFrame();
//                j.setAlwaysOnTop(true);
//                JOptionPane.showMessageDialog(j, "Emter Id Found");
            }       
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(PAYSELLER.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }
     public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)
    {
        boolean tf=false;
        String item;
        if(value!=null){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                System.out.println("item:"+item);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">== Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">== Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    public static DefaultComboBoxModel buildAllComboBoxModel() throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_SCHEMERS_DB data =new PAK_SCHEMERS_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            elements=data.find_all_product_name_size_by_code(conn);
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(PAYSELLER.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void updateComboBox(JTextField textField,JComboBox comboBox) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText()));
    }

    public DefaultComboBoxModel buildOneComboBoxModel(String id) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_SCHEMERS_DB data =new PAK_SCHEMERS_DB();
        Connection conn;
        String element = "";
        conn = data.connect_database();
        String temp;
        String temp1;
        if(!id.equals("")){
            temp=data.find_product_rec_by_code(conn, id);
            temp1=data.find_product_rate_by_code(conn, id);
            String s2 =null;
            if(temp!=null){
                element=temp;
                endPcs.setText(temp1);
                comboBoxModel.addElement(element);
            }
        }
        return comboBoxModel;
    }
    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
            public void paint(Graphics g) {
                super.paint(g);
            }
        });
    }
}
