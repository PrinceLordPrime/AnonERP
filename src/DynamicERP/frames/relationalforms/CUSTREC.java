/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.relationalforms;

import DynamicERP.dialoge.viewforms.dialogeClass;
import DB.PAK_DB;
import DB.PAK_SALE_DB;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import logical.Conversions;
import DynamicERP.frames.newdataentry.FIRMREC;
import DynamicERP.frames.newdataentry.COMPANY;
import static DynamicERP.dialoge.viewforms.ViewForm11.isSaved;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewCustRecWin;
import java.text.ParseException;
import javax.swing.BorderFactory;
// PrinceLord Prime
import java.util.Date;
import princelordprime.princecode;

/**
 *
 * @author UzairYousafZai
 */
public class CUSTREC extends javax.swing.JFrame {
    
    // Prince Lord Code
    princecode prince = new princecode();
    
    private Conversions f =new Conversions();

    /**
     * Creates new form CUSTREC
     */
    public CUSTREC() {
        initComponents();
        
        
        pan_dataentery.setBorder(BorderFactory.createTitledBorder("Add New Customer or view Old Data: "));
        pan_report.setBorder(BorderFactory.createTitledBorder("Execute Client Reports: "));
 
        styleComboBox(custNames);
        styleComboBox(custType);
        
        recEditActionBtnVisible(false);
        textFieldsEditable(false);
        code.setEditable(false);
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_customer(conn);
            if(stock==null){
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Welcome Enter First Record", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                btnAdd.doClick();
                btnCancel.setVisible(false);
                textFieldsEditable(true);
            }else{
                
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        pan_dataentery = new javax.swing.JPanel();
        btnPrior = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        code = new javax.swing.JTextField();
        btnSearchNow = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        preBalance = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CustType = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        custNames = new javax.swing.JComboBox();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        relation = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        add1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnLast = new javax.swing.JButton();
        contact = new javax.swing.JTextField();
        btnDel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        ref = new javax.swing.JTextField();
        btnFirst = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        cni = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        custType = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        Customer = new javax.swing.JLabel();
        custTypeCode = new javax.swing.JTextField();
        cusTypetNames = new javax.swing.JComboBox();
        Customer1 = new javax.swing.JLabel();
        zoneCode = new javax.swing.JTextField();
        zoneNames = new javax.swing.JComboBox();
        Customer2 = new javax.swing.JLabel();
        routeCode = new javax.swing.JTextField();
        routeNames = new javax.swing.JComboBox();
        odDate = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        btnDuplicate = new javax.swing.JButton();
        pan_report = new javax.swing.JPanel();
        btnSearchNow1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBounds(new java.awt.Rectangle(80, 100, 0, 0));
        setMinimumSize(new java.awt.Dimension(850, 650));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel12.setBackground(new java.awt.Color(0, 102, 102));
        jLabel12.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Customer's Records");
        jLabel12.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel15.setBackground(new java.awt.Color(0, 153, 153));
        jLabel15.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        btnPrior.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPrior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L1_24.png"))); // NOI18N
        btnPrior.setMnemonic('P');
        btnPrior.setText("Prior");
        btnPrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('U');
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        code.setBackground(new java.awt.Color(204, 255, 204));

        btnSearchNow.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNow.setMnemonic('S');
        btnSearchNow.setText("Search Now");
        btnSearchNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Contact:");

        preBalance.setBackground(new java.awt.Color(255, 204, 204));
        preBalance.setText("0");
        preBalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                preBalanceKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Pre Credit");

        CustType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustTypeActionPerformed(evt);
            }
        });
        CustType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustTypeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustTypeKeyReleased(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R1_24.png"))); // NOI18N
        btnNext.setMnemonic('N');
        btnNext.setText("Next");
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Address:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Name:");

        btnView.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnView.setMnemonic('V');
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Area:");

        custNames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        custNames.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                custNamesPopupMenuWillBecomeVisible(evt);
            }
        });
        custNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custNamesActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearch.setMnemonic('S');
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 102, 102));
        jButton9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setMnemonic('X');
        jButton9.setText("Exit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        relation.setBackground(new java.awt.Color(153, 255, 153));
        relation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                relationKeyPressed(evt);
            }
        });

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 102, 51));
        btnAdd.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        add1.setColumns(20);
        add1.setRows(5);
        add1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                add1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(add1);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("CNIC:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 51));
        jLabel16.setText("(Auto Genrated)");

        btnLast.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R2_24.png"))); // NOI18N
        btnLast.setMnemonic('L');
        btnLast.setText("Last");
        btnLast.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contactKeyPressed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 102, 102));
        btnDel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDel.setMnemonic('D');
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Code:");

        btnCancel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        ref.setBackground(new java.awt.Color(0, 204, 153));
        ref.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refKeyPressed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L2_24.png"))); // NOI18N
        btnFirst.setMnemonic('F');
        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 102));
        jLabel19.setText("Remarks: ");

        cni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cniActionPerformed(evt);
            }
        });
        cni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cniKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 102, 102));
        jLabel20.setText("Reffrence:");

        custType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Y", "N" }));
        custType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                custTypePopupMenuWillBecomeVisible(evt);
            }
        });
        custType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custTypeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Active:");

        Customer.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        Customer.setForeground(new java.awt.Color(0, 102, 102));
        Customer.setText("Customer:");

        custTypeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custTypeCodeActionPerformed(evt);
            }
        });
        custTypeCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                custTypeCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                custTypeCodeKeyReleased(evt);
            }
        });

        cusTypetNames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cusTypetNames.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cusTypetNamesPopupMenuWillBecomeVisible(evt);
            }
        });
        cusTypetNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusTypetNamesActionPerformed(evt);
            }
        });

        Customer1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        Customer1.setForeground(new java.awt.Color(0, 102, 102));
        Customer1.setText("Zone:");

        zoneCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoneCodeActionPerformed(evt);
            }
        });
        zoneCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                zoneCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zoneCodeKeyReleased(evt);
            }
        });

        zoneNames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        zoneNames.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                zoneNamesPopupMenuWillBecomeVisible(evt);
            }
        });
        zoneNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoneNamesActionPerformed(evt);
            }
        });

        Customer2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        Customer2.setForeground(new java.awt.Color(0, 102, 102));
        Customer2.setText("Route:");

        routeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routeCodeActionPerformed(evt);
            }
        });
        routeCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                routeCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                routeCodeKeyReleased(evt);
            }
        });

        routeNames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        routeNames.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                routeNamesPopupMenuWillBecomeVisible(evt);
            }
        });
        routeNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routeNamesActionPerformed(evt);
            }
        });

        odDate.setPreferredSize(new java.awt.Dimension(0, 25));

        jLabel10.setText("Opeining Date:");

        btnDuplicate.setBackground(new java.awt.Color(255, 102, 102));
        btnDuplicate.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDuplicate.setMnemonic('D');
        btnDuplicate.setText("Duplicate");
        btnDuplicate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDuplicateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan_dataenteryLayout = new javax.swing.GroupLayout(pan_dataentery);
        pan_dataentery.setLayout(pan_dataenteryLayout);
        pan_dataenteryLayout.setHorizontalGroup(
            pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_dataenteryLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(btnSearchNow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                        .addContainerGap(26, Short.MAX_VALUE)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Customer, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Customer2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Customer1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(relation, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan_dataenteryLayout.createSequentialGroup()
                                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                                        .addComponent(CustType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(custNames, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(12, 12, 12))
                                    .addComponent(cni))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ref, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(preBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan_dataenteryLayout.createSequentialGroup()
                                .addComponent(name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(custType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(contact)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                                .addComponent(zoneCode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zoneNames, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(124, 124, 124))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createSequentialGroup()
                                .addComponent(custTypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cusTypetNames, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addComponent(btnFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDuplicate))
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(odDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addComponent(routeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(routeNames, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)))
                .addContainerGap())
        );
        pan_dataenteryLayout.setVerticalGroup(
            pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_dataenteryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrior)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(btnDuplicate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16))
                    .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(odDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addGap(1, 1, 1)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel))
                    .addGroup(pan_dataenteryLayout.createSequentialGroup()
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addComponent(custType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(custTypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Customer)
                            .addComponent(cusTypetNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(routeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Customer2)
                            .addComponent(routeNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zoneCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Customer1)
                            .addComponent(zoneNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(preBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(7, 7, 7)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CustType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(custNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(ref, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(relation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataenteryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchNow)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        btnSearchNow1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNow1.setMnemonic('S');
        btnSearchNow1.setText("Search Now");
        btnSearchNow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNow1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan_reportLayout = new javax.swing.GroupLayout(pan_report);
        pan_report.setLayout(pan_reportLayout);
        pan_reportLayout.setHorizontalGroup(
            pan_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSearchNow1)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        pan_reportLayout.setVerticalGroup(
            pan_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSearchNow1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pan_dataentery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_dataentery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pan_report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        jScrollPane2.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cniActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        setLastRec();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> prior = new ArrayList<String>();
            prior=data.prior_cust_rec(conn,code.getText());
            if(!(prior==null)){
                setTextInFields(prior);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPriorActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        setFirstRec();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> next = new ArrayList<String>();
            next=data.next_cust_rec(conn,code.getText());
            if(!(next==null)){
                setTextInFields(next);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        try {
            PAK_DB data =new PAK_DB();
            Connection conn;
            conn = data.connect_database();
            if(data.check_cust_code_presence_in_smain(conn,code.getText())){
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Present in referance Table \n Could not be Deleted", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                if(data.check_cust_code_presence_in_recovery(conn,code.getText())){
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Present in referance Table \n Could not be Deleted", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }else{
                            JFrame j=new JFrame();
                            j.setAlwaysOnTop(true);
                            if(JOptionPane.showConfirmDialog(j,
                                    "Are you sure ! \nOn selecting \"Yes\" this will DELETE the record?", "Confermation Diloge",
                                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                            { //ConfermationDiloge()){
                                boolean tf=false;
                                if(code.getText()==null||name.getText()==null){

                                }else{
                                    tf=data.delete_cust_rec(conn,code.getText());
                                }
                                if(tf){
                                    code.setText(null);
                                    setNullTextFields();
                                    setLastRec();
                                }
                                System.out.println("Is Inserted :"+ tf);
                                data.close_database(conn);
                            }else{        }
                            btnAdd.requestFocus();
                }
            }
        } catch (SQLException ex) {Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
//        /*
        try {
            createViewCustRecWin();
        } catch (SQLException ex) {
            Logger.getLogger(COMPANY.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeCustRec);
            findRecords(dialogeClass.codeCustRec);
        }else{
                        JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        
        btnEdit.requestFocus();
//        */
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        btnSearchNow.setVisible(true);
        btnCancel.setVisible(true);
        code.setEditable(true);//
        textFieldsEditable(false);
        setNullTextFields();
        code.setText("");
        code.requestFocus();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
        setNullTextFields();
        name.requestFocus();
        code.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        textFieldsEditable(true);
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        name.setEditable(true);
        name.requestFocus();
        name.selectAll();
//        btnSave.setEnabled(false);
        
        btnUpdate.setVisible(true);
        btnCancel.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!(name.getText().toString().equalsIgnoreCase(""))){
            PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;

                ///Max
                int max=0,codeInt=0;
                max=data.find_max_in_cust_rec_code(conn);
                if(max==0){
                    codeInt=1;
                }else{
                    codeInt=max+1;
                    ///Max String.valueOf(codeInt)
                }
                try {
                    tf=data.insert_cust_rec_in_table(conn,String.valueOf(codeInt),name.getText(),add1.getText(),cni.getText(),contact.getText(),preBalance.getText(),CustType.getText(),relation.getText(),ref.getText(),preBalance.getText(),custType.getSelectedItem().toString(),custTypeCode.getText(),zoneCode.getText(),routeCode.getText(), odDate.getDate());
                } catch (Exception ex) {
                    Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
                }

                if(tf){
                    textFieldsEditable(false);
                    code.setText(String.valueOf(codeInt));
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    recEditActionBtnVisible(false);
                }
                System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Enter Name OR Press Cancel to Contine  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowActionPerformed
        findRecords(code.getText());
        btnEdit.requestFocus();
    }//GEN-LAST:event_btnSearchNowActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        recEditActionBtnVisible(false);
        forBackBtnEnable(true);
        recEditBtnEnable(true);
        textFieldsEditable(false);
        setLastRec();
        
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            PAK_SALE_DB data5 =new PAK_SALE_DB();
            Connection conn5;
            String purchaseProduct[] = new String[2];
            BigDecimal b=null;
            try {
                conn5=data5.connect_database();
                purchaseProduct = data5.get_clbal_previousBal_from_clints(conn5,code.getText());
                if(purchaseProduct!=null){
                    b =(new BigDecimal(purchaseProduct[0]).add(new BigDecimal(preBalance.getText()))).subtract(new BigDecimal(purchaseProduct[1]));
                }
                conn5.close();
            }catch(Exception e){
                System.out.println("Exceptiojn"+e);
            }
            try {
                tf=data.update_cust_rec(conn,code.getText(),name.getText(),add1.getText(),cni.getText(),contact.getText(),preBalance.getText(),CustType.getText(),relation.getText(),ref.getText(),b+"",custType.getSelectedItem().toString(),custTypeCode.getText(),zoneCode.getText(),routeCode.getText(), dateField.toDateString(odDate.getDate().toString()));
            } catch (ParseException ex) {
                Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(tf){
                textFieldsEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } 
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.dispose();
        DynamicERP.dialoge.newdataentry.dialogeClass.disposeCustRecWin();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void CustTypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustTypeKeyReleased
        try {
            updateComboBox(CustType, custNames,"dist");
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CustTypeKeyReleased

    private void custNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custNamesActionPerformed
        System.out.println("custNames.getSelectedItem().toString()"+custNames.getSelectedItem().toString());
        CustType.setText(getCode(custNames.getSelectedItem().toString(),"dist"));
    }//GEN-LAST:event_custNamesActionPerformed

    private void custNamesPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_custNamesPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            custNames.setModel(buildAllComboBoxModel("dist"));
            if(setSelectedComboItem(CustType,custNames,((!CustType.getText().isEmpty())?data.find_dist_name_by_code(conn, CustType.getText()):""))){
                
            }else{
                CustType.setText(getCode(custNames.getSelectedItem().toString(),"dist"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custNamesPopupMenuWillBecomeVisible

    private void refKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refKeyPressed
  if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    btnSave.requestFocus();
                    btnUpdate.requestFocus();
                    
  }
  
  
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            relation.requestFocus();
            relation.selectAll();
            
        
                        
        }       }//GEN-LAST:event_refKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed

        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    
        
        }
       

    }//GEN-LAST:event_nameKeyPressed

    private void contactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyPressed

            if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    CustType.requestFocus();
                    CustType.selectAll();
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
           
        }    }//GEN-LAST:event_contactKeyPressed

    private void CustTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustTypeKeyPressed

         
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
           if(!(CustType.getText().toString().equalsIgnoreCase("")))
        {     
            add1.requestFocus();
            add1.selectAll();
        }
    
        else
        {         
           custNames.requestFocus();     
        }
    
        
                   
                    
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            contact.requestFocus();
            contact.selectAll();
            
        }


    }//GEN-LAST:event_CustTypeKeyPressed

    private void add1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_add1KeyPressed


        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    cni.requestFocus();
                    cni.selectAll();
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            CustType.requestFocus();
           CustType.selectAll();
            
        }





    }//GEN-LAST:event_add1KeyPressed

    private void preBalanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_preBalanceKeyPressed


        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                 
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            cni.requestFocus();
            cni.selectAll();
            
        }



    }//GEN-LAST:event_preBalanceKeyPressed

    private void cniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cniKeyPressed


        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    preBalance.requestFocus();
                    preBalance.selectAll();
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            add1.requestFocus();
            add1.selectAll();
            
        }


    }//GEN-LAST:event_cniKeyPressed

    private void relationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_relationKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    ref.requestFocus();
                    ref.selectAll();
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            
        }


    }//GEN-LAST:event_relationKeyPressed

    private void CustTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustTypeActionPerformed

    private void btnSearchNow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNow1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchNow1ActionPerformed

    private void custTypePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_custTypePopupMenuWillBecomeVisible
        // TODO add your handling code here:
    }//GEN-LAST:event_custTypePopupMenuWillBecomeVisible

    private void custTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custTypeActionPerformed

    private void custTypeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custTypeCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custTypeCodeActionPerformed

    private void custTypeCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custTypeCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_custTypeCodeKeyPressed

    private void custTypeCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custTypeCodeKeyReleased
        try {
            updateComboBox(custTypeCode, cusTypetNames,"cust");
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custTypeCodeKeyReleased

    private void cusTypetNamesPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cusTypetNamesPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            cusTypetNames.setModel(buildAllComboBoxModel("cust"));
            String value = ((!custTypeCode.getText().isEmpty())?data.find_dist_name_by_code(conn, custTypeCode.getText()):"");     
            
            
            if(setSelectedComboItem(custTypeCode,cusTypetNames,value)){
                
            }else{
                CustType.setText(getCode(cusTypetNames.getSelectedItem().toString(),"cust"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cusTypetNamesPopupMenuWillBecomeVisible

    private void zoneCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoneCodeActionPerformed
        
    }//GEN-LAST:event_zoneCodeActionPerformed

    private void zoneCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zoneCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_zoneCodeKeyPressed

    private void zoneCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zoneCodeKeyReleased
        try {
            updateComboBox(zoneCode, zoneNames,"zone");
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_zoneCodeKeyReleased

    private void zoneNamesPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_zoneNamesPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            zoneNames.setModel(buildAllComboBoxModel("zone"));
            if(setSelectedComboItem(zoneCode,zoneNames,((!zoneCode.getText().isEmpty())?data.find_zone_name_by_code(conn, zoneCode.getText()):""))){
                
            }else{
                zoneCode.setText(getCode(zoneNames.getSelectedItem().toString(),"zone"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_zoneNamesPopupMenuWillBecomeVisible

    private void zoneNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoneNamesActionPerformed
        zoneCode.setText(getCode(zoneNames.getSelectedItem().toString(),"zone"));        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_zoneNamesActionPerformed

    private void routeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routeCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_routeCodeActionPerformed

    private void routeCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_routeCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_routeCodeKeyPressed

    private void routeCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_routeCodeKeyReleased
        try {
            updateComboBox(routeCode, routeNames,"route");
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_routeCodeKeyReleased

    private void routeNamesPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_routeNamesPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            routeNames.setModel(buildAllComboBoxModel("route"));
            if(setSelectedComboItem(routeCode,routeNames,((!routeCode.getText().isEmpty())?data.find_route_name_by_code(conn, routeCode.getText()):""))){
                
            }else{
                routeCode.setText(getCode(routeNames.getSelectedItem().toString(),"route"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_routeNamesPopupMenuWillBecomeVisible

    private void routeNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routeNamesActionPerformed
        routeCode.setText(getCode(routeNames.getSelectedItem().toString(),"route"));
    }//GEN-LAST:event_routeNamesActionPerformed

    private void btnDuplicateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDuplicateActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
 //       setNullTextFields();
        name.requestFocus();
        name.selectAll();
        code.setText("");
    }//GEN-LAST:event_btnDuplicateActionPerformed

    private void cusTypetNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusTypetNamesActionPerformed
        System.out.println("custNames.getSelectedItem().toString()"+cusTypetNames.getSelectedItem().toString());
        custTypeCode.setText(getCode(cusTypetNames.getSelectedItem().toString(),"cust"));
    }//GEN-LAST:event_cusTypetNamesActionPerformed
    public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)
    {
        boolean tf=false;
        String item;
                
        if(!value.isEmpty()){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CUSTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CUSTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CUSTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CUSTREC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CUSTREC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustType;
    private javax.swing.JLabel Customer;
    private javax.swing.JLabel Customer1;
    private javax.swing.JLabel Customer2;
    private javax.swing.JTextArea add1;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDuplicate;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrior;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchNow;
    private javax.swing.JButton btnSearchNow1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JTextField cni;
    private javax.swing.JTextField code;
    private javax.swing.JTextField contact;
    private javax.swing.JComboBox cusTypetNames;
    private javax.swing.JComboBox custNames;
    private javax.swing.JComboBox custType;
    private javax.swing.JTextField custTypeCode;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField name;
    private com.toedter.calendar.JDateChooser odDate;
    private javax.swing.JPanel pan_dataentery;
    private javax.swing.JPanel pan_report;
    private javax.swing.JTextField preBalance;
    private javax.swing.JTextField ref;
    private javax.swing.JTextField relation;
    private javax.swing.JTextField routeCode;
    private javax.swing.JComboBox routeNames;
    private javax.swing.JTextField zoneCode;
    private javax.swing.JComboBox zoneNames;
    // End of variables declaration//GEN-END:variables
    private void setFirstRec() {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_customer(conn);
            if(stock==null){
                setNullTextFields();
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
               setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setLastRec() {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_cust_rec(conn);
            if(stock.get(0)==null){
                setNullTextFields();
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void forBackBtnEnable(boolean b) {
       btnFirst.setEnabled(b);
       btnLast.setEnabled(b);
       btnPrior.setEnabled(b);
       btnNext.setEnabled(b);
    }
    private void saveUpdateBtnVisible(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btnSave.setVisible(b);
                break;
            case "update":
                btnUpdate.setVisible(b);
                break;
            case "search":
                btnSearchNow.setVisible(b);
                break;
            case "all":
                btnSearchNow.setVisible(b);
                btnSave.setVisible(b);
                btnUpdate.setVisible(b);
                break;
        }
        btnCancel.setVisible(b);
    }
    private void recEditBtnEnable(boolean b) {
        btnAdd.setEnabled(b);
        btnDel.setEnabled(b);
        btnSearch.setEnabled(b);
        btnView.setEnabled(b);
        btnEdit.setEnabled(b);
        btnDuplicate.setEnabled(b);
    }

    private void recEditActionBtnVisible(boolean b) {
        btnSave.setVisible(b);
        btnUpdate.setVisible(b);
        btnSearchNow.setVisible(b);
        btnCancel.setVisible(b);
    }
    private void textFieldsEditable(boolean b){
        //code.setEditable(b);
        name.setEditable(b);
        add1.setEditable(b);
        cni.setEditable(b);
        contact.setEditable(b);
        preBalance.setEditable(b);
        CustType.setEditable(b);
        custNames.setEnabled(b);
        custTypeCode.setEditable(b);
        zoneNames.setEnabled(b);
        zoneCode.setEditable(b);
        routeNames.setEnabled(b);
        odDate.setEnabled(b);
        routeCode.setEditable(b);
        cusTypetNames.setEnabled(b);
        custType.setEnabled(b);
        relation.setEditable(b);
        ref.setEditable(b);
        
    }

    private void setNullTextFields() {
//        code.setText("");
        name.setText("");
        add1.setText("");
        cni.setText("");
        contact.setText("");
        preBalance.setText("");
        CustType.setText("");
        relation.setText("");
        ref.setText("");
        try {
            odDate.setDate(dateField.getPresentDate());
        }catch (ParseException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    Conversions dateField=new Conversions();//dateField.toReturnedDate(odDate.getDate()+"")
    private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }
    public static DefaultComboBoxModel buildAllComboBoxModel(String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            switch (c) {
                case "route":
                    elements=data.find_all_route_name_by_code(conn);
                    break;
                case "cust":
                    elements=data.find_all_cust_type_by_code(conn);
                    break;
                case "dist":
                    elements=data.find_all_dist_name_by_code(conn);
                    break;
                case "zone":
                    elements=data.find_all_zone_name_by_code(conn);
                    break;
            }
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }
    public static DefaultComboBoxModel buildOneComboBoxModel(String id,String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        String element=null;
        try {
            conn = data.connect_database();
            
            switch (c) {
                case "route":
                    if(!id.equals("")){
                        element=data.find_route_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "cust":
                    System.out.println("Moving to the Customer Type Field");
                    if(!id.equals("")){
                        element=data.find_cust_type_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "dist":
                    if(!id.equals("")){
                        element=data.find_dist_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
                case "zone":
                    if(!id.equals("")){
                        element=data.find_zone_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;    
            }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
        public void paint(Graphics g) {
            super.paint(g);
        }
    });
    }

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "route":
                        if(!name.equals("")){
                            s=data.find_route_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "cust":
                        if(!name.equals("")){
                            s=data.find_cust_type_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "dist":
                        if(!name.equals("")){
                            s=data.find_dist_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "zone":
                        if(!name.equals("")){
                            s=data.find_zone_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }

    private void setTextInFields(ArrayList<String> stock) {
        try {
            
            code.setText(stock.get(0));
            name.setText(stock.get(1));
            add1.setText(stock.get(2));
            cni.setText(stock.get(3));
            contact.setText(stock.get(4));
            preBalance.setText(stock.get(5));
            CustType.setText(stock.get(6));
            custNames.setModel(buildOneComboBoxModel(CustType.getText(),"dist"));
            relation.setText(stock.get(7));
            ref.setText(stock.get(8));
            custType.setSelectedItem(stock.get(9));
            custTypeCode.setText(stock.get(10));
            cusTypetNames.setModel(buildOneComboBoxModel(custTypeCode.getText(),"cust"));
            zoneCode.setText(stock.get(11));
            zoneNames.setModel(buildOneComboBoxModel(zoneCode.getText(),"zone"));
            routeCode.setText(stock.get(12));
            routeNames.setModel(buildOneComboBoxModel(routeCode.getText(),"route"));
            odDate.setDate(dateField.toDate(stock.get(13)));
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void findRecords(String text) {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> s = data.find_cust_rec_by_code(conn, text);
            if (s!=null){
                setTextInFields(s);
                code.setEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Asset Found is :"+ s);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
