/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.extra;

import DynamicERP.frames.relationalforms.CUSTREC;
import DynamicERP.frames.relationalforms.EMPREC;
import DB.PAK_DB;
import logical.Conversions;
import java.awt.Component;
import java.awt.Graphics;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.JTextField;
import static DynamicERP.dialoge.viewforms.ViewFormId.isSaved;
import DynamicERP.dialoge.viewforms.dialogeClass;
import DynamicERP.frames.newdataentry.COMPANY;
import DynamicERP.frames.newdataentry.FIRMREC;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewCashDepWin;
import javax.swing.BorderFactory;

/**
 *
 * @author DynamicSP
 */
public class CASHDEP extends javax.swing.JFrame {
    Conversions f=new Conversions();                
    /**
     * Creates new form CASHDEP
     */
    public CASHDEP() throws ParseException, Exception {
        initComponents();
                
        pan_dataentry.setBorder(BorderFactory.createTitledBorder("Deposit New Cash or view Old Data: "));
        pan_reports.setBorder(BorderFactory.createTitledBorder("Execute Cash Deposit Reports: "));
 
        styleComboBox(empName);
        styleComboBox(vanName);
        styleComboBox(finName);
        
        code.setEditable(false);
        textFieldsSetEditable(false);
        saveUpdateBtnVisible("all", false);
        
        getSetFirstRec();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        pan_dataentry = new javax.swing.JPanel();
        date = new com.toedter.calendar.JDateChooser();
        btView = new javax.swing.JButton();
        empName = new javax.swing.JComboBox();
        vanName = new javax.swing.JComboBox();
        suppCat = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        finName = new javax.swing.JComboBox();
        suppCat5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        code = new javax.swing.JTextField();
        vanCode = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btFirst = new javax.swing.JButton();
        finCode = new javax.swing.JTextField();
        btDel = new javax.swing.JButton();
        btLast = new javax.swing.JButton();
        suppCat6 = new javax.swing.JLabel();
        btNext = new javax.swing.JButton();
        empCode = new javax.swing.JTextField();
        suppCat1 = new javax.swing.JLabel();
        btPrior = new javax.swing.JButton();
        suppCat2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();
        pan_reports = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btSearchNow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBounds(new java.awt.Rectangle(250, 180, 0, 0));
        setMinimumSize(new java.awt.Dimension(850, 520));
        setPreferredSize(new java.awt.Dimension(850, 520));
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setToolTipText("");

        jLabel9.setBackground(new java.awt.Color(0, 102, 102));
        jLabel9.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Cash Deposits");
        jLabel9.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel10.setBackground(new java.awt.Color(0, 153, 153));
        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setPreferredSize(new java.awt.Dimension(850, 505));

        jPanel2.setPreferredSize(new java.awt.Dimension(848, 403));

        btView.setText("View");
        btView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btViewActionPerformed(evt);
            }
        });

        empName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        empName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                empNamePopupMenuWillBecomeVisible(evt);
            }
        });
        empName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNameActionPerformed(evt);
            }
        });

        vanName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vanName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                vanNamePopupMenuWillBecomeVisible(evt);
            }
        });
        vanName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanNameActionPerformed(evt);
            }
        });
        vanName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vanNameKeyPressed(evt);
            }
        });

        suppCat.setText("EmpName:");

        finName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        finName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                finNamePopupMenuWillBecomeVisible(evt);
            }
        });
        finName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finNameActionPerformed(evt);
            }
        });
        finName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                finNameKeyPressed(evt);
            }
        });

        suppCat5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat5.setForeground(new java.awt.Color(0, 102, 102));
        suppCat5.setText("Van:");

        jLabel1.setText("DocNo:");

        jLabel2.setText("Date:");

        btAdd.setBackground(new java.awt.Color(0, 102, 51));
        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        vanCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanCodeActionPerformed(evt);
            }
        });
        vanCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vanCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vanCodeKeyReleased(evt);
            }
        });

        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btFirst.setText("First");
        btFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFirstActionPerformed(evt);
            }
        });

        finCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finCodeActionPerformed(evt);
            }
        });
        finCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                finCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                finCodeKeyReleased(evt);
            }
        });

        btDel.setBackground(new java.awt.Color(255, 102, 102));
        btDel.setText("Delete");
        btDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelActionPerformed(evt);
            }
        });

        btLast.setText("Last");
        btLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLastActionPerformed(evt);
            }
        });

        suppCat6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat6.setForeground(new java.awt.Color(0, 102, 102));
        suppCat6.setText("Fin Account:");

        btNext.setText("Next");
        btNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNextActionPerformed(evt);
            }
        });

        empCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empCodeActionPerformed(evt);
            }
        });
        empCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                empCodeKeyReleased(evt);
            }
        });

        suppCat1.setText("Ammount:");

        btPrior.setText("Prior");
        btPrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPriorActionPerformed(evt);
            }
        });

        suppCat2.setText("Description:");

        desc.setColumns(20);
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        javax.swing.GroupLayout pan_dataentryLayout = new javax.swing.GroupLayout(pan_dataentry);
        pan_dataentry.setLayout(pan_dataentryLayout);
        pan_dataentryLayout.setHorizontalGroup(
            pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_dataentryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addComponent(btFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPrior, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNext, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLast, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pan_dataentryLayout.createSequentialGroup()
                                .addComponent(finCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(finName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(code)
                            .addComponent(amount)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pan_dataentryLayout.createSequentialGroup()
                                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(empCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vanCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vanName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pan_dataentryLayout.setVerticalGroup(
            pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_dataentryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addComponent(btAdd)
                        .addGap(5, 5, 5)
                        .addComponent(btEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDel))
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btFirst)
                            .addComponent(btPrior)
                            .addComponent(btNext)
                            .addComponent(btLast))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppCat)
                            .addComponent(empCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vanCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vanName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(finName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(finCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suppCat1)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_dataentryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pan_dataentryLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(suppCat2)
                        .addContainerGap(62, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout pan_reportsLayout = new javax.swing.GroupLayout(pan_reports);
        pan_reports.setLayout(pan_reportsLayout);
        pan_reportsLayout.setHorizontalGroup(
            pan_reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );
        pan_reportsLayout.setVerticalGroup(
            pan_reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 311, Short.MAX_VALUE)
        );

        jButton9.setBackground(new java.awt.Color(0, 102, 102));
        jButton9.setText("Exit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        btUpdate.setText("update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btSearchNow.setText("Search Now");
        btSearchNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchNowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_dataentry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btSearchNow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_reports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pan_dataentry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton9)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btSave)
                                    .addComponent(btSearchNow))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btUpdate)
                                    .addComponent(btCancel)))))
                    .addComponent(pan_reports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        int max=0,codeInt=0;                                     
        
        java.util.Date date1 = null;
        try {
            date1 = f.toReturnedDate(date.getDate().toString());
        } catch (ParseException ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            
            ///Max
            max=data.find_max_in_cash_dep(conn);
            System.out.println("Max:"+max);
            if(max==0){
                codeInt=1;
            }else{
                codeInt=max+1;
            }
            ///Max                 String.valueOf(codeInt)
         
            
            tf=data.insert_cash_dep_in_table(conn,String.valueOf(codeInt),f.toDateString(date1.toString()),amount.getText(),empCode.getText(),vanCode.getText(),finCode.getText(),desc.getText());//
            if(tf){
                code.setText(codeInt+"");
                recEditBtnEnable(true);
                forBackBtnEnable(true);
                saveUpdateBtnVisible("save", false);
                textFieldsSetEditable(false);
            }else{
                
            }System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        recEditBtnEnable(false);
        forBackBtnEnable(false);
        saveUpdateBtnVisible("save",true);
        textFieldsSetEditable(true);
        textFieldsSetEmpty();
        try {
            date.setDate(f.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btAddActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        recEditBtnEnable(false);
        forBackBtnEnable(false);
        saveUpdateBtnVisible("update",true);
        textFieldsSetEditable(true);
    }//GEN-LAST:event_btEditActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            try {
                tf=data.update_cash_dep(conn,code.getText(),empCode.getText(),amount.getText(),f.toDateString(date.getDate().toString()),vanCode.getText(),finCode.getText(),desc.getText());
            } catch (ParseException ex) {
                Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(tf){
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                textFieldsSetEditable(false);
                saveUpdateBtnVisible("update", false);
            }else{
                javax.swing.JFrame j=new javax.swing.JFrame();j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        forBackBtnEnable(true);
        recEditBtnEnable(true);
        textFieldsSetEditable(false);
        saveUpdateBtnVisible("all", false);
        try {
            setFirstRec();
        } catch (ParseException ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCancelActionPerformed

    private void btSearchNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchNowActionPerformed
        findRecords(code.getText());
    }//GEN-LAST:event_btSearchNowActionPerformed

    private void btViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btViewActionPerformed
        try {
            createViewCashDepWin();
        } catch (SQLException ex) {
            Logger.getLogger(COMPANY.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeCashDep);
            findRecords(dialogeClass.codeCashDep);
        }else{
            //            JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btViewActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        DynamicERP.dialoge.newdataentry.dialogeClass.disposecashdepositWin();
            
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelActionPerformed
        javax.swing.JFrame j=new javax.swing.JFrame();
        j.setAlwaysOnTop(true);
        if(JOptionPane.showConfirmDialog(j,
            "Are you sure ! \nOn selecting \"Yes\" this will Delete the tasks?", "Confermation Diloge",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){ //ConfermationDiloge()){
            PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;
                if(code.getText()==null|empCode.getText()==null){

                }else{
                    tf=data.delete_cash_dep(conn,code.getText());
                }
                if(tf){
                    getSetFirstRec();
                }
                System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btDelActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("search", true);
        textFieldsSetEmpty();
        code.requestFocus();
        code.setEditable(true);
    }//GEN-LAST:event_btSearchActionPerformed

    private void btLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLastActionPerformed
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_cash_dep(conn);
            if(stock.get(0)==null){
                code.setText("");
               empCode.setText("");
                date.setDate(null);
                vanCode.setText("");
                finCode.setText("");
                amount.setText("");
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btLastActionPerformed

    private void btNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNextActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> next = new ArrayList<String>();
            next=data.next_cash_dep(conn,code.getText());
            //                System.out.println("next.get(0) :"+next.get(0));
            //                System.out.println("next.get(1) :"+next.get(1));

            if(!(next==null)){
               setTextInFields(next);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btNextActionPerformed

    private void btPriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPriorActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> prior = new ArrayList<String>();
            prior=data.prior_cash_dep(conn,code.getText());
            if(!(prior==null)){
                setTextInFields(prior);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btPriorActionPerformed

    private void btFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFirstActionPerformed
        try {
            getSetFirstRec();
        } catch (Exception ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btFirstActionPerformed

    private void empCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empCodeActionPerformed

    private void empCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empCodeKeyReleased
        try {
            updateComboBox(empCode, empName,"emp");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_empCodeKeyReleased

    private void empNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNameActionPerformed
        System.out.println("empName.getSelectedItem().toString()"+empName.getSelectedItem().toString());
        empCode.setText(getCode(empName.getSelectedItem().toString(),"emp"));
    }//GEN-LAST:event_empNameActionPerformed

    private void empNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_empNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            empName.setModel(buildAllComboBoxModel("emp"));
            if(setSelectedComboItem(empCode,empName,((!empCode.getText().isEmpty())?data.find_sm_name_by_code(conn, empCode.getText()):""))){
                
            }else{
                empCode.setText(getCode(empName.getSelectedItem().toString(),"emp"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_empNamePopupMenuWillBecomeVisible

    private void vanCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanCodeActionPerformed

    private void vanCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanCodeKeyPressed

    private void vanCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCodeKeyReleased
        try {
            updateComboBox(vanCode, vanName,"van");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanCodeKeyReleased

    private void finCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finCodeActionPerformed

    private void finCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_finCodeKeyPressed

    private void finCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finCodeKeyReleased
        try {
            updateComboBox(finCode, finName,"fin");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_finCodeKeyReleased

    private void finNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_finNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            finName.setModel(buildAllComboBoxModel("fin"));
            if(setSelectedComboItem(finCode,finName,((!finCode.getText().isEmpty())?data.find_sm_name_by_code(conn, finCode.getText()):""))){
                
            }else{
                finCode.setText(getCode(finName.getSelectedItem().toString(),"fin"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_finNamePopupMenuWillBecomeVisible

    private void finNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finNameActionPerformed
        System.out.println("finName.getSelectedItem().toString()"+finName.getSelectedItem().toString());
        finCode.setText(getCode(finName.getSelectedItem().toString(),"fin"));
    }//GEN-LAST:event_finNameActionPerformed

    private void finNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_finNameKeyPressed

    private void vanNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_vanNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            vanName.setModel(buildAllComboBoxModel("van"));
            if(setSelectedComboItem(vanCode,vanName,((!vanCode.getText().isEmpty())?data.find_sm_name_by_code(conn, vanCode.getText()):""))){
                
            }else{
                vanCode.setText(getCode(vanName.getSelectedItem().toString(),"van"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanNamePopupMenuWillBecomeVisible

    private void vanNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanNameActionPerformed
        System.out.println("vanName.getSelectedItem().toString()"+vanName.getSelectedItem().toString());
        vanCode.setText(getCode(vanName.getSelectedItem().toString(),"van"));
    }//GEN-LAST:event_vanNameActionPerformed

    private void vanNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanNameKeyPressed
     private void enableFields(javax.swing.JFrame aThis, boolean b) {
        Component[] c = new Component[this.getContentPane().getComponentCount()];
        c=aThis.getContentPane().getComponents();
        
        		
	boolean b1=true;
        for(int i=0;i<aThis.getContentPane().getComponentCount();i++){
            if(c[i].getClass().toString().contains("javax.swing.JTextField")||c[i].getClass().toString().contains("javax.swing.JComboBox")){
                if(b1){
                    System.out.println("First");
                    if(b){
                        c[i].setEnabled(false);
                    }else{
                        c[i].setEnabled(false);
                    }
                }else{
                    System.out.println("All");
                    if(b){
                        c[i].setEnabled(true);
                    }else{
                        c[i].setEnabled(false);
                    }
                }
                    b1=false;
            }
        }
        b1=true;
        
//        for(int i=0;i<aThis.getContentPane().getComponentCount();i++){
//            System.out.println("Component Class:"+c[i].getClass());
//            if(c[i].getClass().toString().contains("javax.swing.JTextField")||c[i].getClass().toString().contains("javax.swing.JComboBox")){
//                c[i].setEnabled(b);
//            }
//        }
    }
 public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)
    {
        boolean tf=false;
        String item;
        if(!value.isEmpty()){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CASHDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CASHDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CASHDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CASHDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CASHDEP().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btDel;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btFirst;
    private javax.swing.JButton btLast;
    private javax.swing.JButton btNext;
    private javax.swing.JButton btPrior;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btSearchNow;
    private javax.swing.JButton btUpdate;
    private javax.swing.JButton btView;
    private javax.swing.JTextField code;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextArea desc;
    private javax.swing.JTextField empCode;
    private javax.swing.JComboBox empName;
    private javax.swing.JTextField finCode;
    private javax.swing.JComboBox finName;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pan_dataentry;
    private javax.swing.JPanel pan_reports;
    private javax.swing.JLabel suppCat;
    private javax.swing.JLabel suppCat1;
    private javax.swing.JLabel suppCat2;
    private javax.swing.JLabel suppCat5;
    private javax.swing.JLabel suppCat6;
    private javax.swing.JTextField vanCode;
    private javax.swing.JComboBox vanName;
    // End of variables declaration//GEN-END:variables
    private void forBackBtnEnable(boolean b) {
        btFirst.setEnabled(b);
        btLast.setEnabled(b);
        btPrior.setEnabled(b);
        btNext.setEnabled(b);
    }
    private void saveUpdateBtnVisible(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btSave.setVisible(b);
                break;
            case "update":
                btUpdate.setVisible(b);
                break;
            case "search":
                btSearchNow.setVisible(b);
                break;
            case "all":
                btSearchNow.setVisible(b);
                btSave.setVisible(b);
                btUpdate.setVisible(b);
                break;
        }
        btCancel.setVisible(b);
    }
    private void recEditBtnEnable(boolean b) {
        btAdd.setEnabled(b);
        btDel.setEnabled(b);
        btSearch.setEnabled(b);
        btView.setEnabled(b);
        btEdit.setEnabled(b);
    }
     

    private void setFirstRec() throws ParseException {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_dep_code(conn);
            if(stock.get(0)==null){
                code.setText("");
               empCode.setText("");
                date.setDate(null);
                amount.setText("");
                finCode.setText("");
                vanCode.setText("");
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void textFieldsSetEditable(boolean b) {
        //code.setEditable(b);
        empCode.setEditable(b);
        empName.setEnabled(b);
        date.setEnabled(b);
        amount.setEditable(b);
        finCode.setEditable(b);
        finName.setEnabled(b);
        vanCode.setEditable(b);
        vanName.setEnabled(b);
        desc.setEnabled(b);
    }

    private void getSetFirstRec() throws Exception {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_dep_code(conn);
            if(stock==null){
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Welcome! \nEnter first Record", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                textFieldsSetEditable(true);
                textFieldsSetEmpty();
                forBackBtnEnable(false);
                recEditBtnEnable(false);
                saveUpdateBtnVisible("save", true);
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void textFieldsSetEmpty() {
        code.setText("");
       empCode.setText("");
        date.setDate(null);
        amount.setText("");
        finCode.setText("");
        vanCode.setText("");
        desc.setText("");
    }

    private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }
    public static DefaultComboBoxModel buildAllComboBoxModel(String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            switch (c) {
                case "emp":
                    elements=data.find_all_sm_name_by_code(conn);
                    break;
                case "van":
                    elements=data.find_all_van_name_by_code(conn);
                    break;
                case "fin":
                    elements=data.find_all_fin_name_by_code(conn);
                    break;


            }
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }
    public static DefaultComboBoxModel buildOneComboBoxModel(String id,String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        String element=null;
        try {
            conn = data.connect_database();
            
            switch (c) {
                case "emp":
                    if(!id.equals("")){
                        element=data.find_sm_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "van":
                    if(!id.equals("")){
                        element=data.find_van_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "fin":
                    if(!id.equals("")){
                        element=data.find_fin_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
            }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
        public void paint(Graphics g) {
            super.paint(g);
        }
    });
    }

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "emp":
                        if(!name.equals("")){
                            s=data.find_sm_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "van":
                        if(!name.equals("")){
                            s=data.find_van_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "fin":
                        if(!name.equals("")){
                            s=data.find_fin_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }

    private void setTextInFields(ArrayList<String> stock) {
        try {
            code.setText(stock.get(0));
            date.setDate(f.toDate(stock.get(2)));
            empCode.setText(stock.get(1));
            empName.setModel(buildOneComboBoxModel(stock.get(1),"emp"));
            amount.setText(stock.get(3));
            
            vanCode.setText(stock.get(4));
            vanName.setModel(buildOneComboBoxModel(stock.get(4),"van"));
            finCode.setText(stock.get(5));
            finName.setModel(buildOneComboBoxModel(stock.get(5),"fin"));
            desc.setText(stock.get(6));
        } catch (Exception ex) {
            Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void findRecords(String codeProductRec) {
        if(code.getText()!=null){
            PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                String[] s=data.find_cash_dep_by_code(conn, codeProductRec);
                if (s!=null){
                    empCode.setText(s[0]);
                    code.setText(s[1]);
                    date.setDate(f.toDate(s[2]));
                    amount.setText(s[3]);
                    finCode.setText(s[5]);
                    vanCode.setText(s[4]);
                    desc.setText(s[6]);
                    
                    code.setEditable(false);
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    saveUpdateBtnVisible("search",false);
                }else{
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
                System.out.println("Asset Found is :"+ s);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(CASHDEP.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Enter Something First", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    

}
