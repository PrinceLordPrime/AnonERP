/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.voucher;

import DB.PAK_VOUCHR_DB;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import logical.Conversions;
import DynamicERP.dialoge.viewforms.ViewForm1;
import static DynamicERP.dialoge.viewforms.ViewForm1.isSaved;
import DynamicERP.dialoge.viewforms.dialogeClass;

/**
 *
 * @author Shan
 */
public class VOUCHERS extends javax.swing.JFrame {

    /**
     * Creates new form VOUCHERS
     */
    
    Conversions dateField=new Conversions();
    public VOUCHERS() {
        initComponents();
        
//        maximize();
        
        panel.setBorder(BorderFactory.createTitledBorder("Vouchers Invoice Properties: "));
        purchaseScrollPane.setBorder(BorderFactory.createTitledBorder("Payments Installments Adjustment: "));
        exitpanel.setBorder(BorderFactory.createTitledBorder(""));
        saveUpdateBtnVisible("all", false);
        textFieldsEditable(false);
        try {
            oDate.setDate(dateField.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
//      initTable();
//      initScrollPanel();
        initPanel();
        try {
            setLastRec();
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        link9 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrior = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnAddRow = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSearchNow = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        invNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarks = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        refNo = new javax.swing.JTextField();
        oDate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        purchaseScrollPane = new javax.swing.JScrollPane();
        exitpanel = new javax.swing.JPanel();
        splPanel = new javax.swing.JPanel();
        credit = new javax.swing.JTextField();
        Builty15 = new javax.swing.JLabel();
        debit = new javax.swing.JTextField();
        Builty18 = new javax.swing.JLabel();
        difference = new javax.swing.JTextField();
        Builty4 = new javax.swing.JLabel();
        btnexit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 120, 0, 0));
        setUndecorated(true);
        setType(java.awt.Window.Type.POPUP);

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setPreferredSize(new java.awt.Dimension(1024, 50));

        jLabel9.setBackground(new java.awt.Color(0, 102, 102));
        jLabel9.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Voucher Creations");
        jLabel9.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        link9.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        link9.setForeground(new java.awt.Color(255, 255, 255));
        link9.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak | https://dailymotion.com/dspak");
        link9.setToolTipText("");
        link9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        link9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                link9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                link9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                link9MouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                link9MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(link9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(link9)
                .addContainerGap())
        );

        btnEdit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 102, 51));
        btnAdd.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearch.setMnemonic('S');
        btnSearch.setText("Search");
        btnSearch.setToolTipText("");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnView.setMnemonic('V');
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 102, 102));
        btnDel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDel.setMnemonic('D');
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirst.setMnemonic('F');
        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrior.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPrior.setMnemonic('P');
        btnPrior.setText("Prior");
        btnPrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNext.setMnemonic('N');
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLast.setMnemonic('L');
        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnAddRow.setMnemonic('A');
        btnAddRow.setText("Add Row");
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('U');
        btnUpdate.setText("update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearchNow.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNow.setMnemonic('S');
        btnSearchNow.setText("Search Now");
        btnSearchNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        invNo.setEditable(false);
        invNo.setBackground(new java.awt.Color(204, 255, 204));
        invNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invNoActionPerformed(evt);
            }
        });

        jLabel1.setText("Doc No:");

        remarks.setColumns(20);
        remarks.setRows(5);
        jScrollPane2.setViewportView(remarks);

        jLabel7.setText("Description");

        jLabel5.setText("Date");

        jLabel2.setText("Ref No: ");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnAddRow)
                        .addGap(111, 111, 111)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchNow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnLast, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPrior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(invNo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(oDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(refNo, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDel)
                            .addComponent(btnView)
                            .addComponent(btnSearch)
                            .addComponent(btnEdit)
                            .addComponent(btnAdd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(invNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel5))
                            .addComponent(oDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(15, 15, 15))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addGap(5, 5, 5)
                                .addComponent(btnPrior)
                                .addGap(5, 5, 5)
                                .addComponent(btnNext)
                                .addGap(5, 5, 5)
                                .addComponent(btnLast)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel)
                    .addComponent(btnSearchNow)
                    .addComponent(btnAddRow))
                .addGap(6, 6, 6))
        );

        splPanel.setBackground(new java.awt.Color(204, 204, 255));
        splPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        splPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                splPanelKeyReleased(evt);
            }
        });

        credit.setEditable(false);
        credit.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        credit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        credit.setText("0.0");
        credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditActionPerformed(evt);
            }
        });
        credit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                creditKeyReleased(evt);
            }
        });

        Builty15.setText("Credit");

        debit.setEditable(false);
        debit.setBackground(new java.awt.Color(0, 204, 102));
        debit.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        debit.setForeground(new java.awt.Color(255, 255, 255));
        debit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        debit.setText("0.0");
        debit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debitActionPerformed(evt);
            }
        });

        Builty18.setText("Debits");

        difference.setEditable(false);
        difference.setBackground(new java.awt.Color(204, 255, 204));
        difference.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        difference.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        difference.setText("0.0");
        difference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                differenceActionPerformed(evt);
            }
        });

        Builty4.setText("Difference");

        javax.swing.GroupLayout splPanelLayout = new javax.swing.GroupLayout(splPanel);
        splPanel.setLayout(splPanelLayout);
        splPanelLayout.setHorizontalGroup(
            splPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Builty18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(debit, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Builty15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Builty4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(difference, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addContainerGap())
        );
        splPanelLayout.setVerticalGroup(
            splPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(splPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(splPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(difference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Builty4))
                    .addGroup(splPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Builty18)
                        .addComponent(debit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Builty15)
                        .addComponent(credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btnexit.setBackground(new java.awt.Color(0, 102, 102));
        btnexit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnexit.setForeground(new java.awt.Color(255, 255, 255));
        btnexit.setMnemonic('X');
        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exitpanelLayout = new javax.swing.GroupLayout(exitpanel);
        exitpanel.setLayout(exitpanelLayout);
        exitpanelLayout.setHorizontalGroup(
            exitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        exitpanelLayout.setVerticalGroup(
            exitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitpanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(exitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(splPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchaseScrollPane)
                    .addComponent(exitpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(purchaseScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void link9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_link9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_link9MouseClicked

    private void link9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_link9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_link9MouseEntered

    private void link9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_link9MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_link9MouseExited

    private void link9MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_link9MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_link9MouseReleased
     String invNo1;
    String remarks1;
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);

        textFieldsEditable(true);
        saveUpdateBtnVisible("update", true);
         invNo1 = refNo.getText();
        remarks1 = remarks.getText();
        ////System.out.println("At EDIT Max PC:"+productCount);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
        setNullTextFields();
        inetializePrductPanel();
        try {
            oDate.setDate(dateField.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
        
        /*    route.setEditable(true);
        route.setText("");
        route.requestFocus();
        code.setText("");*/
        ////System.out.println("At ADD Max PC:"+productCount);
        /*    route.setEditable(true);
        route.setText("");
        route.requestFocus();
        code.setText("");*/
        ////System.out.println("At ADD Max PC:"+productCount);
        /*    route.setEditable(true);
        route.setText("");
        route.requestFocus();
        code.setText("");*/
        ////System.out.println("At ADD Max PC:"+productCount);
        /*    route.setEditable(true);
        route.setText("");
        route.requestFocus();
        code.setText("");*/
        ////System.out.println("At ADD Max PC:"+productCount);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("search", true);
        textFieldsEditable(false);
        invNo.setEditable(true);
        setNullTextFields();
        invNo.setText("");
        invNo.requestFocus();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
//               /*
        try {
            dialogeClass.createViewVouchersWin();
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            invNo.setText(dialogeClass.codeVouchers);
            findRecords(invNo.getText());
        }else{
            //            JFrame j=new JFrame();
            //                    j.setAlwaysOnTop(true);
            //                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
//                */
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        JFrame j=new JFrame();
        j.setAlwaysOnTop(true);
        if(JOptionPane.showConfirmDialog(j,
            "Are you sure ! \nOn selecting \"Yes\" this will Delete the tasks?", "Confermation Diloge",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){ //ConfermationDiloge()){
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            
            if(invNo.getText()==null){
                
            }else{/*
                //============================SUPP CLBAL===================================
                for(int i=1;i<=productCount;i++){
                    if(purchaseProducts[i].isDisplayable()&& !purchaseProducts[i].getFinanceCode().getText().isEmpty()){
                        String purchaseProduct = data.get_clbal_from_finance(conn,purchaseProducts[i].getFinanceCode().getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                case "Debit":
                                    b = new BigDecimal(purchaseProduct).subtract(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                    break;
                                case "Credit":
                                    b =  new BigDecimal(purchaseProduct).add(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                    break;
                            }
                            if(b!=null){
                                data.update_clbal_in_finance(conn,b+"",purchaseProducts[i].getFinanceCode().getText());
                            }
                        }
                    }
                }
                //========================================================================= 
                */
                data.delete_purchase(conn,invNo.getText());
                data.delete_purchase_products_in_purchase(conn,invNo.getText());
//                data.delete_all_suppleg(conn, invNo.getText());
                setNullTextFields();
                try {
                    setLastRec();
                } catch (ParseException ex) {
                    Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{

        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
                DynamicERP.dialoge.newdataentry.dialogeClass.disposeVouchersWin();
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        try {
            setFirstRec();
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        ////System.out.println("At FIRST Max PC:"+productCount);
        ////System.out.println("At FIRST Max PC:"+productCount);
        ////System.out.println("At FIRST Max PC:"+productCount);
        ////System.out.println("At FIRST Max PC:"+productCount);
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> prior = new ArrayList<String>();
            prior=data.prior_purchase(conn,invNo.getText());
            if(prior!=null){
                setTextinPurchase(prior, dateField);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        ////System.out.println("At PRIOR Max PC:"+productCount);
        ////System.out.println("At PRIOR Max PC:"+productCount);
        ////System.out.println("At PRIOR Max PC:"+productCount);
        ////System.out.println("At PRIOR Max PC:"+productCount);
    }//GEN-LAST:event_btnPriorActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> next = new ArrayList<String>();
            next=data.next_purchase(conn,invNo.getText());
            if(next!=null){
                setTextinPurchase(next, dateField);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try {
            setLastRec();
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        ////System.out.println("At LAST Max PC:"+productCount);
        ////System.out.println("At LAST Max PC:"+productCount);
        ////System.out.println("At LAST Max PC:"+productCount);
        ////System.out.println("At LAST Max PC:"+productCount);
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        addRow();
        //System.out.println("At ADD ROW Max PC:"+productCount);
    }//GEN-LAST:event_btnAddRowActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!(refNo.getText().toString().equalsIgnoreCase(""))){
            PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;

                ///Max
                int max=0,codeInt=0;
                max=data.find_max_in_purchase_code(conn);

                //System.out.println("Max:"+max);
                if(max==0){
                    codeInt=1;
                }else{
                    codeInt=max+1;
                }
                try {
///*DOCNO,ODATE,REFNO,DESCR,TD,TC 
                    
                    tf=data.insert_purchase_in_table(conn,
                            codeInt+"",
                            dateField.toDateString(oDate.getDate().toString()),
                            refNo.getText(),
                            remarks.getText(),
                            debit.getText(),
                            credit.getText());
                    
                } catch (ParseException ex) {
                    Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                }
                for(int i=1;i<=productCount;i++){
//                    DOCNO,ACCODE,TYPE,AMOUNT,SEQNO
                    if(purchaseProducts[i].isDisplayable()&& !purchaseProducts[i].getFinanceCode().getText().isEmpty()){
                        String type="";
                        switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                            case "Debit":
                                type="D";
                                tf=data.insert_purchase_products_in_table(conn,
                                    codeInt+"",
                                    purchaseProducts[i].getFinanceCode().getText(),
                                    type,
                                    purchaseProducts[i].getAmount().getText(),
                                    purchaseProducts[i].getSeqno().getText(),
                                    "0.0");/*
                                //======================finance voucher==================
                                try {
                                        tf=data.insert_finance_ledger(conn
                                                ,purchaseProducts[i].getFinanceCode().getText(),
                                                dateField.toDateString(oDate.getDate().toString()),
            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                                purchaseProducts[i].getAmount().getText(),"0.0",
                                                codeInt+"");
                                    } catch (ParseException ex) {
                                        Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                                    }*/
                                break;

                            case "Credit":
                                type="C";

                                tf=data.insert_purchase_products_in_table(conn,
                                    codeInt+"",
                                    purchaseProducts[i].getFinanceCode().getText(),
                                    type,
                                    "0.0",
                                    purchaseProducts[i].getSeqno().getText(),
                                    purchaseProducts[i].getAmount().getText());
                                /*//======================finance voucher==================
                                try {
                                        tf=data.insert_finance_ledger(conn
                                                ,purchaseProducts[i].getFinanceCode().getText(),
                                                dateField.toDateString(oDate.getDate().toString()),
            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                                purchaseProducts[i].getAmount().getText(),"0.0",
                                                codeInt+"");
                                    } catch (ParseException ex) {
                                        Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                */
                                break;
                         }/*  
                        //============================FINANCE CLBAL===================================

                        String purchaseProduct = data.get_clbal_from_finance(conn,purchaseProducts[i].getFinanceCode().getText());
                        if(purchaseProduct!=null){
                            BigDecimal b=null;
                            switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                case "Debit":
                                    b = new BigDecimal(purchaseProduct).add(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                    break;
                                case "Credit":
                                    b =  new BigDecimal(purchaseProduct).subtract(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                    break;
                            }
                            if(b!=null){
                                data.update_clbal_in_finance(conn,b+"",purchaseProducts[i].getFinanceCode().getText());
                            }
                        }
                        //========================================================================= 
                        */
                    }
                }
                //                tf=insert_purchase_products_in_table(conn,docno,seqno,pcode,perqty,perrate,grossamount,discper,discrs,taxper,taxrs,netamount);
                if(tf){
                    invNo.setText(String.valueOf(codeInt));
                    invNo.setEditable(false);
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    recEditActionBtnVisible(false);
                    editableProductPanel(false);
                    saveUpdateBtnVisible("all", false);
                    loadProductsPanel(invNo.getText());
                }
                ////System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
//*/
            } catch (SQLException ex) {
                Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
            } 
//            catch (ParseException ex) {
//                Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }else{
            JFrame j=new JFrame();
            j.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(j, "Enter Refrance No And Others \n OR Press Cancel to Contine  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                
        boolean tf=false;
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
                try {
//docno,odate,refno,descr,td,tc
                    tf=data.update_purchase(conn,
                            invNo.getText()+"",
                            dateField.toDateString(oDate.getDate().toString()),
                            refNo.getText(),
                            remarks.getText(),
                            debit.getText(),
                            credit.getText());
                    System.out.println("update_purchase: "+tf);
                } catch (ParseException ex) {
                    Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ///==========================================================================
        
        ///==========================================================================
            for(int i=1;i<=productCount;i++){
                if(purchaseProducts[i]!=null&&purchaseProducts[i].isDisplayable()){
                    if(!purchaseProducts[i].getFinanceCode().getText().isEmpty()){
                        
                        
                        
                        
                        
                        
                        boolean isPresent=false;
                        PAK_VOUCHR_DB data1 =new PAK_VOUCHR_DB();
                        Connection conn1;
                        try {
                            conn1 = data1.connect_database();
                            if(data.find_max_in_purchase_products(conn1, invNo.getText())<=productCount){
                                //System.out.println("IF");
                                isPresent=data1.check_product_line_item_presence_new(conn1,
                                        invNo.getText(),
                                        purchaseProducts[i].getSeqno().getText(),
                                        productCount);
                            }else{
                                isPresent=false;
                            }
                            data1.close_database(conn1);
                        } catch (SQLException ex) {
                            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        //System.out.println("isPresent->"+isPresent);
                        if(isPresent){
                            
                            PAK_VOUCHR_DB data2 =new PAK_VOUCHR_DB();
                            Connection conn2;
                            try {
                                
                                conn2 = data2.connect_database();

                                /*
                                //===============================update CLBAL====================================
                                
                                String s4 = invNo.getText();
                                String s5 = purchaseProducts[i].getSeqno().getText();
                                String s0 = purchaseProducts[i].getFinanceCode().getText();
                                String s23 = purchaseProducts[i].getAmount().getText();
                                String s1 = purchaseProducts[i].getType().getSelectedItem().toString();

                                String[] s = data2.get_accode_type_debit_credit(conn2,s4,s5);
    //                            int a=0;/ACCODE,TYPE,DEBIT,CREDI
                                System.out.println("===s[0]:"+s[0]);
                                System.out.println("===invNo.getText():"+invNo.getText());
                                System.out.println("===s[1]:"+s[1]);
                                System.out.println("===a/c code:"+s1);
                                System.out.println("===s[2]:"+s[2]);
    //                            System.out.println("===remaining.getText():"+s2);
    //                            System.out.println("===s[2]:"+s[3]);
    //                            System.out.println("===remaining.getText():"+s3);
    //                            

                                switch (s1) {
                                    case "Debit":
                                        if(s[0].equalsIgnoreCase(s0)&&s[1].equalsIgnoreCase("D")&&s[3].equalsIgnoreCase("0")&&s[2].equalsIgnoreCase(s23)){
                                        }else{
                                            if(s[0].equalsIgnoreCase(s0)){
                                                //============================FINANCE CLBAL===================================
                                                String purchaseProduct = data2.get_clbal_from_finance(conn2,s0);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = ((new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2]))).add(new BigDecimal(s23));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s0);
                                                    }
                                                }
                                                //=========================================================================
                                            }else{
                                             //============================FINANCE CLBAL===================================
                                                String purchaseProduct = data2.get_clbal_from_finance(conn2,s[0]);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = (new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2]));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s[0]);
                                                    }
                                                }
                                                purchaseProduct = data2.get_clbal_from_finance(conn2,s0);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = new BigDecimal(purchaseProduct).add(new BigDecimal(s23));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s0);
                                                    }
                                                }
                                                //=========================================================================  
                                            }
                                        }
                                        break;
                                    case "Credit":
                                        if(s[0].equalsIgnoreCase(s0)&&s[1].equalsIgnoreCase("C")&&s[2].equalsIgnoreCase("0")&&s[3].equalsIgnoreCase(s23)){
                                        }else{
                                            if(s[0].equalsIgnoreCase(s0)){
                                                //============================FINANCE CLBAL===================================
                                                String purchaseProduct = data2.get_clbal_from_finance(conn2,s0);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = ((new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2]))).subtract(new BigDecimal(s23));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s0);
                                                    }
                                                }
                                                //=========================================================================
                                            }else{
                                             //============================FINANCE CLBAL===================================
                                                String purchaseProduct = data2.get_clbal_from_finance(conn2,s[0]);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = (new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2]));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s[0]);
                                                    }
                                                }
                                                purchaseProduct = data2.get_clbal_from_finance(conn2,s0);
                                                if(purchaseProduct!=null){
                                                    BigDecimal b=null;
                                                    b = new BigDecimal(purchaseProduct).subtract(new BigDecimal(s23));
                                                    if(b!=null){
                                                        data2.update_clbal_in_finance(conn2,b+"",s0);
                                                    }
                                                }
                                                //=========================================================================  
                                            }
                                        }
                                        break;
                                }
                                //===============================update CLBAL====================================
                                */
                                
                                String type="";
                                switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                    case "Debit":
                                        type="D";
                                        tf=data2.update_purchase_products_in_table_new(conn2,
                                        invNo.getText(),
                                        purchaseProducts[i].getFinanceCode().getText(),
                                        type,
                                        purchaseProducts[i].getAmount().getText(),
                                        purchaseProducts[i].getSeqno().getText(),
                                        "0.0");
                                        System.out.println("update_purchase_products_in_table_new: "+tf);
                                        break;
                                    case "Credit":
                                        type="C";
                                        tf=data2.update_purchase_products_in_table_new(conn2,
                                        invNo.getText(),
                                        purchaseProducts[i].getFinanceCode().getText(),
                                        type,
                                        "0.0",
                                        purchaseProducts[i].getSeqno().getText(),
                                        purchaseProducts[i].getAmount().getText());
                                        System.out.println("update_purchase_products_in_table_new: "+tf);
                                        break;
                                }  
                                
                                data2.close_database(conn2);
                            } catch (SQLException ex) {
                                Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }else {
                            //System.out.println(invNo.getText()+""+" INSERT-> "+purchaseProducts[i].getSeqNoText());
                            PAK_VOUCHR_DB data3 =new PAK_VOUCHR_DB();
                            Connection conn3;
                            try {//DOCNO,ACCODE,TYPE,AMOUNT,SEQNO
                                conn3 = data3.connect_database();
                                /*
                                ///==============================insert CLBAL========================
                                
                                //============================FINANCE CLBAL===================================

                                String purchaseProduct = data3.get_clbal_from_finance(conn3,purchaseProducts[i].getFinanceCode().getText());
                                if(purchaseProduct!=null){
                                    BigDecimal b=null;
                                    switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                        case "Debit":
                                            b = new BigDecimal(purchaseProduct).add(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                            break;
                                        case "Credit":
                                            b =  new BigDecimal(purchaseProduct).subtract(new BigDecimal(purchaseProducts[i].getAmount().getText()));
                                            break;
                                    }
                                    if(b!=null){
                                        data3.update_clbal_in_finance(conn3,b+"",purchaseProducts[i].getFinanceCode().getText());
                                    }
                                }
                                
                                //========================================================================= 
                                
                                
                                ///==============================insert CLBAL========================
                                
                                */
                                
                                
                                String type="";
                                    switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                        case "Debit":
                                            type="D";
                                            tf=data3.insert_purchase_products_in_table(conn3,
                                            invNo.getText(),
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            type,
                                            purchaseProducts[i].getAmount().getText(),
                                            purchaseProducts[i].getSeqno().getText(),
                                            "0.0");
                                
                                            break;
                                        case "Credit":
                                            type="C";
                                            tf=data3.insert_purchase_products_in_table(conn3,
                                            invNo.getText(),
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            type,
                                            "0.0",
                                            purchaseProducts[i].getSeqno().getText(),
                                            purchaseProducts[i].getAmount().getText());

                                            break;
                                     }
                                
                                data3.close_database(conn3);
                            } catch (SQLException ex) {
                                Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        /*
                        //====================Finance(FINLEG) Update Start=========================
                        PAK_VOUCHR_DB data4 =new PAK_VOUCHR_DB();
                        Connection conn4;
                        try {//DOCNO,ACCODE,TYPE,AMOUNT,SEQNO
                            conn4 = data4.connect_database();//
                            String s2 = "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+invNo1+" against: "+remarks1;
//                                System.out.println("====================="+s2);
                            if(data4.check_product_line_item_description_presence_new(conn4,invNo.getText(),s2)){
                                
                                switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                    case "Debit":
                                        tf=data.update_suppleg_ledger(conn4,
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                                            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                            purchaseProducts[i].getAmount().getText(),
                                            "0.0",
                                            invNo.getText(),s2);
                                        break;
                                    case "Credit":
                                        tf=data.update_suppleg_ledger(conn4,
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                                            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                            "0.0",
                                            purchaseProducts[i].getAmount().getText(),
                                            invNo.getText(),s2);
                                        break;
                                }
                            }else{
                                switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                                    case "Debit":
                                        tf=data.insert_finance_ledger(conn4,
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                                            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                            purchaseProducts[i].getAmount().getText(),
                                            "0.0",
                                            invNo.getText());
                                        break;
                                    case "Credit":
                                         tf=data.insert_finance_ledger(conn4,
                                            purchaseProducts[i].getFinanceCode().getText(),
                                            dateField.toDateString(oDate.getDate().toString()),
                                            "Seq # "+purchaseProducts[i].getSeqno().getText()+" Ref # "+refNo.getText()+" against: "+remarks.getText(),
                                            "0.0",
                                            purchaseProducts[i].getAmount().getText(),
                                            invNo.getText());
                                        break;
                                }
                                data4.close_database(conn4);
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        catch (ParseException ex) {
                           Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        //====================Finance(FINLEG) Update End=========================
                        */
                    }else{
                        JFrame j=new JFrame();
                        j.setAlwaysOnTop(true);
                        JOptionPane.showMessageDialog(j, "Empty Seek Value will not be updatd \n Nor will be deleted", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if(tf){
                saveUpdateBtnVisible("all", false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
                textFieldsEditable(false);
                editableProductPanel(false);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            loadProductsPanel(invNo.getText());
        ////System.out.println("At UPDATE Max PC:"+productCount);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowActionPerformed
        findRecords(invNo.getText());
    }//GEN-LAST:event_btnSearchNowActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        saveUpdateBtnVisible("all", false);
        forBackBtnEnable(true);
        recEditBtnEnable(true);
        textFieldsEditable(false);
        try {
            setFirstRec();
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
//        editableProductPanel(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void invNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invNoActionPerformed

    private void creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditActionPerformed

    private void creditKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_creditKeyReleased

    }//GEN-LAST:event_creditKeyReleased

    private void debitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_debitActionPerformed

    private void differenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_differenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_differenceActionPerformed

    private void splPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_splPanelKeyReleased

    }//GEN-LAST:event_splPanelKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VOUCHERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VOUCHERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VOUCHERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VOUCHERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VOUCHERS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Builty15;
    private javax.swing.JLabel Builty18;
    private javax.swing.JLabel Builty4;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrior;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchNow;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnexit;
    private javax.swing.JTextField credit;
    private javax.swing.JTextField debit;
    private javax.swing.JTextField difference;
    private javax.swing.JPanel exitpanel;
    private javax.swing.JTextField invNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel link9;
    private com.toedter.calendar.JDateChooser oDate;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane purchaseScrollPane;
    private javax.swing.JTextField refNo;
    private javax.swing.JTextArea remarks;
    private javax.swing.JPanel splPanel;
    // End of variables declaration//GEN-END:variables
    
      // Start of my variables declaration   
   
    private static int productCount=0;
    private static PakVocFieldsPanel[] purchaseProducts = new PakVocFieldsPanel[500];
    private static VocHeaderPanel purchaseHeaderPanel= new VocHeaderPanel();
    private static JPanel purchasePanel;// = new JPanel();
    //
    private void forBackBtnEnable(boolean b) {
       btnFirst.setEnabled(b);
       btnLast.setEnabled(b);
       btnPrior.setEnabled(b);
       btnNext.setEnabled(b);
    }

    private void recEditBtnEnable(boolean b) {
        btnAdd.setEnabled(b);
        btnDel.setEnabled(b);
        btnSearch.setEnabled(b);
        btnView.setEnabled(b);
        btnEdit.setEnabled(b);
    }

    private void saveUpdateBtnVisible(String s, boolean visibleProperty) {
        switch (s.toLowerCase()) {
            case "save":
                btnSave.setVisible(visibleProperty);
                break;
            case "update":
                btnUpdate.setVisible(visibleProperty);
                break;
            case "search":
                btnSearchNow.setVisible(visibleProperty);
                break;
            case "all":
                btnSearchNow.setVisible(visibleProperty);
                btnSave.setVisible(visibleProperty);
                btnUpdate.setVisible(visibleProperty);
                break;
        }
        btnCancel.setVisible(visibleProperty);
        btnAddRow.setVisible(visibleProperty);
        
    }
   
    private void textFieldsEditable(boolean b) {
        oDate.setEnabled(b);
        refNo.setEditable(b);
        remarks.setEnabled(b);
        credit.setEditable(b);
        invNo.setEditable(b);
        difference.setEditable(b);
        debit.setEditable(b);
        editableProductPanel(b); 
        
    }
    private void editableProductPanel(boolean b) {
        for(int i=1;i<=productCount;i++){
           if(purchaseProducts[i]!=null){
               purchaseProducts[i].textFieldsEditableProducts(b);
           }
           
        }
    }
    private void setNullTextFields() {
        oDate.setDate(null);
        refNo.setText("");
        remarks.setText("");
        credit.setText("");
        invNo.setText("");
        difference.setText("");
        debit.setText("");
        inetializePrductPanel();
    }

    private void inetializePrductPanel() {
        editableProductPanel(true);
        purchasePanel.removeAll();
        purchasePanel.revalidate();
        purchasePanel.repaint();
        productCount=0;
        purchasePanel.add(purchaseHeaderPanel);
        addRow();
    }

    private void addRow() {
        productCount=productCount+1;
//        System.out.println("addRow  productCount-->>>"+productCount);
        purchaseProducts[productCount]=new PakVocFieldsPanel();
        purchaseProducts[productCount].setName(productCount+"");
        purchaseProducts[productCount].getSeqno().setText(productCount+"");
        
        purchaseProducts[productCount].getFinanceCode().addKeyListener(new KeyAdapter(){
            public void keyReleased(KeyEvent e) {
//                System.out.print("T:"+purchaseProducts[productCount].getGrossAmt().getText());
                update();
            }
        });
        purchaseProducts[productCount].getType().addKeyListener(new KeyAdapter(){
            public void keyReleased(KeyEvent e) {
//                System.out.print("T:"+purchaseProducts[productCount].getGrossAmt().getText());
                update();
            }
        });
        purchaseProducts[productCount].getAmount().addKeyListener(new KeyAdapter(){
            public void keyReleased(KeyEvent e) {
//                System.out.print("T:"+purchaseProducts[productCount].getGrossAmt().getText());
                update();
                frmSumCredit();
                frmDifference();
            }
        });
        purchaseProducts[productCount].getType().addActionListener(new ActionListener(){                                       

            @Override
            public void actionPerformed(ActionEvent ae) {
               update();
                frmSumCredit();
                frmDifference();
            }
        });
        purchaseProducts[productCount].getType().addPopupMenuListener(new PopupMenuListener() {

            @Override
            public void popupMenuWillBecomeVisible(PopupMenuEvent pme) {
                update();
                frmSumCredit();
                frmDifference();
            }

            @Override
            public void popupMenuWillBecomeInvisible(PopupMenuEvent pme) {
                update();
                frmSumCredit();
                frmDifference();
                
            }

            @Override
            public void popupMenuCanceled(PopupMenuEvent pme) {
                update();
                frmSumCredit();
                frmDifference();
            }

        });
        
        purchaseProducts[productCount].getjLabel2().addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e) {
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JLabel label = (JLabel)e.getSource();
                if(label.isEnabled()){
                    if(JOptionPane.showConfirmDialog(j,
                    "Are you sure ! \nOn selecting \"Yes\" this will Delete the Row...\n\n Deleted Row can not be restored  . . .", "Confermation Diloge",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){ //ConfermationDiloge()){
                        int i=Integer.parseInt(label.getParent().getName());
                        String s4 = invNo.getText();
                        String s5 = purchaseProducts[i].getSeqno().getText();
                        String s0 = purchaseProducts[i].getFinanceCode().getText();
                        String s23 = purchaseProducts[i].getAmount().getText();
                        String s1 = purchaseProducts[i].getType().getSelectedItem().toString();
                        try {
                            PAK_VOUCHR_DB data1 =new PAK_VOUCHR_DB();
                            Connection conn1;     
                            conn1 = data1.connect_database();
                            String[] s = data1.get_accode_type_debit_credit(conn1,(s4!=null?s4:"True"),(s5!=null?s5:"True"));
                            /*
                            if(s!=null){
                                    if(s[0].equalsIgnoreCase(s0)){
                                        
                                        //============================FINANCE CLBAL===================================
                                        String purchaseProduct = data1.get_clbal_from_finance(conn1,s0);
                                        if(purchaseProduct!=null){
                                            BigDecimal b=null;
                                            b = ((new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2])));
                                            if(b!=null){
                                                data1.update_clbal_in_finance(conn1,b+"",s0);
                                            }
                                        }
                                        //=========================================================================
                                    }else{
                                     //============================FINANCE CLBAL===================================
                                        String purchaseProduct = data1.get_clbal_from_finance(conn1,s[0]);
                                        if(purchaseProduct!=null){
                                            BigDecimal b=null;
                                            b = (new BigDecimal(purchaseProduct).add(new BigDecimal(s[3]))).subtract(new BigDecimal(s[2]));
                                            if(b!=null){
                                                data1.update_clbal_in_finance(conn1,b+"",s[0]);
                                            }
                                        }
                                        //=========================================================================  
                                    }
//                                }
                            }
                            */
                            conn1.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
                        }
                
                        
                        
                        removeRow(Integer.parseInt(label.getParent().getName()));
                        deletePurchaseProduct(invNo.getText(),label.getParent().getName());
                        frmSumCredit();
                        frmDifference();
                        
                    }
                }
            }
        });
        initializePanelListner(purchaseProducts[productCount]);
        purchasePanel.add(purchaseProducts[productCount]);
    }
    private void update() {
        
    }
    private void removeRow(int productIndex) {
        //System.out.println("purchaseProducts["+productIndex+"] : "+purchaseProducts[productIndex].getName());
        purchasePanel.remove(purchaseProducts[productIndex]);
        purchasePanel.revalidate();
        purchasePanel.repaint();
    }
    private void deletePurchaseProduct(String s,String s1) {
        try {
            PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
            Connection conn;     
            conn = data.connect_database();
            data.delete_purchase_product(conn, s,s1);
            //            if(data.check_product_line_item_description_presence_new(conn, s, s1)){
                String s2 = "Seq # "+s1+" Ref # "+invNo1+" against: "+remarks1;
//                System.out.println("====================="+s2);
//                data.delete_suppleg(conn, s,s2);
//            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initializePanelListner(final JPanel p) {
//        p=new JPanel();
        p.addMouseListener(new MouseListener(){

            @Override
            public void mouseClicked(MouseEvent me) {
                
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mousePressed(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent me) {
                p.setBackground(Color.green);
            }

            @Override
            public void mouseExited(MouseEvent me) {
//                java.awt.Point p1 = new java.awt.Point(me.getLocationOnScreen());
//                SwingUtilities.convertPointFromScreen(p1, me.getComponent());
//                if(me.getComponent().contains(p1)) {return;}
                p.setBackground(null);
            }
        });
    }
private void setLastRec() throws ParseException {
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_purchase(conn);
            if(stock==null){
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Welcome Enter First Record", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                btnAdd.doClick();
                btnCancel.setVisible(false);
                editableProductPanel(true);
            }else{
                setTextinPurchase(stock, dateField);
                editableProductPanel(false);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTextinPurchase(ArrayList<String> stock, Conversions dateField) {
        try {
//                DOCNO,ODATE,REFNO,DESCR,TD,TC
            oDate.setDate(dateField.toDate(stock.get(1)));
            invNo.setText(stock.get(0));
            loadProductsPanel(invNo.getText());
            refNo.setText(stock.get(2));
            remarks.setText(stock.get(3));
            debit.setText(stock.get(4));
            credit.setText(stock.get(5));
            difference.setText((Float.parseFloat(stock.get(4))-Float.parseFloat(stock.get(5)))+"");
            
        } catch (ParseException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setFirstRec() throws ParseException {
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock= data.get_first_purchase(conn);
            if(stock==null){
                setNullTextFields();
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                setTextinPurchase(stock,dateField);
//                add.setText(stock.get(2));//from join 
//                cont.setText(stock.get(2));
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

     private void findRecords(String text) {
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> s=data.find_purchase_by_code(conn, text);
            if (s!=null){
                saveUpdateBtnVisible("all", false);
                setTextinPurchase(s, dateField);
                textFieldsEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
//            System.out.println("Asset Found is :"+ s);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void recEditActionBtnVisible(boolean b) {
        btnSave.setVisible(b);
        btnUpdate.setVisible(b);
        btnSearchNow.setVisible(b);
        btnCancel.setVisible(b);
    }

    
    private GraphicsEnvironment setEnvironment() {
        return getLocal();
    }

    private GraphicsEnvironment getLocal() {
        return GraphicsEnvironment.getLocalGraphicsEnvironment();
    }

    private void boundsSize() {
        this.setMaximizedBounds(setEnvironment().getMaximumWindowBounds());
    }

    private void extend() {
        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
    }

    private void maximize() {
        boundsSize();
        extend();
    }

    
   private void initPanel() {
        purchasePanel = new JPanel();
        purchasePanel.setLayout(new BoxLayout(purchasePanel, BoxLayout.PAGE_AXIS));
        purchasePanel.add(purchaseHeaderPanel);
        addRow();
            
        purchaseScrollPane.getViewport().setView(purchasePanel);
    }

    private void loadProductsPanel(String text) {
        inetializePrductPanel();
        PAK_VOUCHR_DB data =new PAK_VOUCHR_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> name[]=data.search_products(conn,text);
            removeRow(productCount);
            productCount--;
            int lastSeqNo=0;
            for(int i=0;i<name.length;i++){
//                System.out.println("name["+i+"].get(1)"+name[i].get(4));
                addRow(Integer.parseInt(name[i].get(4))-1);
//                System.out.println("productCount :----:"+productCount);
                for(int j=0;j<11;j++){
                    switch(j)
                    {
                        case 0:
                            // Invoice No. is to just match with VOCMAIN
                            break;
                        case 1:
                            purchaseProducts[productCount].getFinanceCode().setText(name[i].get(j));
                            String temp = purchaseProducts[productCount].getFinanceCode().getText();
                            purchaseProducts[productCount].setFinanceName(temp);
                            break;
                        case 2:
                            int type=-1;
                            switch (name[i].get(j)) {
                                case "D":
                                    type=0;
                                    purchaseProducts[productCount].getAmount().setText(name[i].get(3));
                                    break;
                                case "C":
                                    type=1;
                                    purchaseProducts[productCount].getAmount().setText(name[i].get(5));
                                    break;
                            }  
                            purchaseProducts[productCount].getType().setSelectedIndex(type);
                            break;
                        case 3:
//                            purchaseProducts[productCount].getAmount().setText(name[i].get(j));
                            break;
                        case 4:
                            purchaseProducts[productCount].getSeqno().setText(name[i].get(j));
                            lastSeqNo=Integer.parseInt(name[i].get(j));
                            break;
                    }
                }
                //System.out.println("");
            }
            productCount=lastSeqNo;
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(VOUCHERS.class.getName()).log(Level.SEVERE, null, ex);
        }
        editableProductPanel(false);
    }

    private void addRow(int tempProductCount) {
        productCount=tempProductCount;
        addRow();
    }
    
/*
private void frmRemaning() {
    try{
//           remaining.setText(round((Float.parseFloat(netpayable.getText())-Float.parseFloat(paid.getText())),3)+"");
            BigDecimal paidBD = BigDecimal.valueOf(Float.parseFloat(paid.getText()));
            BigDecimal netpayableBD = BigDecimal.valueOf(Float.parseFloat(netpayable.getText()));
            BigDecimal temp1 = netpayableBD.subtract(paidBD);
            remaining.setText(temp1+"");
        }catch(NumberFormatException ex){
            if(ex.getMessage().matches("empty String")){
//                //System.out.println("Do Nothing: "+ex);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Invalid Input", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
//                //System.out.println("Number Format is InCorrect: "+ex.getMessage());
            }
        }
    }  
*/
    
    private void frmDifference() {
    try{
//           remaining.setText(round((Float.parseFloat(netpayable.getText())-Float.parseFloat(paid.getText())),3)+"");
            BigDecimal creditBD = BigDecimal.valueOf(Float.parseFloat(credit.getText()));
            BigDecimal debitBD = BigDecimal.valueOf(Float.parseFloat(debit.getText()));
            BigDecimal temp1 = debitBD.subtract(creditBD);
            difference.setText(temp1+"");
        }catch(NumberFormatException ex){
            if(ex.getMessage().matches("empty String")){
//                //System.out.println("Do Nothing: "+ex);
            }else{
                JFrame j=new JFrame();
                j.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(j, "Invalid Input", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
//                //System.out.println("Number Format is InCorrect: "+ex.getMessage());
            }
        }
    }
    private void frmSumCredit() {
        float c=0f,d =0f;
        for(int i=1;i<=productCount;i++){
//          DOCNO,ACCODE,TYPE,AMOUNT,SEQNO
            
            if(purchaseProducts[i].isDisplayable()&& !purchaseProducts[i].getFinanceCode().getText().isEmpty()){
                String type="";
                    switch (purchaseProducts[i].getType().getSelectedItem().toString()) {
                        case "Debit":
                            type="D";
                            break;
                        case "Credit":
                            type="C";
                            break;
                     }
                if(type.equals("D")){
                    d=d+Float.parseFloat(purchaseProducts[i].getAmount().getText());
                }
                else if(type.equals("C")){
                    c=c+Float.parseFloat(purchaseProducts[i].getAmount().getText());
                }
            }
        }
        credit.setText(c+"");
        debit.setText(d+"");
    }
    
}
