/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DynamicERP.frames.relationalforms;

import DynamicERP.frames.relationalforms.CUSTREC;
import DynamicERP.frames.relationalforms.EMPREC;
import DynamicERP.dialoge.viewforms.dialogeClass;
import DB.PAK_DB;
import DB.PAK_GLOBAL_DB;
import logical.Conversions;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import static java.util.Calendar.DAY_OF_YEAR;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import DynamicERP.frames.newdataentry.FIRMREC;
import static DynamicERP.dialoge.viewforms.ViewFormId1.isSaved;
import static DynamicERP.dialoge.viewforms.dialogeClass.createJasperView;
import static DynamicERP.dialoge.viewforms.dialogeClass.createViewExpRecWin;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import logical.dateIncrementer;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DynamicSP
 */
public class EXPDEP extends javax.swing.JFrame {
    Conversions c = new Conversions();
    
    
PAK_GLOBAL_DB dataAA =new PAK_GLOBAL_DB();
    Connection connAA;
    /**
     * Creates new form EXPDEP
     */
    ArrayList<String> MM=new ArrayList<String>();
    Conversions f=new Conversions(); 
        
    public EXPDEP() throws ParseException {
        initComponents();
        
         try {
                connAA = dataAA.connect_database();
            
            }catch (SQLException e) {
                System.out.println("Exception ===> "+e);
            }
         
         
        pan_expence_entry.setBorder(BorderFactory.createTitledBorder("Add New Expence or view Old Data: "));
        pan_expence_report.setBorder(BorderFactory.createTitledBorder("Execute Expence Report: "));
        
//initComboBox();
        try {
            fromdate.setDate(f.getPresentDate());
            todate.setDate(f.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        styleComboBox(smNameD);
        styleComboBox(expName);
        styleComboBox(vanName);
        styleComboBox(finName);
        
        recEditActionBtnVisible(false);
        textFieldsEditable(false);
        code.setEditable(false);
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_exp_dep(conn);
            if(stock!=null){
                setTextInFields(stock);
            }else{
                textFieldsEditable(true);
                smName.requestFocus();
                recEditBtnEnable(false);
                forBackBtnEnable(false);
                saveUpdateBtnVisible("save",true);
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("ty DB");
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        pan_expence_report = new javax.swing.JPanel();
        cb_expname = new javax.swing.JComboBox();
        expcode_rep = new javax.swing.JTextField();
        suppCat4 = new javax.swing.JLabel();
        suppCat3 = new javax.swing.JLabel();
        empcode = new javax.swing.JTextField();
        cb_empname = new javax.swing.JComboBox();
        fromdate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        todate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btnempall = new javax.swing.JButton();
        btnexp_empall = new javax.swing.JButton();
        btnempandexp = new javax.swing.JButton();
        btnexp_all = new javax.swing.JButton();
        pan_expence_entry = new javax.swing.JPanel();
        expName = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        suppCat1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        smNameD = new javax.swing.JComboBox();
        btnDel = new javax.swing.JButton();
        btnSearchNow = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        suppCat = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        smName = new javax.swing.JTextField();
        btnLast = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        amount = new javax.swing.JTextField();
        expCode = new javax.swing.JTextField();
        suppCat2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        btnPrior = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        suppCat5 = new javax.swing.JLabel();
        vanCode = new javax.swing.JTextField();
        finCode = new javax.swing.JTextField();
        finName = new javax.swing.JComboBox();
        suppCat6 = new javax.swing.JLabel();
        vanName = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(80, 100, 0, 0));
        setFocusCycleRoot(false);
        setMinimumSize(new java.awt.Dimension(850, 520));
        setPreferredSize(new java.awt.Dimension(850, 520));
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel11.setBackground(new java.awt.Color(0, 102, 102));
        jLabel11.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Expence Statements");
        jLabel11.setToolTipText("");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/expence 72.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel15)
                .addGap(184, 184, 184)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel15)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel12.setBackground(new java.awt.Color(0, 153, 153));
        jLabel12.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("http://dspak.com | https://ds-pak.com | https://facebook.com/dspak");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cb_expname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Expence" }));
        cb_expname.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cb_expnamePopupMenuWillBecomeVisible(evt);
            }
        });
        cb_expname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_expnameActionPerformed(evt);
            }
        });
        cb_expname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cb_expnameKeyPressed(evt);
            }
        });

        expcode_rep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expcode_repActionPerformed(evt);
            }
        });
        expcode_rep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expcode_repKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                expcode_repKeyReleased(evt);
            }
        });

        suppCat4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat4.setForeground(new java.awt.Color(0, 102, 102));
        suppCat4.setText(" Expence Name:");

        suppCat3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat3.setForeground(new java.awt.Color(0, 102, 102));
        suppCat3.setText(" Employee:");

        empcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empcodeActionPerformed(evt);
            }
        });
        empcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                empcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                empcodeKeyReleased(evt);
            }
        });

        cb_empname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Employee" }));
        cb_empname.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cb_empnamePopupMenuWillBecomeVisible(evt);
            }
        });
        cb_empname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_empnameActionPerformed(evt);
            }
        });
        cb_empname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cb_empnameKeyPressed(evt);
            }
        });

        fromdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fromdateKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("From Date:");

        todate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                todateKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("To Date:");

        btnempall.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnempall.setText("Expence Summary");
        btnempall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnempallActionPerformed(evt);
            }
        });

        btnexp_empall.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnexp_empall.setText("Eployee Wise");
        btnexp_empall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexp_empallActionPerformed(evt);
            }
        });

        btnempandexp.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnempandexp.setText("EMP & EXP Wise");
        btnempandexp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnempandexpActionPerformed(evt);
            }
        });

        btnexp_all.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnexp_all.setText("Expence Wise");
        btnexp_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexp_allActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan_expence_reportLayout = new javax.swing.GroupLayout(pan_expence_report);
        pan_expence_report.setLayout(pan_expence_reportLayout);
        pan_expence_reportLayout.setHorizontalGroup(
            pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_expence_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pan_expence_reportLayout.createSequentialGroup()
                        .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suppCat4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(todate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_reportLayout.createSequentialGroup()
                                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(expcode_rep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb_empname, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_expname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pan_expence_reportLayout.createSequentialGroup()
                        .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnempall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnempandexp, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnexp_empall, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnexp_all, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pan_expence_reportLayout.setVerticalGroup(
            pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_reportLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suppCat3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_empname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(empcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suppCat4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_expname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(expcode_rep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnexp_empall)
                    .addComponent(btnempandexp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan_expence_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnempall)
                    .addComponent(btnexp_all))
                .addContainerGap())
        );

        expName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        expName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                expNamePopupMenuWillBecomeVisible(evt);
            }
        });
        expName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expNameActionPerformed(evt);
            }
        });
        expName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expNameKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 51));
        jLabel16.setText("(Auto Genrated)");

        btnAdd.setBackground(new java.awt.Color(0, 102, 51));
        btnAdd.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L2_24.png"))); // NOI18N
        btnFirst.setMnemonic('F');
        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnView.setMnemonic('V');
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        suppCat1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat1.setForeground(new java.awt.Color(0, 102, 102));
        suppCat1.setText("Ammount:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Date:");

        smNameD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        smNameD.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                smNameDPopupMenuWillBecomeVisible(evt);
            }
        });
        smNameD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smNameDActionPerformed(evt);
            }
        });
        smNameD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                smNameDKeyPressed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 102, 102));
        btnDel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDel.setMnemonic('D');
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnSearchNow.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSearchNow.setMnemonic('S');
        btnSearchNow.setText("Search Now");
        btnSearchNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNowActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 102, 102));
        jButton9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setMnemonic('X');
        jButton9.setText("Exit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        suppCat.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat.setForeground(new java.awt.Color(0, 102, 102));
        suppCat.setText("Expance By:");

        btnNext.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R1_24.png"))); // NOI18N
        btnNext.setMnemonic('N');
        btnNext.setText("Next");
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('U');
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        smName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smNameActionPerformed(evt);
            }
        });
        smName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                smNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                smNameKeyReleased(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/R2_24.png"))); // NOI18N
        btnLast.setMnemonic('L');
        btnLast.setText("Last");
        btnLast.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateKeyPressed(evt);
            }
        });

        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });

        expCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expCodeActionPerformed(evt);
            }
        });
        expCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                expCodeKeyReleased(evt);
            }
        });

        suppCat2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat2.setForeground(new java.awt.Color(0, 102, 102));
        suppCat2.setText("Exp Name:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("DocNo:");

        code.setBackground(new java.awt.Color(204, 255, 204));

        btnPrior.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnPrior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oracledms/frames/resources/L1_24.png"))); // NOI18N
        btnPrior.setMnemonic('P');
        btnPrior.setText("Prior");
        btnPrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriorActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSearch.setMnemonic('S');
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        suppCat5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat5.setForeground(new java.awt.Color(0, 102, 102));
        suppCat5.setText("Van:");

        vanCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanCodeActionPerformed(evt);
            }
        });
        vanCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vanCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vanCodeKeyReleased(evt);
            }
        });

        finCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finCodeActionPerformed(evt);
            }
        });
        finCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                finCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                finCodeKeyReleased(evt);
            }
        });

        finName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        finName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                finNamePopupMenuWillBecomeVisible(evt);
            }
        });
        finName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finNameActionPerformed(evt);
            }
        });
        finName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                finNameKeyPressed(evt);
            }
        });

        suppCat6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        suppCat6.setForeground(new java.awt.Color(0, 102, 102));
        suppCat6.setText("Finance:");

        vanName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vanName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                vanNamePopupMenuWillBecomeVisible(evt);
            }
        });
        vanName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanNameActionPerformed(evt);
            }
        });
        vanName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vanNameKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pan_expence_entryLayout = new javax.swing.GroupLayout(pan_expence_entry);
        pan_expence_entry.setLayout(pan_expence_entryLayout);
        pan_expence_entryLayout.setHorizontalGroup(
            pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_expence_entryLayout.createSequentialGroup()
                .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_expence_entryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPrior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNext)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLast))
                            .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(suppCat, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(suppCat2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(suppCat5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(suppCat6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(suppCat1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                            .addComponent(finCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(finName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                            .addComponent(vanCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(vanName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(amount)
                                        .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                            .addComponent(smName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(smNameD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                            .addComponent(expCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(expName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(pan_expence_entryLayout.createSequentialGroup()
                                            .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel16))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_entryLayout.createSequentialGroup()
                        .addComponent(btnSearchNow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pan_expence_entryLayout.setVerticalGroup(
            pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_expence_entryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_expence_entryLayout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addGap(1, 1, 1)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel))
                    .addGroup(pan_expence_entryLayout.createSequentialGroup()
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst)
                            .addComponent(btnPrior)
                            .addComponent(btnNext)
                            .addComponent(btnLast))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(code, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(smName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(smNameD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(suppCat2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(expCode)
                            .addComponent(expName))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vanCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vanName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(finName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(finCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suppCat1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(amount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pan_expence_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchNow)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pan_expence_entry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pan_expence_report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pan_expence_report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pan_expence_entry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        jScrollPane1.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try {
            setLastRec();
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriorActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> prior = new ArrayList<String>();
            prior=data.prior_exp_dep(conn,code.getText());
            if(!(prior==null)){
                setTextInFields(prior);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Prior not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPriorActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        setFirstRec();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // SELECT LAG(p.FirstName) OVER (ORDER BY p.BusinessEntityID) PreviousValue,p.FirstName FROM Person.Person p
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> next = new ArrayList<String>();
            next=data.next_exp_dep(conn,code.getText(),smName.getText());
            if(!(next==null)){
                setTextInFields(next);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Next not found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        JFrame j=new JFrame();
        j.setAlwaysOnTop(true);
        if(JOptionPane.showConfirmDialog(j,
            "Are you sure ! \nOn selecting \"Yes\" this will DELETE the record?", "Confermation Diloge",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){ //ConfermationDiloge()){

        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;
            if(code.getText()==null||smName.getText()==null){

            }else{
                tf=data.delete_exp_dep(conn,code.getText());
            }
            if(tf){
                setNullTextFields();
                setLastRec();
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (ParseException ex) {
                Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{

        }
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
//        /*
         try {
            createViewExpRecWin();
        } catch (SQLException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(isSaved){
            code.setText(dialogeClass.codeExpRec);
            findRecords(dialogeClass.codeExpRec);
        }else{
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Saved", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        btnEdit.requestFocus();
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        btnSearchNow.setVisible(true);
        btnCancel.setVisible(true);
        code.setEditable(true);
        textFieldsEditable(false);
        reportpanelfields(false);
        setNullTextFields();
        code.setText("");
        code.requestFocus();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
            if (btnFirst.isEnabled())
            {
                    this.dispose();
                    DynamicERP.dialoge.newdataentry.dialogeClass.disposeExpDepWin();
            }
            else 
                {
            JFrame j=new JFrame();
            j.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(j,  "Please Save or cancel First \n or Complete your work on this page then Close this page...", "Info... ", JOptionPane.WARNING_MESSAGE);
                 
                }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        saveUpdateBtnVisible("save", true);
        textFieldsEditable(true);
        setNullTextFields();
        reportpanelfields(false);
        try {
            date.setDate(f.getPresentDate());
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        smName.requestFocus();
        smName.selectAll();

        code.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        textFieldsEditable(true);
        forBackBtnEnable(false);
        recEditBtnEnable(false);
        smName.setEditable(true);
        smName.selectAll();
        btnUpdate.setVisible(true);
        btnCancel.setVisible(true);
        reportpanelfields(false);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!(smName.getText().toString().equalsIgnoreCase(""))){
            
            java.util.Date date1 = null;
            try {
                System.out.println(date.getDate().toString());
                date1 = f.toReturnedDate(date.getDate().toString());
            } catch (ParseException ex) {
                Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        PAK_DB data =new PAK_DB();
            Connection conn;
            try {
                conn = data.connect_database();
                boolean tf=false;

                ///Max
                int max=0,codeInt=0;
                max=data.find_max_in_exp_dep_code(conn);
                System.out.println("Max:"+max);
                if(max==0){
                    codeInt=1;
                }else{
                    codeInt=max+1;
                }
                ///Max                 String.valueOf(codeInt)
                try {
                    tf = data.insert_exp_dep_rec_in_table(conn, String.valueOf(codeInt), smName.getText(), expCode.getText(),f.toDateString(date.getDate().toString()),amount.getText(),vanCode.getText(),finCode.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
                }

                if(tf){
                    code.setText(String.valueOf(codeInt));
                    forBackBtnEnable(true);
                    recEditBtnEnable(true);
                    recEditActionBtnVisible(false);
                    reportpanelfields(true);
                }
                System.out.println("Is Inserted :"+ tf);
                data.close_database(conn);
            } catch (SQLException ex) {
                Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Enter Name OR Press Cancel to Contine  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNowActionPerformed
         if(!(code.getText().toString().equalsIgnoreCase(""))){
        
        findRecords(code.getText());
        btnEdit.requestFocus();
            reportpanelfields(true);
         }
                 
    else
        {
            JFrame j=new JFrame();
            j.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(j, "Please Enter Code or Click on Cancel to Contine...  ", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            code.requestFocus();       
        
         }
        
    }//GEN-LAST:event_btnSearchNowActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            recEditActionBtnVisible(false);
            forBackBtnEnable(true);
            recEditBtnEnable(true);
            textFieldsEditable(false);
            code.setEditable(false);
            reportpanelfields(true);
            setLastRec();
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnAdd.requestFocus();
        
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            boolean tf=false;

            tf=data.update_exp_dep(conn,code.getText(),expCode.getText(),smName.getText(),f.toDateString(date.getDate().toString()),amount.getText(),vanCode.getText(),finCode.getText());
            if(tf){
                textFieldsEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
            reportpanelfields(true);

            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        btnAdd.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void smNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smNameActionPerformed

    private void smNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smNameKeyReleased
         try {
            updateComboBox(smName, smNameD,"sm");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_smNameKeyReleased

    private void expCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expCodeKeyReleased
        try {
            updateComboBox(expCode, expName,"exp");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_expCodeKeyReleased

    private void smNameDPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_smNameDPopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            smNameD.setModel(buildAllComboBoxModel("sm"));
            if(setSelectedComboItem(smName,smNameD,((!smName.getText().isEmpty())?data.find_sm_name_by_code(conn, smName.getText()):""))){
                
            }else{
                smName.setText(getCode(smNameD.getSelectedItem().toString(),"sm"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_smNameDPopupMenuWillBecomeVisible

    private void smNameDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smNameDActionPerformed
        System.out.println("smNameD.getSelectedItem().toString()"+smNameD.getSelectedItem().toString());
        smName.setText(getCode(smNameD.getSelectedItem().toString(),"sm"));
    }//GEN-LAST:event_smNameDActionPerformed

    private void expNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expNameActionPerformed
        System.out.println("expName.getSelectedItem().toString()"+expName.getSelectedItem().toString());
        expCode.setText(getCode(expName.getSelectedItem().toString(),"exp"));
    }//GEN-LAST:event_expNameActionPerformed

    private void expNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_expNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            expName.setModel(buildAllComboBoxModel("exp"));
            if(setSelectedComboItem(expCode,expName,((!expCode.getText().isEmpty())?data.find_exp_name_by_code(conn, expCode.getText()):""))){
                
            }else{
                expCode.setText(getCode(expName.getSelectedItem().toString(),"exp"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_expNamePopupMenuWillBecomeVisible

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
 if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnUpdate.requestFocus();
            btnSave.requestFocus();                   
        
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP) {
            date.requestFocus();
        }    }//GEN-LAST:event_amountKeyPressed

    private void smNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smNameKeyPressed

if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
               if(!(smName.getText().toString().equalsIgnoreCase("")))
        {     
            expCode.requestFocus();
            expCode.selectAll();
        }
    
        else
        {         
           smNameD.requestFocus();     
        }
                  
        
        }
      
    }//GEN-LAST:event_smNameKeyPressed

    private void smNameDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smNameDKeyPressed
        //            code here
    }//GEN-LAST:event_smNameDKeyPressed

    private void expCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expCodeKeyPressed

        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
           if(!(expCode.getText().toString().equalsIgnoreCase("")))
        {     
            date.requestFocus();
        }
        else
        {         
           expName.requestFocus(); 
        }
        }
        else if(evt.getKeyCode() == KeyEvent.VK_UP)  {
            smName.requestFocus();
            smName.selectAll();
         }
    }//GEN-LAST:event_expCodeKeyPressed

    private void expNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expNameKeyPressed
            //Code Here
    }//GEN-LAST:event_expNameKeyPressed

    private void dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyPressed
            //code here
    }//GEN-LAST:event_dateKeyPressed

    private void expCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expCodeActionPerformed

    private void cb_empnamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cb_empnamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            cb_empname.setModel(buildAllComboBoxModel("sm"));
            if(setSelectedComboItem(empcode,cb_empname,((!empcode.getText().isEmpty())?data.find_sm_name_by_code(conn, empcode.getText()):""))){
                
            }else{
                empcode.setText(getCode(cb_empname.getSelectedItem().toString(),"sm"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_cb_empnamePopupMenuWillBecomeVisible

    private void cb_empnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_empnameActionPerformed
        System.out.println("cb_empname.getSelectedItem().toString()"+cb_empname.getSelectedItem().toString());
        empcode.setText(getCode(cb_empname.getSelectedItem().toString(),"sm"));
    }//GEN-LAST:event_cb_empnameActionPerformed

    private void cb_empnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cb_empnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_empnameKeyPressed

    private void empcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empcodeActionPerformed

    private void empcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empcodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_empcodeKeyPressed

    private void empcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empcodeKeyReleased
        try {
            updateComboBox(empcode, cb_empname,"sm");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_empcodeKeyReleased

    private void expcode_repActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expcode_repActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expcode_repActionPerformed

    private void expcode_repKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expcode_repKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_expcode_repKeyPressed

    private void expcode_repKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expcode_repKeyReleased
        try {
            updateComboBox(expcode_rep, cb_expname,"exp");
        } catch (Exception ex) {
            Logger.getLogger(EMPREC.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_expcode_repKeyReleased

    private void cb_expnamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cb_expnamePopupMenuWillBecomeVisible
       PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            cb_expname.setModel(buildAllComboBoxModel("exp"));
            if(setSelectedComboItem(expcode_rep,cb_expname,((!expcode_rep.getText().isEmpty())?data.find_exp_name_by_code(conn, expcode_rep.getText()):""))){
                
            }else{
                expcode_rep.setText(getCode(cb_expname.getSelectedItem().toString(),"exp"));
            }
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_cb_expnamePopupMenuWillBecomeVisible

    private void cb_expnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_expnameActionPerformed
        expcode_rep.setText(getCode(cb_expname.getSelectedItem().toString(),"exp"));
    }//GEN-LAST:event_cb_expnameActionPerformed

    private void cb_expnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cb_expnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_expnameKeyPressed

    private void fromdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fromdateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromdateKeyPressed

    private void todateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_todateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_todateKeyPressed

    private void btnempallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnempallActionPerformed
        try {
        String s= "D:\\MPROREP\\exprep_all.jasper";
        Map parametersMap = new HashMap();
        
            parametersMap.put("fromdate",c.toDateString(dateIncrementer.addDays(fromdate.getDate(), 0).toString()));
            parametersMap.put("todate",c.toDateString(dateIncrementer.addDays(todate.getDate(), 0).toString()));
//            JasperReport jr = JasperCompileManager.compileReport(s);
//            JasperPrint jasperPrint = JasperFillManager.fillReport(jr,parametersMap,connAA);
//            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
//            createJasperView(jasperViewer);
            
             JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(s, parametersMap, connAA);
            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
            createJasperView(jasperViewer);
                    
        
        } catch (Exception e) {
            System.out.println("Exception ===> "+e);
      }
    }//GEN-LAST:event_btnempallActionPerformed

    private void btnexp_empallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexp_empallActionPerformed

        DynamicERP.dialoge.newdataentry.dialogeClass.setModelExpDepWin( false ) ;
        
        try {
            
        String s= "D:\\MPROREP\\exprep_emp_all.jasper";
        Map parametersMap = new HashMap();
        
            parametersMap.put("fromdate",c.toDateString(dateIncrementer.addDays(fromdate.getDate(), 0).toString()));
            parametersMap.put("todate",c.toDateString(dateIncrementer.addDays(todate.getDate(), 0).toString()));
            parametersMap.put("EMPCODE",Integer.parseInt(empcode.getText()));
//        System.out.println("custCode : "+smName.getText());
            
        JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(s, parametersMap, connAA);
        JasperViewer jasperViewer =  new JasperViewer(jasperPrint, false);
            createJasperView(jasperViewer);
                    
                    
        } catch (Exception e) {
            System.out.println("Exception ===> "+e);
      }    }//GEN-LAST:event_btnexp_empallActionPerformed

    private void btnempandexpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnempandexpActionPerformed
        DynamicERP.dialoge.newdataentry.dialogeClass.setModelExpDepWin( false ) ;
        try {
            
        String s= "D:\\MPROREP\\exprep_emp_exp.jasper";
        Map parametersMap = new HashMap();
        
            parametersMap.put("fromdate",c.toDateString(dateIncrementer.addDays(fromdate.getDate(), 0).toString()));
            parametersMap.put("todate",c.toDateString(dateIncrementer.addDays(todate.getDate(), 0).toString()));
            parametersMap.put("EMPCODE",Integer.parseInt(empcode.getText()));
            parametersMap.put("get_expcode",Integer.parseInt(expcode_rep.getText()));
//        System.out.println("custCode : "+smName.getText());
            
        JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(s, parametersMap, connAA);
        JasperViewer jasperViewer =  new JasperViewer(jasperPrint, false);
            createJasperView(jasperViewer);
                    
        } catch (Exception e) {
            System.out.println("Exception ===> "+e);
      }
    }//GEN-LAST:event_btnempandexpActionPerformed

    private void btnexp_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexp_allActionPerformed
        DynamicERP.dialoge.newdataentry.dialogeClass.setModelExpDepWin( false ) ;
        
        try {
            
        String s= "D:\\MPROREP\\exprep_exp_all.jasper";
        Map parametersMap = new HashMap();
        
            parametersMap.put("fromdate",c.toDateString(dateIncrementer.addDays(fromdate.getDate(), 0).toString()));
            parametersMap.put("todate",c.toDateString(dateIncrementer.addDays(todate.getDate(), 0).toString()));
            parametersMap.put("get_expcode",Integer.parseInt(expcode_rep.getText()));
           
        JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(s, parametersMap, connAA);
          JasperViewer jasperViewer =  new JasperViewer(jasperPrint, false);
            createJasperView(jasperViewer);
                    
                    
        } catch (Exception e) {
            System.out.println("Exception ===> "+e);
      }
    
    }//GEN-LAST:event_btnexp_allActionPerformed

    private void vanCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanCodeActionPerformed

    private void vanCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanCodeKeyPressed

    private void vanCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanCodeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_vanCodeKeyReleased

    private void finCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finCodeActionPerformed

    private void finCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finCodeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_finCodeKeyPressed

    private void finCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finCodeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_finCodeKeyReleased

    private void finNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_finNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            finName.setModel(buildAllComboBoxModel("fin"));
            if(setSelectedComboItem(finCode,finName,((!finCode.getText().isEmpty())?data.find_fin_name_by_code(conn, finCode.getText()):""))){
                
            }else{
                finCode.setText(getCode(finName.getSelectedItem().toString(),"fin"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_finNamePopupMenuWillBecomeVisible

    private void finNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finNameActionPerformed
        System.out.println("finName.getSelectedItem().toString()"+finName.getSelectedItem().toString());
        finCode.setText(getCode(finName.getSelectedItem().toString(),"fin"));
    }//GEN-LAST:event_finNameActionPerformed

    private void finNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_finNameKeyPressed

    private void vanNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_vanNamePopupMenuWillBecomeVisible
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();        
            vanName.setModel(buildAllComboBoxModel("van"));
            if(setSelectedComboItem(vanCode,vanName,((!vanCode.getText().isEmpty())?data.find_van_name_by_code(conn, vanCode.getText()):""))){
            }else{
                vanCode.setText(getCode(vanName.getSelectedItem().toString(),"van"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CUSTREC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vanNamePopupMenuWillBecomeVisible

    private void vanNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanNameActionPerformed
        System.out.println("vanName.getSelectedItem().toString()"+vanName.getSelectedItem().toString());
        vanCode.setText(getCode(vanName.getSelectedItem().toString(),"van"));
    }//GEN-LAST:event_vanNameActionPerformed

    private void vanNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanNameKeyPressed
    private void enableFields(javax.swing.JFrame aThis, boolean b) {
        Component[] c = new Component[this.getContentPane().getComponentCount()];
        c=aThis.getContentPane().getComponents();
        for(int i=0;i<aThis.getContentPane().getComponentCount();i++){
            System.out.println("Component Class:"+c[i].getClass());
            if(c[i].getClass().toString().contains("javax.swing.JTextField")||c[i].getClass().toString().contains("javax.swing.JComboBox")){
                c[i].setEnabled(b);
            }
        }
    }
    
    public boolean setSelectedComboItem(JTextField textField,JComboBox comboBox, String value)
    {
        boolean tf=false;
        String item;
        if(!value.isEmpty()){
            for (int i = 0; i < comboBox.getItemCount(); i++)
            {
                item = (String)comboBox.getItemAt(i);
                if (!item.isEmpty())
                {
                    if (item.equals(value))
                    {
                        comboBox.setSelectedIndex(i);
                        tf=true;
                        break;
                    }
                }else{
                    System.out.println(">>>> Message: Item is empty. . . ");
                    JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "First Add Items in : "+comboBox.getName(), "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                }
            }   
        }else{
            System.out.println(">>>> Message: Value could not be  Selected . . . ");
            comboBox.setSelectedIndex(0);
        }
        return tf;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" expCode=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EXPDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EXPDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EXPDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EXPDEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EXPDEP().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrior;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchNow;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnempall;
    private javax.swing.JButton btnempandexp;
    private javax.swing.JButton btnexp_all;
    private javax.swing.JButton btnexp_empall;
    private javax.swing.JComboBox cb_empname;
    private javax.swing.JComboBox cb_expname;
    private javax.swing.JTextField code;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField empcode;
    private javax.swing.JTextField expCode;
    private javax.swing.JComboBox expName;
    private javax.swing.JTextField expcode_rep;
    private javax.swing.JTextField finCode;
    private javax.swing.JComboBox finName;
    private com.toedter.calendar.JDateChooser fromdate;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pan_expence_entry;
    private javax.swing.JPanel pan_expence_report;
    private javax.swing.JTextField smName;
    private javax.swing.JComboBox smNameD;
    private javax.swing.JLabel suppCat;
    private javax.swing.JLabel suppCat1;
    private javax.swing.JLabel suppCat2;
    private javax.swing.JLabel suppCat3;
    private javax.swing.JLabel suppCat4;
    private javax.swing.JLabel suppCat5;
    private javax.swing.JLabel suppCat6;
    private com.toedter.calendar.JDateChooser todate;
    private javax.swing.JTextField vanCode;
    private javax.swing.JComboBox vanName;
    // End of variables declaration//GEN-END:variables
    
    //****************************************************************************
    //****************************************************************************
    //****************************************************************************
    //*************************************************s***************************
    private void initComboBox() {
        int upperLimit=1990;
        int lowerLimit=2015;
        int indexSize=lowerLimit-upperLimit;
        String[] y =new String[indexSize+1];
        for(int i3=0;i3<indexSize+1;i3++)
        {
            y[i3]=String.valueOf(upperLimit);
            upperLimit=upperLimit+1;
        }
        
        
    }

    private boolean isLeapYear(int i) {
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.YEAR, i);
        return cal.getActualMaximum(DAY_OF_YEAR) > 365;
    }
    
    //****************************************************************************
    //****************************************************************************
    //****************************************************************************
    //****************************************************************************
    
    private void setFirstRec() {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_first_exp_dep(conn);
            if(stock==null){
                code.setText("");
                smName.setText("");
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "No data Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setLastRec() throws ParseException {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> stock = data.get_last_exp_dep(conn);
            if(stock.get(0)==null){
                code.setText("");
                smName.setText("");
                vanCode.setText("");
                finCode.setText("");
            }else{
                setTextInFields(stock);
            }
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void forBackBtnEnable(boolean b) {
       btnFirst.setEnabled(b);
       btnLast.setEnabled(b);
       btnPrior.setEnabled(b);
       btnNext.setEnabled(b);
    }
    private void saveUpdateBtnVisible(String s, boolean b) {
        switch (s.toLowerCase()) {
            case "save":
                btnSave.setVisible(b);
                break;
            case "update":
                btnUpdate.setVisible(b);
                break;
            case "search":
                btnSearchNow.setVisible(b);
                break;
            case "all":
                btnSearchNow.setVisible(b);
                btnSave.setVisible(b);
                btnUpdate.setVisible(b);
                break;
        }
        btnCancel.setVisible(b);
    }
    private void recEditBtnEnable(boolean b) {
        btnAdd.setEnabled(b);
        btnDel.setEnabled(b);
        btnSearch.setEnabled(b);
        btnView.setEnabled(b);
        btnEdit.setEnabled(b);
    }

    private void recEditActionBtnVisible(boolean b) {
        btnSave.setVisible(b);
        btnUpdate.setVisible(b);
        btnSearchNow.setVisible(b);
        btnCancel.setVisible(b);
    }
    private void textFieldsEditable(boolean b){
        smName.setEditable(b);
        smNameD.setEnabled(b);
        vanCode.setEditable(b);
        vanName.setEnabled(b);
        finCode.setEditable(b);
        finName.setEnabled(b);
        expCode.setEditable(b);
        expName.setEnabled(b);
        date.setEnabled(b);
        amount.setEditable(b);
    }

    private void setNullTextFields() {
        smName.setText("");
        expCode.setText("");
        date.setDate(null);
        amount.setText("");
        vanCode.setText("");
        finCode.setText("");
    }
    private void updateComboBox(JTextField textField,JComboBox comboBox,String c) throws Exception {
        comboBox.setModel(buildOneComboBoxModel(textField.getText(),c));
    }
    public static DefaultComboBoxModel buildAllComboBoxModel(String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        ArrayList<String> elements = new <String> ArrayList() ;
        try {
            conn = data.connect_database();
            boolean tf=false;
            switch (c) {
                case "sm":
                    elements=data.find_all_sm_name_by_code(conn);
                    break;
                case "exp":
                    elements=data.find_all_exp_name_by_code(conn);
                    break;
                case "van":
                    elements=data.find_all_van_name_by_code(conn);
                    break;
                case "fin":
                    elements=data.find_all_fin_name_by_code(conn);
                    break;
            }
            if(elements!=null){    
                for(String s : elements){
                    comboBoxModel.addElement(s);
                }
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Edited", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Is Inserted :"+ tf);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }
    public static DefaultComboBoxModel buildOneComboBoxModel(String id,String c) throws Exception {
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
        PAK_DB data =new PAK_DB();
        Connection conn;
        String element=null;
        try {
            conn = data.connect_database();
            
            switch (c) {
                case "sm":
                    if(!id.equals("")){
                        element=data.find_sm_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "no Id Found");
                    }
                    break;
                case "exp":
                    if(!id.equals("")){
                        element=data.find_exp_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JOptionPane.showMessageDialog(null, "no Id Found");
                    }
                    break;
                case "van":
                    if(!id.equals("")){
                        element=data.find_van_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JOptionPane.showMessageDialog(null, "no Id Found");
                    }
                    break;
                case "fin":
                    if(!id.equals("")){
                        element=data.find_fin_name_by_code(conn,id);
                        comboBoxModel.addElement(element);
                    }else{
        //                JOptionPane.showMessageDialog(null, "no Id Found");
                    }
                    break;
            }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return comboBoxModel;
    }

    private void styleComboBox(JComboBox combo) {
        combo.setRenderer(new DefaultListCellRenderer() {
        public void paint(Graphics g) {
            super.paint(g);
        }
    });
    }

    private String getCode(String name,String c) {
        String s="";
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
              switch (c) {
                    case "sm":
                        if(!name.equals("")){
                            s=data.find_sm_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "exp":
                        if(!name.equals("")){
                            s=data.find_exp_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "van":
                        if(!name.equals("")){
                            s=data.find_van_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                    case "fin":
                        if(!name.equals("")){
                            s=data.find_fin_code_by_name(conn,name.trim());
                        }else{
            //                JFrame j=new JFrame();
//                    j.setAlwaysOnTop(true);
//                    JOptionPane.showMessageDialog(j, "Emter Id Found");
                        }
                        break;
                }
            
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
    }
    private void setTextInFields(ArrayList<String> stock) throws Exception {
        code.setText(stock.get(0));
        smName.setText(stock.get(2));
        smNameD.setModel(buildOneComboBoxModel(stock.get(2),"sm"));
        expCode.setText(stock.get(1));
        expName.setModel(buildOneComboBoxModel(stock.get(1),"exp"));
        amount.setText(stock.get(4));
        amount.setText(stock.get(4));
        date.setDate(f.toDate(stock.get(3)));
        
        vanCode.setText(stock.get(5));
        vanName.setModel(buildOneComboBoxModel(stock.get(5),"van"));
        finCode.setText(stock.get(6));
        finName.setModel(buildOneComboBoxModel(stock.get(6),"fin"));
    }

    private void findRecords(String codeExpRec) {
        PAK_DB data =new PAK_DB();
        Connection conn;
        try {
            conn = data.connect_database();
            ArrayList<String> s= data.find_exp_dep_rec_by_code(conn, codeExpRec);
            if (s!=null){
                smName.setText(s.get(1));
                try {
                    smNameD.setModel(buildOneComboBoxModel(smName.getText(),"sm"));
                } catch (Exception ex) {
                    Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
                }
                expCode.setText(s.get(0));
                try {
                    expName.setModel(buildOneComboBoxModel(expCode.getText(),"exp"));
                } catch (Exception ex) {
                    Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
                }
                date.setDate(f.toDate(s.get(2)));
                amount.setText(s.get(3));
                vanCode.setText(s.get(4));
                finCode.setText(s.get(5));
                amount.setText(s.get(3));
                code.setEditable(false);
                forBackBtnEnable(true);
                recEditBtnEnable(true);
                recEditActionBtnVisible(false);
            }else{
                JFrame j=new JFrame();
                    j.setAlwaysOnTop(true);
                    JOptionPane.showMessageDialog(j, "Not Found", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
            }
            System.out.println("Asset Found is :"+ s);
            data.close_database(conn);
        } catch (SQLException ex) {
            Logger.getLogger(FIRMREC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EXPDEP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void reportpanelfields(boolean b) {
        expcode_rep.setEditable(b);
        empcode.setEditable(b);
        cb_empname.setEnabled(b);
        cb_expname.setEnabled(b);
        btnempandexp.setEnabled(b);
        btnempall.setEnabled(b);
        btnexp_empall.setEnabled(b);
        btnexp_all.setEnabled(b);
        fromdate.setEnabled(b);
        todate.setEnabled(b);
        
        
    }
}
